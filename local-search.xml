<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ssm整合</title>
    <link href="/2021/11/15/ssm%E6%95%B4%E5%90%88/"/>
    <url>/2021/11/15/ssm%E6%95%B4%E5%90%88/</url>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><ul><li><p>SSM-CRUD</p></li><li><p>ssm:SpringMVC+Spring+MyBatis</p></li><li><p>CRUD：</p><ul><li> Create（创建）</li><li>Retrieve（查询）</li><li>Update（更新）</li><li>Delete（删除</li></ul></li></ul><h1 id="二、功能点"><a href="#二、功能点" class="headerlink" title="二、功能点"></a>二、功能点</h1><ol><li>分页</li><li>数据校验：jquery前端校验、 JSR303后端校验</li><li>ajax</li><li>Rest风格的URI；使用HTTP协议请求方式的动词，来表示对资源的操作（GET（查询），POST（新增），PUT（修改），DELETE（删除））</li></ol><h1 id="三、技术点"><a href="#三、技术点" class="headerlink" title="三、技术点"></a>三、技术点</h1><ol><li>基础框架-ssm（SpringMVC+Spring+MyBatis） </li><li>数据库-MySQL</li><li>前端框架-bootstrap快速搭建简洁美观的界面</li><li>项目的依赖管理-Maven</li><li>分页-pagehelper</li><li>逆向工程-MyBatis Generator</li></ol><h1 id="四、基础环境搭建"><a href="#四、基础环境搭建" class="headerlink" title="四、基础环境搭建"></a>四、基础环境搭建</h1><h2 id="1-创建一个maven工程"><a href="#1-创建一个maven工程" class="headerlink" title="1.创建一个maven工程"></a>1.创建一个maven工程</h2><h2 id="2-引入项目依赖的jar包"><a href="#2-引入项目依赖的jar包" class="headerlink" title="2.引入项目依赖的jar包"></a>2.引入项目依赖的jar包</h2><p>​    spring、springmvc、mybatis、数据库连接池，驱动包、其他（jstl，servlet-api，junit） </p><p>本人在引入依赖的时候服务器报错：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">java.lang.NoSuchMethodError: org.springframework.web.servlet.handler.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">AbstractHandlerMapping</span>.</span></span>obtain<span class="hljs-constructor">ApplicationContext()</span>Lorg/springframework/context/ApplicationContext;<br></code></pre></td></tr></table></figure><p>是因为引入spring和springmvc依赖时发生的冲突。在引入springmvc依赖的时候，maven会自动维护spring相关的依赖，无需手动添加。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- SpringMVC --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-webmvc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--            &lt;groupId&gt;org.springframework&lt;/groupId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--            &lt;version&gt;4.3.10.RELEASE&lt;/version&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--            &lt;groupId&gt;org.springframework&lt;/groupId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--            &lt;artifactId&gt;spring-orm&lt;/artifactId&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--            &lt;version&gt;4.3.10.RELEASE&lt;/version&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="3-引入bootstrap前端框架"><a href="#3-引入bootstrap前端框架" class="headerlink" title="3.引入bootstrap前端框架"></a>3.引入bootstrap前端框架</h2><p><a href="https://v3.bootcss.com/getting-started/#download">下载地址</a>            <a href="https://v3.bootcss.com/css/">样式文档</a></p><p>下载之后解压，将解压文件复制到：webapp -&gt; static 路径下</p><p>基本模板：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>唯赞雷达系统<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../../static/js/jquery-1.12.4.min.js&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Bootstrap --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../../static/bootstrap-3.4.1-dist/css/bootstrap.min.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../../static/bootstrap-3.4.1-dist/js/bootstrap.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="4-编写ssm整合的关键配置文件"><a href="#4-编写ssm整合的关键配置文件" class="headerlink" title="4.编写ssm整合的关键配置文件"></a>4.编写ssm整合的关键配置文件</h2><p>web.xml，spring,springmvc,mybatis，使用mybatis的逆向工程生成对应的bean以及mapper</p><h3 id="4-1-web-xml"><a href="#4-1-web-xml" class="headerlink" title="4.1 web.xml"></a>4.1 web.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;4.0&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--3、配置springMVC的编码过滤器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>encoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>forceResponseEncoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--1、启动Spring的容器  --&gt;</span><br>    <span class="hljs-comment">&lt;!-- needed for ContextLoaderListener --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">context-param</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Bootstraps the root web application context before servlet initialization --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">listener</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="hljs-tag">&lt;/<span class="hljs-name">listener-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">listener</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 2、配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>dispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 通过初始化参数指定SpringMVC配置文件的位置和名称 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- contextConfigLocation为固定值 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 使用classpath:表示从类路径查找配置文件，例如maven工程中的src/main/resources --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:springMVC.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">             作为框架的核心组件，在启动过程中有大量的初始化操作要做</span><br><span class="hljs-comment">            而这些操作放在第一次请求时才执行会严重影响访问速度</span><br><span class="hljs-comment">            因此需要通过此标签将启动控制DispatcherServlet的初始化时间提前到服务器启动时</span><br><span class="hljs-comment">        --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">load-on-startup</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">load-on-startup</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>dispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">            设置springMVC的核心控制器所能处理的请求的请求路径</span><br><span class="hljs-comment">            /所匹配的请求可以是/login或.html或.js或.css方式的请求路径</span><br><span class="hljs-comment">            但是/不能匹配.jsp请求路径的请求</span><br><span class="hljs-comment">        --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 4、使用Rest风格的URI，将页面普通的post请求转为指定的delete或者put请求 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>HttpPutFormContentFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.HttpPutFormContentFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>HttpPutFormContentFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4-2-spring-mybatis"><a href="#4-2-spring-mybatis" class="headerlink" title="4.2 spring,mybatis"></a>4.2 spring,mybatis</h3><p>dbconfig.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml">jdbc.driver=com.mysql.jdbc.Driver<br>jdbc.url=jdbc:mysql://localhost:3306/db_wzradar<br>jdbc.username=root<br>jdbc.password=root<br><br>orcl.driver=oracle.jdbc.OracleDriver<br>orcl.url=jdbc:oracle:thin:@localhost:1521:orcl<br>orcl.username=scott<br>orcl.password=123456<br></code></pre></td></tr></table></figure><p>application.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-comment">&lt;!--suppress ALL --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:aop</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/aop&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:tx</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:mybatis-spring</span>=<span class="hljs-string">&quot;http://mybatis.org/schema/mybatis-spring&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--扫描组件--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;com.deepcre.radar&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">context:exclude-filter</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;annotation&quot;</span></span><br><span class="hljs-tag">                                <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;org.springframework.stereotype.Controller&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">context:component-scan</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 数据源 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:property-placeholder</span> <span class="hljs-attr">location</span>=<span class="hljs-string">&quot;classpath:dbconfig.properties&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pooledDataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClass&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;jdbcUrl&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--================== 配置和MyBatis的整合=============== --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sqlSessionFactory&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 指定mybatis全局配置文件的位置 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;configLocation&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;classpath:mybatis-config.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;pooledDataSource&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 指定mybatis，mapper文件的位置 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mapperLocations&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;classpath:mapper/*.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--扫描所有dao接口的实现，加入到ioc容器中 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;basePackage&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.deepcre.radar.dao&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 配置一个可以执行批量的sqlSession --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sqlSession&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sqlSessionFactory&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;sqlSessionFactory&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;executorType&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;BATCH&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--=============================================  --&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- ===============事务控制的配置 ================--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;transactionManager&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--控制住数据源  --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;pooledDataSource&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）  --&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">aop:config</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 切入点表达式 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:pointcut</span> <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;execution(* com.deepcre.radar.service..*(..))&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;txPoint&quot;</span>/&gt;</span><br>        <span class="hljs-comment">&lt;!-- 配置事务增强 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:advisor</span> <span class="hljs-attr">advice-ref</span>=<span class="hljs-string">&quot;txAdvice&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;txPoint&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">aop:config</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置事务增强，事务如何切入  --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tx:advice</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;txAdvice&quot;</span> <span class="hljs-attr">transaction-manager</span>=<span class="hljs-string">&quot;transactionManager&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tx:attributes</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 所有方法都是事务方法 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tx:method</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;*&quot;</span>/&gt;</span><br>            <span class="hljs-comment">&lt;!--以get开始的所有方法  --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tx:method</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;get*&quot;</span> <span class="hljs-attr">read-only</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tx:attributes</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tx:advice</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） --&gt;</span><br><br><span class="hljs-comment">&lt;!--    &amp;lt;!&amp;ndash; 事务管理器 &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;bean id=&quot;dataSourceTransactionManager&quot;--&gt;</span><br><span class="hljs-comment">&lt;!--          class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;/bean&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &amp;lt;!&amp;ndash; 基于注解的事务管理 &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;tx:annotation-driven transaction-manager=&quot;dataSourceTransactionManager&quot;/&gt;--&gt;</span><br><br><br><span class="hljs-comment">&lt;!--    &amp;lt;!&amp;ndash;  配置SqlSessionFactoryBean--&gt;</span><br><span class="hljs-comment">&lt;!--        Mybatis提供的: org.mybatis.spring.SqlSessionFactoryBean--&gt;</span><br><span class="hljs-comment">&lt;!--        MP提供的:com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean--&gt;</span><br><span class="hljs-comment">&lt;!--     &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;bean id=&quot;sqlSessionFactoryBean&quot; class=&quot;com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean&quot;&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &amp;lt;!&amp;ndash; 数据源 &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &amp;lt;!&amp;ndash; 别名处理 &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.deepcre.mvc.beans&quot;&gt;&lt;/property&gt;--&gt;</span><br><br><span class="hljs-comment">&lt;!--        &amp;lt;!&amp;ndash; 注入全局MP策略配置 &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;globalConfig&quot; ref=&quot;globalConfiguration&quot;&gt;&lt;/property&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;/bean&gt;--&gt;</span><br><br><span class="hljs-comment">&lt;!--    &amp;lt;!&amp;ndash; 定义MybatisPlus的全局策略配置&amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;bean id =&quot;globalConfiguration&quot; class=&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &amp;lt;!&amp;ndash; 在2.3版本以后，dbColumnUnderline 默认值就是true &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;dbColumnUnderline&quot; value=&quot;true&quot;&gt;&lt;/property&gt;--&gt;</span><br><br><span class="hljs-comment">&lt;!--        &amp;lt;!&amp;ndash; 全局的主键策略 &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;idType&quot; value=&quot;0&quot;&gt;&lt;/property&gt;--&gt;</span><br><br><span class="hljs-comment">&lt;!--        &amp;lt;!&amp;ndash; 全局的表前缀策略配置 &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;tablePrefix&quot; value=&quot;tbl_&quot;&gt;&lt;/property&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;/bean&gt;--&gt;</span><br><br><span class="hljs-comment">&lt;!--    &amp;lt;!&amp;ndash;--&gt;</span><br><span class="hljs-comment">&lt;!--        配置mybatis 扫描mapper接口的路径--&gt;</span><br><span class="hljs-comment">&lt;!--     &amp;ndash;&amp;gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;property name=&quot;basePackage&quot; value=&quot;com.deepcre.mvc.mapper&quot;&gt;&lt;/property&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--    &lt;/bean&gt;--&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="4-3-springmvc"><a href="#4-3-springmvc" class="headerlink" title="4.3 springmvc"></a>4.3 springmvc</h3><p>springMVC.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:mvc</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--扫描组件--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;com.deepcre.radar.controller&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">context:component-scan</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置thymeleaf的视图解析器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;viewResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;order&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateEngine&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateResolver&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span><br><br>                        <span class="hljs-comment">&lt;!-- 视图前缀 --&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;prefix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span><br><br>                        <span class="hljs-comment">&lt;!-- 视图后缀 --&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;suffix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;.html&quot;</span>/&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateMode&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;HTML5&quot;</span>/&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  处理静态资源，例如html、js、css、jpg</span><br><span class="hljs-comment"> 若只设置该标签，则只能访问静态资源，其他请求则无法访问</span><br><span class="hljs-comment"> 此时必须设置&lt;mvc:annotation-driven/&gt;解决问题</span><br><span class="hljs-comment">--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:default-servlet-handler</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 开启mvc注解驱动 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:annotation-driven</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mvc:message-converters</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 处理响应中文内容乱码 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultCharset&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;supportedMediaTypes&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>text/html<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>application/json<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">mvc:message-converters</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mvc:annotation-driven</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;multipartResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">configuration</span></span><br><span class="hljs-meta">  <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span><br><span class="hljs-meta">  <span class="hljs-meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">settings</span>&gt;</span><br><span class="hljs-comment">&lt;!--驼峰命名规则--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">setting</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">typeAliases</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.deepcre.radar.bean&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">typeAliases</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span> <span class="hljs-attr">interceptor</span>=<span class="hljs-string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--分页参数合理化  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;reasonable&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><br><br></code></pre></td></tr></table></figure><h3 id="4-4-使用mybatis的逆向工程生成对应的bean以及mapper"><a href="#4-4-使用mybatis的逆向工程生成对应的bean以及mapper" class="headerlink" title="4.4 使用mybatis的逆向工程生成对应的bean以及mapper"></a>4.4 使用mybatis的逆向工程生成对应的bean以及mapper</h3><h2 id="5-测试mapper"><a href="#5-测试mapper" class="headerlink" title="5.测试mapper"></a>5.测试mapper</h2><p>测试单元依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--Spring-test --&gt;</span><br><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-test --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.3.7.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span>: alvis-yiang</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Date</span>: Created in 17:07 2021/11/9</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span>:测试dao层的工作</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 推荐Spring的项目就可以使用Spring的单元测试，可以自动注入我们需要的组件</span><br><span class="hljs-comment"> * 1、导入SpringTest模块</span><br><span class="hljs-comment"> * 2、<span class="hljs-doctag">@ContextConfiguration</span>指定Spring配置文件的位置</span><br><span class="hljs-comment"> * 3、直接autowired要使用的组件即可</span><br><span class="hljs-comment"> */</span><br><br><br><span class="hljs-meta">@RunWith(SpringJUnit4ClassRunner.class)</span><br><span class="hljs-meta">@ContextConfiguration(locations = &#123;&quot;classpath:applicationContext.xml&quot;&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MapperTest</span> </span>&#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    DepartmentMapper departmentMapper;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testMyBatis3</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>        System.out.println(departmentMapper);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="五、关键处理"><a href="#五、关键处理" class="headerlink" title="五、关键处理"></a>五、关键处理</h1><h2 id="1-对put请求的处理"><a href="#1-对put请求的处理" class="headerlink" title="1.对put请求的处理"></a>1.对put请求的处理</h2><h3 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h3><p>请求体中有数据，但是Employee对象封装不上：update tbl_emp  where emp_id = 1014;</p><p>如果直接发送ajax=PUT形式的请求<br>封装的数据：Employee ：[empId=1014, empName=null, gender=null, email=null, dId=null]</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Tomcat：<br>1、将请求体中的数据，封装一个map。<br>2、request.getParameter(“empName”)就会从这个map中取值。<br>3、SpringMVC封装POJO对象的时候，会把POJO中每个属性的值，request.getParamter(“email”);</p><p>AJAX发送PUT请求引发的血案：</p><ul><li>PUT请求，请求体中的数据，request.getParameter(“empName”)拿不到</li><li>Tomcat一看是PUT不会封装请求体中的数据为map，只有POST形式的请求才封装请求体为map<pre><code> org.apache.catalina.connector.Request--parseParameters() (3111); protected String parseBodyMethods = &quot;POST&quot;; if( !getConnector().isParseBodyMethod(getMethod()) ) &#123;            success = true;            return;  &#125;</code></pre></li></ul><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>我们要能支持直接发送PUT之类的请求还要封装请求体中的数据</p><ol><li><p>配置上HttpPutFormContentFilter；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>HttpPutFormContentFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.HttpPutFormContentFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>HttpPutFormContentFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>他的作用：将请求体中的数据解析包装成一个map。</p></li><li><p>request被重新包装，request.getParameter()被重写，就会从自己封装的map中取数据</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>ssm</tag>
      
      <tag>spring</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyBatis</title>
    <link href="/2021/11/12/MyBatis/"/>
    <url>/2021/11/12/MyBatis/</url>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="一-下载MyBatis"><a href="#一-下载MyBatis" class="headerlink" title="一.下载MyBatis"></a>一.下载MyBatis</h1><p><a href="https://github.com/mybatis/mybatis-3/">github下载地址</a></p><h1 id="二-MyBatis操作数据库"><a href="#二-MyBatis操作数据库" class="headerlink" title="二.MyBatis操作数据库"></a>二.MyBatis操作数据库</h1><ol><li>创建MyBatis全局配置文件</li></ol><p>/conf/mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">configuration</span></span><br><span class="hljs-meta"> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span><br><span class="hljs-meta"> <span class="hljs-meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">environments</span> <span class="hljs-attr">default</span>=<span class="hljs-string">&quot;development&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">environment</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;development&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">transactionManager</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;JDBC&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dataSource</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;POOLED&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driver&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;123456&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dataSource</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">environment</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">environments</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 将我们写好的sql映射文件（EmployeeMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mappers</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;EmployeeMapper.xml&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mappers</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>创建sql映射文件</li></ol><p>/conf/EmployeeMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">mapper</span></span><br><span class="hljs-meta"> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="hljs-meta"> <span class="hljs-meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.dao.EmployeeMapper&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">namespace:名称空间;指定为接口的全类名</span><br><span class="hljs-comment">id：唯一标识</span><br><span class="hljs-comment">resultType：返回值类型</span><br><span class="hljs-comment">#&#123;id&#125;：从传递过来的参数中取出id值</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">public Employee getEmpById(Integer id);</span><br><span class="hljs-comment"> --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpById&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean.Employee&quot;</span>&gt;</span><br>select id,last_name lastName,email,gender from tbl_employee where id = #&#123;id&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><ul><li>根据全局配置文件，利用SqlSessionFactoryBuilder创建SqlSessionFactory</li><li>使用SqlSessionFactory获取sqlSession对象。一个SqlSession对象代表和数据库的一次会话。</li><li>使用SqlSession根据方法id进行操作</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.mybatis.test;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><br><span class="hljs-keyword">import</span> org.apache.ibatis.io.Resources;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSession;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;<br><span class="hljs-keyword">import</span> org.junit.Test;<br><br><span class="hljs-keyword">import</span> com.atguigu.mybatis.bean.Employee;<br><span class="hljs-keyword">import</span> com.atguigu.mybatis.dao.EmployeeMapper;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1、接口式编程</span><br><span class="hljs-comment"> * 原生：Dao====&gt;  DaoImpl</span><br><span class="hljs-comment"> * mybatis：Mapper====&gt;  xxMapper.xml</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * 2、SqlSession代表和数据库的一次会话；用完必须关闭；</span><br><span class="hljs-comment"> * 3、SqlSession和connection一样她都是非线程安全。每次使用都应该去获取新的对象。</span><br><span class="hljs-comment"> * 4、mapper接口没有实现类，但是mybatis会为这个接口生成一个代理对象。</span><br><span class="hljs-comment"> * （将接口和xml进行绑定）</span><br><span class="hljs-comment"> * EmployeeMapper empMapper =sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="hljs-comment"> * 5、两个重要的配置文件：</span><br><span class="hljs-comment"> * mybatis的全局配置文件：包含数据库连接池信息，事务管理器信息等...系统运行环境信息</span><br><span class="hljs-comment"> * sql映射文件：保存了每一个sql语句的映射信息：</span><br><span class="hljs-comment"> * 将sql抽取出来。</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> lfy</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyBatisTest</span> </span>&#123;<br><br><br>    <span class="hljs-comment">//根据全局配置文件，利用SqlSessionFactoryBuilder创建SqlSessionFactory</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> SqlSessionFactory <span class="hljs-title">getSqlSessionFactory</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>String resource = <span class="hljs-string">&quot;mybatis-config.xml&quot;</span>;<br>InputStream inputStream = Resources.getResourceAsStream(resource);<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1、根据xml配置文件（全局配置文件）创建一个SqlSessionFactory对象 有数据源一些运行环境信息</span><br><span class="hljs-comment"> * 2、sql映射文件；配置了每一个sql，以及sql的封装规则等。 </span><br><span class="hljs-comment"> * 3、将sql映射文件注册在全局配置文件中</span><br><span class="hljs-comment"> * 4、写代码：</span><br><span class="hljs-comment"> * 1）、根据全局配置文件得到SqlSessionFactory；</span><br><span class="hljs-comment"> * 2）、使用sqlSession工厂，获取到sqlSession对象使用他来执行增删改查</span><br><span class="hljs-comment"> * 一个sqlSession就是代表和数据库的一次会话，用完关闭</span><br><span class="hljs-comment"> * 3）、使用sql的唯一标志来告诉MyBatis执行哪个sql。sql都是保存在sql映射文件中的。</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br><br><span class="hljs-comment">// 2、获取sqlSession实例，能直接执行已经映射的sql语句</span><br><span class="hljs-comment">// sql的唯一标识：statement Unique identifier matching the statement to use.</span><br><span class="hljs-comment">// 执行sql要用的参数：parameter A parameter object to pass to the statement.</span><br>SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br><br>SqlSession openSession = sqlSessionFactory.openSession();<br><span class="hljs-keyword">try</span> &#123;<br>Employee employee = openSession.selectOne(<br><span class="hljs-string">&quot;com.atguigu.mybatis.EmployeeMapper.selectEmp&quot;</span>, <span class="hljs-number">1</span>);<br>System.out.println(employee);<br>&#125; <span class="hljs-keyword">finally</span> &#123;<br>openSession.close();<br>&#125;<br><br>&#125;<br><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test01</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br><span class="hljs-comment">// 1、获取sqlSessionFactory对象</span><br>SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br><span class="hljs-comment">// 2、获取sqlSession对象</span><br>SqlSession openSession = sqlSessionFactory.openSession();<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// 3、获取接口的实现类对象</span><br><span class="hljs-comment">//会为接口自动的创建一个代理对象，代理对象去执行增删改查方法</span><br>EmployeeMapper mapper = openSession.getMapper(EmployeeMapper.class);<br>Employee employee = mapper.getEmpById(<span class="hljs-number">1</span>);<br>System.out.println(mapper.getClass());<br>System.out.println(employee);<br>&#125; <span class="hljs-keyword">finally</span> &#123;<br>openSession.close();<br>&#125;<br><br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="4"><li>注意点</li></ol><ul><li>SqlSession 的实例<strong>不是线程安全</strong>的，因此是不能被共享的。 </li><li>SqlSession每次<strong>使用完成后需要正确关闭</strong>，这个关闭操作是必须的</li><li>SqlSession可以直接调用方法的id进行数据库操作，但是我们一般还是推荐使用SqlSession获取到Dao接口的代理类，执行代理对象的方法，可以更安全的进行类型检查操作</li></ul><h1 id="三-MyBatis全局配置文件"><a href="#三-MyBatis全局配置文件" class="headerlink" title="三.MyBatis全局配置文件"></a>三.MyBatis全局配置文件</h1><p>MyBatis 的配置文件包含了影响 MyBatis 行为甚深的设置（settings）和属性（properties）信息。文档的顶层结构如下： </p><p>configuration 配置</p><blockquote><p>properties 属性</p></blockquote><blockquote><p>settings 设置</p></blockquote><blockquote><p>typeAliases 类型命名</p></blockquote><blockquote><p>typeHandlers 类型处理器</p></blockquote><blockquote><p>objectFactory 对象工厂</p></blockquote><blockquote><p>plugins 插件</p></blockquote><blockquote><p>environments 环境</p></blockquote><blockquote><blockquote><p>environment 环境变量</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>transactionManager 事务管理器</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>dataSource 数据源</p></blockquote></blockquote></blockquote><blockquote><p>databaseIdProvider 数据库厂商标识</p></blockquote><blockquote><p>mappers 映射器</p></blockquote><h1 id="四-MyBatis映射文件"><a href="#四-MyBatis映射文件" class="headerlink" title="四.MyBatis映射文件"></a>四.MyBatis映射文件</h1><h2 id="参数处理"><a href="#参数处理" class="headerlink" title="参数处理"></a>参数处理</h2><h3 id="与-取值区别"><a href="#与-取值区别" class="headerlink" title="#{}与${}取值区别"></a>#{}与${}取值区别</h3><p>#{}：预编译形式，将==参数==设置到sql语句中，PreparedStatement；防止sql注入</p><p>${}：取出的值直接拼装在sql语句中，会有安全问题；</p><p>大多情况使用#{};</p><p>原生jdbc不支持占位符的地方我们就可以使用${}进行取值</p><p>比如分表、排序；按照年份分表拆分：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> $&#123;<span class="hljs-keyword">year</span>&#125;_salary <span class="hljs-keyword">where</span> xxx;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> tbl_employee <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> $&#123;f_name&#125; $&#123;<span class="hljs-keyword">order</span>&#125;;<br></code></pre></td></tr></table></figure><h3 id="：更丰富的用法："><a href="#：更丰富的用法：" class="headerlink" title="#{}：更丰富的用法："></a>#{}：更丰富的用法：</h3><p>规定参数的一些规则：</p><p>javaType、jdbcType、mode（存储过程）、numericScale、resultMap、typeHandler、jdbcTypeName、expression（未来准备支持的功能）；</p><ul><li>jdbcType通常需要在某种特定的条件下被设置：</li></ul><p>在我们数据为null的时候，有些数据库可能不能识别mybatis对null的默认处理。比如Oracle（报错）。jdbcType OTHER：无效的类型；因为mybatis对所有的null都映射的是原生Jdbc的OTHER类型，oracle不能正确处理。</p><p>根本原因：mybatis全局配置中：jdbcTypeForNull=OTHER：oracle不支持。两种解决方式：</p><ol><li>在sql语句中设置：#{字段名,jdbcType=null}；</li><li>修改mybatis全局配置文件：jdbcTypeForNull=NULL</li></ol><h2 id="返回类型-resultType"><a href="#返回类型-resultType" class="headerlink" title="返回类型(resultType)"></a>返回类型(resultType)</h2><h3 id="返回对象的list"><a href="#返回对象的list" class="headerlink" title="返回对象的list"></a>返回对象的list</h3><p>resultType值设为对象的全类名</p><h3 id="返回map"><a href="#返回map" class="headerlink" title="返回map"></a>返回map</h3><h4 id="一条记录的map"><a href="#一条记录的map" class="headerlink" title="一条记录的map"></a>一条记录的map</h4><p>key就是列名，值就是对应的值</p><p>resultType值设为map</p><h4 id="多条记录的map"><a href="#多条记录的map" class="headerlink" title="多条记录的map"></a>多条记录的map</h4><p>Map&lt;Integer,Employee&gt;：键是这条记录的主键，值是记录封装后的javabean</p><p>resultType值设为对象的全类名（xxx.xxx.Employee）</p><p>在mapper文件中，加注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//告诉mybatis封装这个map的时候使用哪个属性作为主键</span><br><span class="hljs-meta">@MapKey(&quot;id&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Map&lt;Integer,Employee&gt; <span class="hljs-title">getEmpByLastNameLikeReturnMap</span><span class="hljs-params">(String lastname)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="返回类型（resultMap）"><a href="#返回类型（resultMap）" class="headerlink" title="返回类型（resultMap）"></a>返回类型（resultMap）</h2><h3 id="association-定义对象-一个员工对应一个部门"><a href="#association-定义对象-一个员工对应一个部门" class="headerlink" title="association(定义对象,一个员工对应一个部门)"></a>association(定义对象,一个员工对应一个部门)</h3><p>复杂对象映射，pojo中的属性可能是一个对象，使用联合查询</p><ul><li>以级联属性的方式封装对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;resultMap type=<span class="hljs-string">&quot;com.xxx.xxx.Employee&quot;</span> id=<span class="hljs-string">&quot;MyDifEmp&quot;</span>&gt;<br>    &lt;id column=<span class="hljs-string">&quot;id&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;    <br>&lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;lastName&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;did&quot;</span> property=<span class="hljs-string">&quot;dept.id&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;dept_name&quot;</span> property=<span class="hljs-string">&quot;dept.departmentName&quot;</span>/&gt;<br>&lt;/resultMap&gt;<br><br>&lt;select id=<span class="hljs-string">&quot;getEmpAndDept&quot;</span> resultMap=<span class="hljs-string">&quot;MyDifEmp&quot;</span>&gt;<br>    SELECT e.id id,e.last_name last_name,e.gender gender,e.d_id d_id,d.dept_name dept_name from tbl_employee e,tbl_dept d where e.d_id=d.id AND e.id=#&#123;id&#125;<br>&lt;/select&gt;<br></code></pre></td></tr></table></figure><ul><li>association-嵌套结果集</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;resultMap type=<span class="hljs-string">&quot;com.xxx.xxx.Employee&quot;</span> id=<span class="hljs-string">&quot;MyDifEmp&quot;</span>&gt;<br>    &lt;id column=<span class="hljs-string">&quot;id&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;    <br>&lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;lastName&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>    &lt;association property=<span class="hljs-string">&quot;dept&quot;</span> javaType=<span class="hljs-string">&quot;com.xxx.xxx.Dept&quot;</span>&gt;<br>&lt;id column=<span class="hljs-string">&quot;did&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;dept_name&quot;</span> property=<span class="hljs-string">&quot;departmentName&quot;</span>/&gt;<br>    &lt;/association&gt;<br>&lt;/resultMap&gt;<br></code></pre></td></tr></table></figure><ul><li>association-分段查询</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;resultMap type=<span class="hljs-string">&quot;com.xxx.xxx.Employee&quot;</span> id=<span class="hljs-string">&quot;MyDifEmp&quot;</span>&gt;<br>    &lt;id column=<span class="hljs-string">&quot;id&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;    <br>&lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;lastName&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>    &lt;association property=<span class="hljs-string">&quot;dept&quot;</span> <br>    select=<span class="hljs-string">&quot;com.xxx.xxx.EmployeeMapper.getEmpAndDeptById&quot;</span><br>    colunm=<span class="hljs-string">&quot;did&quot;</span>&gt;<br>    &lt;/association&gt;<br>&lt;/resultMap&gt;<br></code></pre></td></tr></table></figure><p>select：调用目标的方法查询当前属性的值</p><p>column：将指定列的值传入目标方法</p><ul><li>association-分段查询&amp;延迟加载</li></ul><p>开启延迟加载和属性按需加载</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">settings</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">setting</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lazyLoadingEnabled&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">setting</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;aggressiveLazyLoading&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="collection（定义集合，一个部门对应多个员工）"><a href="#collection（定义集合，一个部门对应多个员工）" class="headerlink" title="collection（定义集合，一个部门对应多个员工）"></a>collection（定义集合，一个部门对应多个员工）</h3><ul><li>Collection-集合类型&amp;嵌套结果集</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;resultMap type=<span class="hljs-string">&quot;com.xxx.xxx.Department&quot;</span> id=<span class="hljs-string">&quot;MyDept&quot;</span>&gt;<br>    &lt;id column=<span class="hljs-string">&quot;did&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;    <br>&lt;result column=<span class="hljs-string">&quot;dept_name&quot;</span> property=<span class="hljs-string">&quot;departmentName&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>    &lt;collection property=<span class="hljs-string">&quot;emps&quot;</span> ofType=<span class="hljs-string">&quot;com.xxx.xxx.Employee&quot;</span> <br>    &lt;id column=<span class="hljs-string">&quot;eid&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;lastName&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;email&quot;</span> property=<span class="hljs-string">&quot;email&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>    &lt;/collection&gt;<br>&lt;/resultMap&gt;<br><br>&lt;select id=<span class="hljs-string">&quot;getDeptByIdPlus&quot;</span> resultMap=<span class="hljs-string">&quot;MyDept&quot;</span>&gt;<br>    SELECT d.id did,d.dept_name dept_name,e.id eid,e.last_name last_name,e.email email,e.gender gender <br>    FROM tbl_dept d<br>    LEFT JOIN tbl_employee e<br>    ON d.id=e.d_id<br>    WHERE d.id=#&#123;id&#125;<br>    <br>&lt;/select&gt;<br></code></pre></td></tr></table></figure><ul><li>Collection-分步查询&amp;延迟加载</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;resultMap type=<span class="hljs-string">&quot;com.xxx.xxx.Department&quot;</span> id=<span class="hljs-string">&quot;MyDeptStep&quot;</span>&gt;<br>    &lt;id column=<span class="hljs-string">&quot;id&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;    <br>&lt;result column=<span class="hljs-string">&quot;dept_name&quot;</span> property=<span class="hljs-string">&quot;departmentName&quot;</span>/&gt;<br>    &lt;collection property=<span class="hljs-string">&quot;emps&quot;</span> <br>    select=<span class="hljs-string">&quot;com.xxx.xxx.EmployeeMapperPlus.getEmpsById&quot;</span><br>    column=<span class="hljs-string">&quot;id&quot;</span><br>    &gt;<br>    &lt;id column=<span class="hljs-string">&quot;eid&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;lastName&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;email&quot;</span> property=<span class="hljs-string">&quot;email&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>    &lt;/collection&gt;<br>&lt;/resultMap&gt;<br><br>&lt;select id=<span class="hljs-string">&quot;getDeptByIdStep&quot;</span> resultMap=<span class="hljs-string">&quot;MyDeptStep&quot;</span>&gt;<br>    SELECT id,dept_name<br>    FROM tbl_dept<br>    WHERE id=#&#123;id&#125;<br>&lt;/select&gt;<br></code></pre></td></tr></table></figure><h3 id="扩展-分布查询，多列值封装map传递"><a href="#扩展-分布查询，多列值封装map传递" class="headerlink" title="扩展-分布查询，多列值封装map传递"></a>扩展-分布查询，多列值封装map传递</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;resultMap type=<span class="hljs-string">&quot;com.xxx.xxx.Department&quot;</span> id=<span class="hljs-string">&quot;MyDeptStep&quot;</span>&gt;<br>    &lt;id column=<span class="hljs-string">&quot;id&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;    <br>&lt;result column=<span class="hljs-string">&quot;dept_name&quot;</span> property=<span class="hljs-string">&quot;departmentName&quot;</span>/&gt;<br>    &lt;collection property=<span class="hljs-string">&quot;emps&quot;</span> <br>    select=<span class="hljs-string">&quot;com.xxx.xxx.EmployeeMapperPlus.getEmpsById&quot;</span><br>    column=<span class="hljs-string">&quot;id&quot;</span><br>    &lt;!-- column=<span class="hljs-string">&quot;&#123;deptId=id&#125;&quot;</span>  fetchType=<span class="hljs-string">&quot;lazy&quot;</span> --&gt;<br>   &gt;<br>    <br>    <br>    &lt;id column=<span class="hljs-string">&quot;eid&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;lastName&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;email&quot;</span> property=<span class="hljs-string">&quot;email&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>    &lt;/collection&gt;<br>&lt;/resultMap&gt;<br><br>&lt;select id=<span class="hljs-string">&quot;getDeptByIdStep&quot;</span> resultMap=<span class="hljs-string">&quot;MyDeptStep&quot;</span>&gt;<br>    SELECT id,dept_name<br>    FROM tbl_dept<br>    WHERE id=#&#123;id&#125;<br>&lt;/select&gt;<br>    <br>    &lt;!--多列值封装map传递<br>    column=<span class="hljs-string">&quot;&#123;key1=column1,key2=column2&#125;&quot;</span><br>    fetchType=<span class="hljs-string">&quot;lazy&quot;</span>:表示使用延迟加载：<br>        lazy：延迟加载<br>        eager：立即加载<br>    --&gt;<br></code></pre></td></tr></table></figure><h2 id="discrominator鉴别器"><a href="#discrominator鉴别器" class="headerlink" title="discrominator鉴别器"></a>discrominator鉴别器</h2><p>判断某列的值，然后根据某列的值改变封装行为。</p><p>如果查出女生：部门信息查询出来，否则不查询；</p><p>如果查出男生：把last_name这一列的值赋值给email；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;resultMap type=<span class="hljs-string">&quot;com.xxx.xxx.Employee&quot;</span> id=<span class="hljs-string">&quot;MyDifEmp&quot;</span>&gt;<br>    &lt;id column=<span class="hljs-string">&quot;id&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;    <br>&lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;lastName&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;email&quot;</span> property=<span class="hljs-string">&quot;email&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>    &lt;!--<br>    column:指定判定的列名<br>        javaType：列值对应的java类型<br>    --&gt;<br>    &lt;discriminator javaType=<span class="hljs-string">&quot;string&quot;</span> column=<span class="hljs-string">&quot;gender&quot;</span>&gt;<br>    &lt;!--女生 rsultType:指定封装的结果类型,不可缺少(或者resultMap)--&gt;<br>        &lt;<span class="hljs-keyword">case</span> value=<span class="hljs-string">&quot;0&quot;</span> rsultType=<span class="hljs-string">&quot;com.xxx.xxx.Employee&quot;</span>&gt;<br>            &lt;association property=<span class="hljs-string">&quot;dept&quot;</span> <br>    select=<span class="hljs-string">&quot;com.xxx.xxx.EmployeeMapper.getEmpAndDeptById&quot;</span><br>    colunm=<span class="hljs-string">&quot;did&quot;</span>&gt;<br>    &lt;/association&gt;<br>        &lt;/<span class="hljs-keyword">case</span>&gt;<br>            <br>        &lt;!---男生-&gt;<br>        &lt;<span class="hljs-keyword">case</span> value=<span class="hljs-string">&quot;1&quot;</span>&gt;<br>            &lt;id column=<span class="hljs-string">&quot;id&quot;</span> property=<span class="hljs-string">&quot;id&quot;</span>/&gt;    <br>&lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;lastName&quot;</span>/&gt;<br>            &lt;result column=<span class="hljs-string">&quot;last_name&quot;</span> property=<span class="hljs-string">&quot;email&quot;</span>/&gt;<br>    &lt;result column=<span class="hljs-string">&quot;gender&quot;</span> property=<span class="hljs-string">&quot;gender&quot;</span>/&gt;<br>        &lt;/<span class="hljs-keyword">case</span>&gt;<br>    &lt;/discriminator&gt;<br>    <br>    <br>&lt;/resultMap&gt;<br></code></pre></td></tr></table></figure><h1 id="五-MyBatis-动态SQL"><a href="#五-MyBatis-动态SQL" class="headerlink" title="五.MyBatis-动态SQL"></a>五.MyBatis-动态SQL</h1><ul><li><p>if：判断</p></li><li><p>choose(when,otherwise)</p></li><li><p>trim(where,set)</p><p>where：封装查询条件</p><p>set：封装修改条件</p></li><li><p>foreach</p></li></ul><h2 id="1-if"><a href="#1-if" class="headerlink" title="1.if"></a>1.if</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 查询员工，要求，携带了哪个字段查询条件就带上这个字段的值 --&gt;</span><br><span class="hljs-comment">&lt;!-- public List&lt;Employee&gt; getEmpsByConditionIf(Employee employee); --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpsByConditionIf&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean.Employee&quot;</span>&gt;</span><br>    select * from tbl_employee<br>    <span class="hljs-comment">&lt;!-- where --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- test：判断表达式（OGNL）OGNL参照PPT或者官方文档。</span><br><span class="hljs-comment">        c:if  test</span><br><span class="hljs-comment">    从参数中取值进行判断</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    遇见特殊符号应该去写转义字符：</span><br><span class="hljs-comment">    &amp;&amp;：&amp;amp;&amp;amp;</span><br><span class="hljs-comment">    --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;id!=null&quot;</span>&gt;</span><br>            id=#&#123;id&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;lastName!=null <span class="hljs-symbol">&amp;amp;</span><span class="hljs-symbol">&amp;amp;</span> lastName!=<span class="hljs-symbol">&amp;quot;</span><span class="hljs-symbol">&amp;quot;</span>&quot;</span>&gt;</span><br>            and last_name like #&#123;lastName&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;email!=null and email.trim()!=<span class="hljs-symbol">&amp;quot;</span><span class="hljs-symbol">&amp;quot;</span>&quot;</span>&gt;</span><br>            and email=#&#123;email&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span> <br>        <span class="hljs-comment">&lt;!-- ognl会进行字符串与数字的转换判断  &quot;0&quot;==0 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;gender==0 or gender==1&quot;</span>&gt;</span><br>            and gender=#&#123;gender&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><p>查询的时候如果某些条件没带可能sql拼装会有问题，两种解决方案：</p><ol><li>在where后面加上1=1，以后的条件都and xxx</li><li>使用<where></where>标签，将条件放在标签内。mybatis会将where标签中拼装的sql，多出来的and或者or去掉。但是如果and或者or放在条件的后面（条件1 and），此时就可能出现问题（当最后一个条件没有时，sql语句末尾多一个and或者or），这个问题可以采用<trim></trim>标签。</li></ol><h2 id="2-trim-where"><a href="#2-trim-where" class="headerlink" title="2.trim(where)"></a>2.trim(where)</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--public List&lt;Employee&gt; getEmpsByConditionTrim(Employee employee);  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpsByConditionTrim&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean.Employee&quot;</span>&gt;</span><br>    select * from tbl_employee<br>    <span class="hljs-comment">&lt;!-- 后面多出的and或者or where标签不能解决 </span><br><span class="hljs-comment">   prefix=&quot;&quot;:前缀：trim标签体中是整个字符串拼串 后的结果。</span><br><span class="hljs-comment">     prefix给拼串后的整个字符串加一个前缀 </span><br><span class="hljs-comment">   prefixOverrides=&quot;&quot;:</span><br><span class="hljs-comment">     前缀覆盖： 去掉整个字符串前面多余的字符</span><br><span class="hljs-comment">   suffix=&quot;&quot;:后缀</span><br><span class="hljs-comment">     suffix给拼串后的整个字符串加一个后缀 </span><br><span class="hljs-comment">   suffixOverrides=&quot;&quot;</span><br><span class="hljs-comment">     后缀覆盖：去掉整个字符串后面多余的字符</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">   --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 自定义字符串的截取规则 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">trim</span> <span class="hljs-attr">prefix</span>=<span class="hljs-string">&quot;where&quot;</span> <span class="hljs-attr">suffixOverrides</span>=<span class="hljs-string">&quot;and&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;id!=null&quot;</span>&gt;</span><br>            id=#&#123;id&#125; and<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;lastName!=null <span class="hljs-symbol">&amp;amp;</span><span class="hljs-symbol">&amp;amp;</span> lastName!=<span class="hljs-symbol">&amp;quot;</span><span class="hljs-symbol">&amp;quot;</span>&quot;</span>&gt;</span><br>            last_name like #&#123;lastName&#125; and<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;email!=null and email.trim()!=<span class="hljs-symbol">&amp;quot;</span><span class="hljs-symbol">&amp;quot;</span>&quot;</span>&gt;</span><br>            email=#&#123;email&#125; and<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span> <br>        <span class="hljs-comment">&lt;!-- ognl会进行字符串与数字的转换判断  &quot;0&quot;==0 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;gender==0 or gender==1&quot;</span>&gt;</span><br>            gender=#&#123;gender&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">trim</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="3-choose"><a href="#3-choose" class="headerlink" title="3.choose"></a>3.choose</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- public List&lt;Employee&gt; getEmpsByConditionChoose(Employee employee); --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpsByConditionChoose&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean.Employee&quot;</span>&gt;</span><br>    select * from tbl_employee <br>    <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 如果带了id就用id查，如果带了lastName就用lastName查;只会进入其中一个when(或者otherwise) --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">choose</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;id!=null&quot;</span>&gt;</span><br>                id=#&#123;id&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;lastName!=null&quot;</span>&gt;</span><br>                last_name like #&#123;lastName&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;email!=null&quot;</span>&gt;</span><br>                email = #&#123;email&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">otherwise</span>&gt;</span><br>                gender = 0<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">otherwise</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">choose</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="4-trim（set）"><a href="#4-trim（set）" class="headerlink" title="4.trim（set）"></a>4.trim（set）</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--public void updateEmp(Employee employee);  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;updateEmp&quot;</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- Set标签的使用 --&gt;</span><br>    <span class="hljs-comment">&lt;!--update tbl_employee </span><br><span class="hljs-comment">&lt;set&gt;</span><br><span class="hljs-comment">   &lt;if test=&quot;lastName!=null&quot;&gt;</span><br><span class="hljs-comment">    last_name=#&#123;lastName&#125;,</span><br><span class="hljs-comment">   &lt;/if&gt;</span><br><span class="hljs-comment">        &lt;if test=&quot;email!=null&quot;&gt;</span><br><span class="hljs-comment">            email=#&#123;email&#125;,</span><br><span class="hljs-comment">        &lt;/if&gt;</span><br><span class="hljs-comment">        &lt;if test=&quot;gender!=null&quot;&gt;</span><br><span class="hljs-comment">            gender=#&#123;gender&#125;</span><br><span class="hljs-comment">        &lt;/if&gt;</span><br><span class="hljs-comment">&lt;/set&gt;</span><br><span class="hljs-comment">    where id=#&#123;id&#125; --&gt;</span><br> <br><span class="hljs-comment">&lt;!-- Trim：更新拼串 --&gt;</span><br>update tbl_employee <br>    <span class="hljs-tag">&lt;<span class="hljs-name">trim</span> <span class="hljs-attr">prefix</span>=<span class="hljs-string">&quot;set&quot;</span> <span class="hljs-attr">suffixOverrides</span>=<span class="hljs-string">&quot;,&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;lastName!=null&quot;</span>&gt;</span><br>            last_name=#&#123;lastName&#125;,<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;email!=null&quot;</span>&gt;</span><br>            email=#&#123;email&#125;,<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;gender!=null&quot;</span>&gt;</span><br>            gender=#&#123;gender&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">trim</span>&gt;</span><br>    where id=#&#123;id&#125;  <br><span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="5-foreach"><a href="#5-foreach" class="headerlink" title="5.foreach"></a>5.foreach</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--public List&lt;Employee&gt; getEmpsByConditionForeach(List&lt;Integer&gt; ids);  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpsByConditionForeach&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean.Employee&quot;</span>&gt;</span><br>    select * from tbl_employee<br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">    collection：指定要遍历的集合：</span><br><span class="hljs-comment">     list类型的参数会特殊处理封装在map中，map的key就叫list</span><br><span class="hljs-comment">    item：将当前遍历出的元素赋值给指定的变量</span><br><span class="hljs-comment">    separator:每个元素之间的分隔符</span><br><span class="hljs-comment">    open：遍历出所有结果拼接一个开始的字符</span><br><span class="hljs-comment">    close:遍历出所有结果拼接一个结束的字符</span><br><span class="hljs-comment">    index:索引。遍历list的时候是index就是索引，item就是当前值</span><br><span class="hljs-comment">            遍历map的时候index表示的就是map的key，item就是map的值</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    #&#123;变量名&#125;就能取出变量的值也就是当前遍历出的元素</span><br><span class="hljs-comment">     --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;ids&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;item_id&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span></span><br><span class="hljs-tag">             <span class="hljs-attr">open</span>=<span class="hljs-string">&quot;where id in(&quot;</span> <span class="hljs-attr">close</span>=<span class="hljs-string">&quot;)&quot;</span>&gt;</span><br>        #&#123;item_id&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><p>批量保存(mysql)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 批量保存 --&gt;</span><br> <span class="hljs-comment">&lt;!--public void addEmps(@Param(&quot;emps&quot;)List&lt;Employee&gt; emps);  --&gt;</span><br> <span class="hljs-comment">&lt;!--MySQL下批量保存：可以foreach遍历   mysql支持values(),(),()语法--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;addEmps&quot;</span>&gt;</span><br> insert into tbl_employee(<br> <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">refid</span>=<span class="hljs-string">&quot;insertColumn&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br> ) <br>values<br><span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;emps&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;emp&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span>&gt;</span><br>(#&#123;emp.lastName&#125;,#&#123;emp.email&#125;,#&#123;emp.gender&#125;,#&#123;emp.dept.id&#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span><span class="hljs-comment">&lt;!--   --&gt;</span><br> <br> <span class="hljs-comment">&lt;!-- 这种方式需要数据库连接属性allowMultiQueries=true；</span><br><span class="hljs-comment"> 这种分号分隔多个sql可以用于其他的批量操作（删除，修改） --&gt;</span><br> <span class="hljs-comment">&lt;!-- &lt;insert id=&quot;addEmps&quot;&gt;</span><br><span class="hljs-comment"> &lt;foreach collection=&quot;emps&quot; item=&quot;emp&quot; separator=&quot;;&quot;&gt;</span><br><span class="hljs-comment"> insert into tbl_employee(last_name,email,gender,d_id)</span><br><span class="hljs-comment"> values(#&#123;emp.lastName&#125;,#&#123;emp.email&#125;,#&#123;emp.gender&#125;,#&#123;emp.dept.id&#125;)</span><br><span class="hljs-comment"> &lt;/foreach&gt;</span><br><span class="hljs-comment"> &lt;/insert&gt; --&gt;</span><br></code></pre></td></tr></table></figure><p>批量保存(oracle)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- Oracle数据库批量保存： </span><br><span class="hljs-comment">   Oracle不支持values(),(),()</span><br><span class="hljs-comment">   Oracle支持的批量方式</span><br><span class="hljs-comment">   1、多个insert放在begin - end里面</span><br><span class="hljs-comment">    begin</span><br><span class="hljs-comment">       insert into employees(employee_id,last_name,email) </span><br><span class="hljs-comment">       values(employees_seq.nextval,&#x27;test_001&#x27;,&#x27;test_001@atguigu.com&#x27;);</span><br><span class="hljs-comment">       insert into employees(employee_id,last_name,email) </span><br><span class="hljs-comment">       values(employees_seq.nextval,&#x27;test_002&#x27;,&#x27;test_002@atguigu.com&#x27;);</span><br><span class="hljs-comment">   end;</span><br><span class="hljs-comment">  2、利用中间表：</span><br><span class="hljs-comment">   insert into employees(employee_id,last_name,email)</span><br><span class="hljs-comment">         select employees_seq.nextval,lastName,email from(</span><br><span class="hljs-comment">                select &#x27;test_a_01&#x27; lastName,&#x27;test_a_e01&#x27; email from dual</span><br><span class="hljs-comment">                union</span><br><span class="hljs-comment">                select &#x27;test_a_02&#x27; lastName,&#x27;test_a_e02&#x27; email from dual</span><br><span class="hljs-comment">                union</span><br><span class="hljs-comment">                select &#x27;test_a_03&#x27; lastName,&#x27;test_a_e03&#x27; email from dual</span><br><span class="hljs-comment">         )</span><br><span class="hljs-comment">  --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;addEmps&quot;</span> <span class="hljs-attr">databaseId</span>=<span class="hljs-string">&quot;oracle&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- oracle第一种批量方式 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;foreach collection=&quot;emps&quot; item=&quot;emp&quot; open=&quot;begin&quot; close=&quot;end;&quot;&gt;</span><br><span class="hljs-comment">    insert into employees(employee_id,last_name,email) </span><br><span class="hljs-comment">       values(employees_seq.nextval,#&#123;emp.lastName&#125;,#&#123;emp.email&#125;);</span><br><span class="hljs-comment">   &lt;/foreach&gt; --&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- oracle第二种批量方式  --&gt;</span><br>    insert into employees(<br>    <span class="hljs-comment">&lt;!-- 引用外部定义的sql --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">refid</span>=<span class="hljs-string">&quot;insertColumn&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;testColomn&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;abc&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>    )<br>    <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;emps&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;emp&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;union&quot;</span></span><br><span class="hljs-tag">             <span class="hljs-attr">open</span>=<span class="hljs-string">&quot;select employees_seq.nextval,lastName,email from(&quot;</span></span><br><span class="hljs-tag">             <span class="hljs-attr">close</span>=<span class="hljs-string">&quot;)&quot;</span>&gt;</span><br>        select #&#123;emp.lastName&#125; lastName,#&#123;emp.email&#125; email from dual<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="6-parameter和-databaseId"><a href="#6-parameter和-databaseId" class="headerlink" title="6.parameter和_databaseId"></a>6.parameter和_databaseId</h2><h2 id="7-bind"><a href="#7-bind" class="headerlink" title="7.bind"></a>7.bind</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 两个内置参数：</span><br><span class="hljs-comment">   不只是方法传递过来的参数可以被用来判断，取值。。。</span><br><span class="hljs-comment">   mybatis默认还有两个内置参数：</span><br><span class="hljs-comment">   _parameter:代表整个参数</span><br><span class="hljs-comment">    单个参数：_parameter就是这个参数</span><br><span class="hljs-comment">    多个参数：参数会被封装为一个map；_parameter就是代表这个map</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">   _databaseId:如果配置了databaseIdProvider标签。</span><br><span class="hljs-comment">    _databaseId就是代表当前数据库的别名oracle</span><br><span class="hljs-comment">--&gt;</span><br>  <br><span class="hljs-comment">&lt;!--public List&lt;Employee&gt; getEmpsTestInnerParameter(Employee employee);  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpsTestInnerParameter&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean.Employee&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- bind：可以将OGNL表达式的值绑定到一个变量中，方便后来引用这个变量的值 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bind</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;_lastName&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#x27;%&#x27;+lastName+&#x27;%&#x27;&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;_databaseId==&#x27;mysql&#x27;&quot;</span>&gt;</span><br>        select * from tbl_employee<br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;_parameter!=null&quot;</span>&gt;</span><br>            where last_name like #&#123;lastName&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;_databaseId==&#x27;oracle&#x27;&quot;</span>&gt;</span><br>        select * from employees<br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;_parameter!=null&quot;</span>&gt;</span><br>            where last_name like #&#123;_parameter.lastName&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="8-抽取可重用的sql片段"><a href="#8-抽取可重用的sql片段" class="headerlink" title="8.抽取可重用的sql片段"></a>8.抽取可重用的sql片段</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">    抽取可重用的sql片段。方便后面引用 </span><br><span class="hljs-comment">    1、sql抽取：将经常要查询的列名，或者插入用的列名抽取出来方便引用</span><br><span class="hljs-comment">    2、include来引用已经抽取的sql：</span><br><span class="hljs-comment">    3、include还可以自定义一些property，sql标签内部就能使用自定义的属性</span><br><span class="hljs-comment">      include-property：取值的正确方式$&#123;prop&#125;,</span><br><span class="hljs-comment">      #&#123;不能使用这种方式&#125;</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sql</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;insertColumn&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;_databaseId==&#x27;oracle&#x27;&quot;</span>&gt;</span><br>        employee_id,last_name,email<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;_databaseId==&#x27;mysql&#x27;&quot;</span>&gt;</span><br>        last_name,email,gender,d_id<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">sql</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="六-MyBatis缓存机制"><a href="#六-MyBatis缓存机制" class="headerlink" title="六.MyBatis缓存机制"></a>六.MyBatis缓存机制</h1><p><strong>一级缓存</strong>和<strong>二级缓存</strong></p><ol><li><p>默认情况下，只有一级缓存（SqlSession级别的缓存，也称为本地缓存）开启。</p></li><li><p>二级缓存需要手动开启和配置，他是基于namespace级别的缓存。</p></li><li><p>为了提高扩展性。MyBatis定义了缓存接口Cache。我们可以通过实现Cache接口来自定义二级缓存。</p></li></ol><h2 id="1-一级缓存（本地缓存）"><a href="#1-一级缓存（本地缓存）" class="headerlink" title="1.一级缓存（本地缓存）"></a>1.一级缓存（本地缓存）</h2><ul><li>sqlSession级别的缓存。</li><li>一级缓存是一直开启的；SqlSession级别的一个Map。</li></ul><ul><li><p>与数据库同一次会话期间查询到的数据会放在本地缓存中。</p></li><li><p>以后如果需要获取相同的数据，直接从缓存中拿，没必要再去查询数据库；</p></li><li><p>一级缓存失效情况（没有使用到当前一级缓存的情况，效果就是，还需要再向数据库发出查询）：</p><ol><li><p>sqlSession不同。</p></li><li><p>sqlSession相同，查询条件不同.(当前一级缓存中还没有这个数据)</p></li><li><p>sqlSession相同，两次查询之间执行了增删改操作(这次增删改可能对当前数据有影响)</p></li><li><p>sqlSession相同，手动清除了一级缓存（缓存清空:openSession.clearCache();）</p></li></ol></li></ul><p>一级缓存测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testFirstLevelCache</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException</span>&#123;<br>    SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br>    SqlSession openSession = sqlSessionFactory.openSession();<br>    <span class="hljs-keyword">try</span>&#123;<br>        EmployeeMapper mapper = openSession.getMapper(EmployeeMapper.class);<br>        Employee emp01 = mapper.getEmpById(<span class="hljs-number">1</span>);<br>        System.out.println(emp01);<br><br>        <span class="hljs-comment">//xxxxx</span><br>        <span class="hljs-comment">//1、sqlSession不同。</span><br>        <span class="hljs-comment">//SqlSession openSession2 = sqlSessionFactory.openSession();</span><br>        <span class="hljs-comment">//EmployeeMapper mapper2 = openSession2.getMapper(EmployeeMapper.class);</span><br><br>        <span class="hljs-comment">//2、sqlSession相同，查询条件不同</span><br><br>        <span class="hljs-comment">//3、sqlSession相同，两次查询之间执行了增删改操作(这次增删改可能对当前数据有影响)</span><br>        <span class="hljs-comment">//mapper.addEmp(new Employee(null, &quot;testCache&quot;, &quot;cache&quot;, &quot;1&quot;));</span><br>        <span class="hljs-comment">//System.out.println(&quot;数据添加成功&quot;);</span><br><br>        <span class="hljs-comment">//4、sqlSession相同，手动清除了一级缓存（缓存清空）</span><br>        <span class="hljs-comment">//openSession.clearCache();</span><br><br>        Employee emp02 = mapper.getEmpById(<span class="hljs-number">1</span>);<br>        <span class="hljs-comment">//Employee emp03 = mapper.getEmpById(3);</span><br>        System.out.println(emp02);<br>        <span class="hljs-comment">//System.out.println(emp03);</span><br>        System.out.println(emp01==emp02);<br><br>        <span class="hljs-comment">//openSession2.close();</span><br>    &#125;<span class="hljs-keyword">finally</span>&#123;<br>        openSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-二级缓存（全局缓存）"><a href="#2-二级缓存（全局缓存）" class="headerlink" title="2.二级缓存（全局缓存）"></a>2.二级缓存（全局缓存）</h2><ul><li><p>基于namespace级别的缓存：一个namespace对应一个二级缓存：</p></li><li><p>工作机制：</p><ol><li><p>一个会话，查询一条数据，这个数据就会被放在当前会话的一级缓存中；</p></li><li><p>如果会话关闭；一级缓存中的数据会被保存到二级缓存中；新的会话查询信息，就可以参照二级缓存中的内容；</p></li><li><p>sqlSession===EmployeeMapper==&gt;Employee</p><p>DepartmentMapper===&gt;Department</p><p>不同namespace查出的数据会放在自己对应的缓存中（map）</p></li></ol></li><li><p>效果：数据会从二级缓存中获取</p></li><li><p>查出的数据都会被默认先放在一级缓存中。</p></li><li><p>只有会话提交或者关闭以后，一级缓存中的数据才会转移到二级缓存中</p></li><li><p>使用：</p><ol><li>开启全局二级缓存配置：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">setting</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cacheEnabled&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>去mapper.xml中配置使用二级缓存：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">cache</span> <span class="hljs-attr">eviction</span>=<span class="hljs-string">&quot;FIFO&quot;</span> <span class="hljs-attr">flushInterval</span>=<span class="hljs-string">&quot;60000&quot;</span> <span class="hljs-attr">readOnly</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;1024&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cache</span>&gt;</span><br><span class="hljs-comment">&lt;!--  </span><br><span class="hljs-comment"> eviction:缓存的回收策略：</span><br><span class="hljs-comment">  • LRU – 最近最少使用的：移除最长时间不被使用的对象。</span><br><span class="hljs-comment">  • FIFO – 先进先出：按对象进入缓存的顺序来移除它们。</span><br><span class="hljs-comment">  • SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象。</span><br><span class="hljs-comment">  • WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。</span><br><span class="hljs-comment">  • 默认的是 LRU。</span><br><span class="hljs-comment"> flushInterval：缓存刷新间隔</span><br><span class="hljs-comment">  缓存多长时间清空一次，默认不清空，设置一个毫秒值</span><br><span class="hljs-comment"> readOnly:是否只读：</span><br><span class="hljs-comment">  true：只读；mybatis认为所有从缓存中获取数据的操作都是只读操作，不会修改数据。</span><br><span class="hljs-comment">     mybatis为了加快获取速度，直接就会将数据在缓存中的引用交给用户。不安全，速度快</span><br><span class="hljs-comment">  false：非只读：mybatis觉得获取的数据可能会被修改。</span><br><span class="hljs-comment">    mybatis会利用序列化&amp;反序列的技术克隆一份新的数据给你。安全，速度慢</span><br><span class="hljs-comment"> size：缓存存放多少元素；</span><br><span class="hljs-comment"> type=&quot;&quot;：指定自定义缓存的全类名；</span><br><span class="hljs-comment">   实现Cache接口即可；</span><br><span class="hljs-comment"> --&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>我们的POJO需要实现序列化接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Department</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Serializable</span></span>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure></li></ul><p>二级缓存测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSecondLevelCache02</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException</span>&#123;<br>    SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br>    SqlSession openSession = sqlSessionFactory.openSession();<br>    SqlSession openSession2 = sqlSessionFactory.openSession();<br>    <span class="hljs-keyword">try</span>&#123;<br>        <span class="hljs-comment">//1、</span><br>        DepartmentMapper mapper = openSession.getMapper(DepartmentMapper.class);<br>        DepartmentMapper mapper2 = openSession2.getMapper(DepartmentMapper.class);<br><br>        Department deptById = mapper.getDeptById(<span class="hljs-number">1</span>);<br>        System.out.println(deptById);<br>        openSession.close();<br><br>        Department deptById2 = mapper2.getDeptById(<span class="hljs-number">1</span>);<br>        System.out.println(deptById2);<br>        openSession2.close();<br>        <span class="hljs-comment">//第二次查询是从二级缓存中拿到的数据，并没有发送新的sql</span><br><br>    &#125;<span class="hljs-keyword">finally</span>&#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-和缓存有关的设置-属性"><a href="#3-和缓存有关的设置-属性" class="headerlink" title="3.和缓存有关的设置/属性"></a>3.和缓存有关的设置/属性</h2><ol><li><p>cacheEnabled=true：false：关闭缓存（二级缓存关闭）(一级缓存一直可用的)</p></li><li><p>每个select标签都有useCache=”true”：</p><p>​    false：不使用缓存（一级缓存依然使用，二级缓存不使用）</p></li><li><p>【每个增删改标签的：flushCache=”true”：（一级二级都会清除）】</p><ul><li><p>增删改执行完成后就会清楚缓存；</p></li><li><p>测试：flushCache=”true”：一级缓存就清空了；二级也会被清除；</p></li><li><p>查询标签：默认：flushCache=”false”：</p><p>​    如果flushCache=true;每次查询之后都会清空缓存；缓存是没有被使用的；</p></li></ul></li><li><p>sqlSession.clearCache();只是清除当前session的一级缓存；</p></li><li><p>localCacheScope：本地缓存作用域：（一级缓存SESSION）；当前会话的所有数据保存在会话缓存中；STATEMENT：可以禁用一级缓存；</p></li><li><p>当在某一个作用域 (一级缓存Session/二级缓存Namespaces) 进行了 C/U/D 操作后，默认该作用域下所有 select 中的缓存将被clear。</p></li></ol><p>​        </p><h2 id="4-第三方缓存整合"><a href="#4-第三方缓存整合" class="headerlink" title="4.第三方缓存整合"></a>4.第三方缓存整合</h2><ol><li>导入第三方缓存包；</li><li>导入与第三方缓存整合的适配包；<a href="https://github.com/mybatis/ehcache-cache/releases">官方地址</a>；</li><li>mapper.xml中使用自定义缓存</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">cache</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cache</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ehcache</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"> <span class="hljs-attr">xsi:noNamespaceSchemaLocation</span>=<span class="hljs-string">&quot;../config/ehcache.xsd&quot;</span>&gt;</span><br> <span class="hljs-comment">&lt;!-- 磁盘保存路径 --&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">diskStore</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;D:\44\ehcache&quot;</span> /&gt;</span><br> <br> <span class="hljs-tag">&lt;<span class="hljs-name">defaultCache</span> </span><br><span class="hljs-tag">   <span class="hljs-attr">maxElementsInMemory</span>=<span class="hljs-string">&quot;10000&quot;</span> </span><br><span class="hljs-tag">   <span class="hljs-attr">maxElementsOnDisk</span>=<span class="hljs-string">&quot;10000000&quot;</span></span><br><span class="hljs-tag">   <span class="hljs-attr">eternal</span>=<span class="hljs-string">&quot;false&quot;</span> </span><br><span class="hljs-tag">   <span class="hljs-attr">overflowToDisk</span>=<span class="hljs-string">&quot;true&quot;</span> </span><br><span class="hljs-tag">   <span class="hljs-attr">timeToIdleSeconds</span>=<span class="hljs-string">&quot;120&quot;</span></span><br><span class="hljs-tag">   <span class="hljs-attr">timeToLiveSeconds</span>=<span class="hljs-string">&quot;120&quot;</span> </span><br><span class="hljs-tag">   <span class="hljs-attr">diskExpiryThreadIntervalSeconds</span>=<span class="hljs-string">&quot;120&quot;</span></span><br><span class="hljs-tag">   <span class="hljs-attr">memoryStoreEvictionPolicy</span>=<span class="hljs-string">&quot;LRU&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">defaultCache</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ehcache</span>&gt;</span><br> <br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">属性说明：</span><br><span class="hljs-comment">l diskStore：指定数据在磁盘中的存储位置。</span><br><span class="hljs-comment">l defaultCache：当借助CacheManager.add(&quot;demoCache&quot;)创建Cache时，EhCache便会采用&lt;defalutCache/&gt;指定的的管理策略</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">以下属性是必须的：</span><br><span class="hljs-comment">l maxElementsInMemory - 在内存中缓存的element的最大数目 </span><br><span class="hljs-comment">l maxElementsOnDisk - 在磁盘上缓存的element的最大数目，若是0表示无穷大</span><br><span class="hljs-comment">l eternal - 设定缓存的elements是否永远不过期。如果为true，则缓存的数据始终有效，如果为false那么还要根据timeToIdleSeconds，timeToLiveSeconds判断</span><br><span class="hljs-comment">l overflowToDisk - 设定当内存缓存溢出的时候是否将过期的element缓存到磁盘上</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">以下属性是可选的：</span><br><span class="hljs-comment">l timeToIdleSeconds - 当缓存在EhCache中的数据前后两次访问的时间超过timeToIdleSeconds的属性取值时，这些数据便会删除，默认值是0,也就是可闲置时间无穷大</span><br><span class="hljs-comment">l timeToLiveSeconds - 缓存element的有效生命期，默认是0.,也就是element存活时间无穷大</span><br><span class="hljs-comment"> diskSpoolBufferSizeMB 这个参数设置DiskStore(磁盘缓存)的缓存区大小.默认是30MB.每个Cache都应该有自己的一个缓冲区.</span><br><span class="hljs-comment">l diskPersistent - 在VM重启的时候是否启用磁盘保存EhCache中的数据，默认是false。</span><br><span class="hljs-comment">l diskExpiryThreadIntervalSeconds - 磁盘缓存的清理线程运行间隔，默认是120秒。每个120s，相应的线程会进行一次EhCache中数据的清理工作</span><br><span class="hljs-comment">l memoryStoreEvictionPolicy - 当内存缓存达到最大，有新的element加入的时候， 移除缓存中element的策略。默认是LRU（最近最少使用），可选的有LFU（最不常使用）和FIFO（先进先出）</span><br><span class="hljs-comment"> --&gt;</span><br></code></pre></td></tr></table></figure><p>在其他mapper文件中引用缓存：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 引用缓存：namespace：指定和哪个名称空间下的缓存一样 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">cache-ref</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.dao.EmployeeMapper&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><h1 id="七-MyBatis-Spring整合"><a href="#七-MyBatis-Spring整合" class="headerlink" title="七.MyBatis-Spring整合"></a>七.MyBatis-Spring整合</h1><ol><li><a href="http://www.mybatis.org/spring/">查看不同MyBatis版本整合Spring时使用的适配包</a></li><li><a href="https://github.com/mybatis/spring/releases">下载整合适配包</a></li><li><a href="https://github.com/mybatis/jpetstore-6">官方整合示例，jpetstore</a></li></ol><p>整合关键配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:mybatis-spring</span>=<span class="hljs-string">&quot;http://mybatis.org/schema/mybatis-spring&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:tx</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd&quot;</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- Spring希望管理所有的业务逻辑组件，等。。。 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;com.atguigu.mybatis&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">context:exclude-filter</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;annotation&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;org.springframework.stereotype.Controller&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">context:component-scan</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 引入数据库的配置文件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">context:property-placeholder</span> <span class="hljs-attr">location</span>=<span class="hljs-string">&quot;classpath:dbconfig.properties&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- Spring用来控制业务逻辑。数据源、事务控制、aop --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;jdbcUrl&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClass&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-comment">&lt;!-- spring事务管理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSourceTransactionManager&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 开启基于注解的事务 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tx:annotation-driven</span> <span class="hljs-attr">transaction-manager</span>=<span class="hljs-string">&quot;dataSourceTransactionManager&quot;</span>/&gt;</span><br><br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">整合mybatis </span><br><span class="hljs-comment">目的：1、spring管理所有组件。mapper的实现类。</span><br><span class="hljs-comment">service==&gt;Dao   @Autowired:自动注入mapper；</span><br><span class="hljs-comment">2、spring用来管理事务，spring声明式事务</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-comment">&lt;!--创建出SqlSessionFactory对象  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sqlSessionFactoryBean&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- configLocation指定全局配置文件的位置 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;configLocation&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;classpath:mybatis-config.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!--mapperLocations: 指定mapper文件的位置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mapperLocations&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;classpath:mybatis/mapper/*.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--配置一个可以进行批量执行的sqlSession  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sqlSession&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sqlSessionFactory&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;sqlSessionFactoryBean&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;executorType&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;BATCH&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 扫描所有的mapper接口的实现，让这些mapper能够自动注入；</span><br><span class="hljs-comment">base-package：指定mapper接口的包名</span><br><span class="hljs-comment"> --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mybatis-spring:scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.dao&quot;</span>/&gt;</span><br><span class="hljs-comment">&lt;!-- &lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;</span><br><span class="hljs-comment">&lt;property name=&quot;basePackage&quot; value=&quot;com.atguigu.mybatis.dao&quot;&gt;&lt;/property&gt;</span><br><span class="hljs-comment">&lt;/bean&gt; --&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="八-MyBatis-逆向工程"><a href="#八-MyBatis-逆向工程" class="headerlink" title="八.MyBatis-逆向工程"></a>八.MyBatis-逆向工程</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>MyBatis Generator：简称MBG，是一个专门为MyBatis框架使用者定制的代码生成器，可以快速的根据表生成对应的映射文件，接口，以及bean类。支持基本的增删改查，以及QBC风格的条件查询。但是表连接、存储过程等这些复杂sql的定义需要我们手工编写。</p><p><a href="http://www.mybatis.org/generator/">官方文档地址</a></p><p><a href="https://github.com/mybatis/generator/releases">官方工程地址</a></p><h2 id="2-MBG使用"><a href="#2-MBG使用" class="headerlink" title="2.MBG使用"></a>2.MBG使用</h2><h3 id="2-1-使用步骤"><a href="#2-1-使用步骤" class="headerlink" title="2.1 使用步骤"></a>2.1 使用步骤</h3><ol><li><p>编写MBG配置文件(详见2.3)</p></li><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--MBG--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.generator<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-generator-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.3.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>运行代码生成器生成代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testMbg</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>    List&lt;String&gt; warnings = <span class="hljs-keyword">new</span> ArrayList&lt;String&gt;();<br>    <span class="hljs-keyword">boolean</span> overwrite = <span class="hljs-keyword">true</span>;<br>    File configFile = <span class="hljs-keyword">new</span> File(<span class="hljs-string">&quot;mbg.xml&quot;</span>);<br>    ConfigurationParser cp = <span class="hljs-keyword">new</span> ConfigurationParser(warnings);<br>    Configuration config = cp.parseConfiguration(configFile);<br>    DefaultShellCallback callback = <span class="hljs-keyword">new</span> DefaultShellCallback(overwrite);<br>    MyBatisGenerator myBatisGenerator = <span class="hljs-keyword">new</span> MyBatisGenerator(config,<br>                                                             callback, warnings);<br>    myBatisGenerator.generate(<span class="hljs-keyword">null</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//简单版</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testMyBatis3Simple</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException</span>&#123;<br>    SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br>    SqlSession openSession = sqlSessionFactory.openSession();<br>    <span class="hljs-keyword">try</span>&#123;<br>        EmployeeMapper mapper = openSession.getMapper(EmployeeMapper.class);<br>        List&lt;Employee&gt; list = mapper.selectByExample(<span class="hljs-keyword">null</span>);<br>        <span class="hljs-keyword">for</span> (Employee employee : list) &#123;<br>            System.out.println(employee.getId());<br>        &#125;<br>    &#125;<span class="hljs-keyword">finally</span>&#123;<br>        openSession.close();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//豪华版</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testMyBatis3</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException</span>&#123;<br>    SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br>    SqlSession openSession = sqlSessionFactory.openSession();<br>    <span class="hljs-keyword">try</span>&#123;<br>        EmployeeMapper mapper = openSession.getMapper(EmployeeMapper.class);<br>        <span class="hljs-comment">//xxxExample就是封装查询条件的</span><br>        <span class="hljs-comment">//1、查询所有</span><br>        <span class="hljs-comment">//List&lt;Employee&gt; emps = mapper.selectByExample(null);</span><br>        <span class="hljs-comment">//2、查询员工名字中有e字母的，和员工性别是1的</span><br>        <span class="hljs-comment">//封装员工查询条件的example</span><br>        EmployeeExample example = <span class="hljs-keyword">new</span> EmployeeExample();<br>        <span class="hljs-comment">//创建一个Criteria，这个Criteria就是拼装查询条件</span><br>        <span class="hljs-comment">//select id, last_name, email, gender, d_id from tbl_employee </span><br>        <span class="hljs-comment">//WHERE ( last_name like ? and gender = ? ) or email like &quot;%e%&quot;</span><br>        Criteria criteria = example.createCriteria();<br>        criteria.andLastNameLike(<span class="hljs-string">&quot;%e%&quot;</span>);<br>        criteria.andGenderEqualTo(<span class="hljs-string">&quot;1&quot;</span>);<br><br>        Criteria criteria2 = example.createCriteria();<br>        criteria2.andEmailLike(<span class="hljs-string">&quot;%e%&quot;</span>);<br>        example.or(criteria2);<br><br>        List&lt;Employee&gt; list = mapper.selectByExample(example);<br>        <span class="hljs-keyword">for</span> (Employee employee : list) &#123;<br>            System.out.println(employee.getId());<br>        &#125;<br><br>    &#125;<span class="hljs-keyword">finally</span>&#123;<br>        openSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="2-2-注意点"><a href="#2-2-注意点" class="headerlink" title="2.2 注意点"></a>2.2 注意点</h3><ul><li>Context标签：<ul><li><strong>targetRuntime=“MyBatis3“</strong>可以生成带条件的增删改查</li><li><strong>targetRuntime=“MyBatis3Simple“</strong>可以生成基本的增删改查</li><li>如果再次生成，建议将之前生成的数据删除，避免xml向后追加内容出现的问题。</li></ul></li></ul><h3 id="2-3-MBG配置文件"><a href="#2-3-MBG配置文件" class="headerlink" title="2.3 MBG配置文件"></a>2.3 MBG配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">generatorConfiguration</span></span><br><span class="hljs-meta">  <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span><br><span class="hljs-meta">  <span class="hljs-meta-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">generatorConfiguration</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">targetRuntime=&quot;MyBatis3Simple&quot;:生成简单版的CRUD</span><br><span class="hljs-comment">MyBatis3:豪华版</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"> --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">context</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;DB2Tables&quot;</span> <span class="hljs-attr">targetRuntime</span>=<span class="hljs-string">&quot;MyBatis3&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- jdbcConnection：指定如何连接到目标数据库 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">jdbcConnection</span> <span class="hljs-attr">driverClass</span>=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">connectionURL</span>=<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/mybatis?allowMultiQueries=true&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">userId</span>=<span class="hljs-string">&quot;root&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">password</span>=<span class="hljs-string">&quot;123456&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">jdbcConnection</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--  --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">javaTypeResolver</span> &gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;forceBigDecimals&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">javaTypeResolver</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- javaModelGenerator：指定javaBean的生成策略 </span><br><span class="hljs-comment">targetPackage=&quot;test.model&quot;：目标包名</span><br><span class="hljs-comment">targetProject=&quot;\MBGTestProject\src&quot;：目标工程</span><br><span class="hljs-comment">--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">javaModelGenerator</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean&quot;</span> </span><br><span class="hljs-tag">    <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;.\src&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;enableSubPackages&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;trimStrings&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">javaModelGenerator</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- sqlMapGenerator：sql映射生成策略： --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">sqlMapGenerator</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.dao&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;.\conf&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;enableSubPackages&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">sqlMapGenerator</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- javaClientGenerator:指定mapper接口所在的位置 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">javaClientGenerator</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;XMLMAPPER&quot;</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.dao&quot;</span>  </span><br><span class="hljs-tag">    <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;.\src&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;enableSubPackages&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">javaClientGenerator</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 指定要逆向分析哪些表：根据表要创建javaBean --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;tbl_dept&quot;</span> <span class="hljs-attr">domainObjectName</span>=<span class="hljs-string">&quot;Department&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;tbl_employee&quot;</span> <span class="hljs-attr">domainObjectName</span>=<span class="hljs-string">&quot;Employee&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">context</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">generatorConfiguration</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h1 id="九-MyBatis-工作原理"><a href="#九-MyBatis-工作原理" class="headerlink" title="九.MyBatis-工作原理"></a>九.MyBatis-工作原理</h1><ol><li><p>获取sqlSessionFactory对象:</p><ul><li><p>解析文件的每一个信息保存在Configuration中，返回包含Configuration的DefaultSqlSession；</p></li><li><p>注意：【MappedStatement】：代表一个增删改查的详细信息</p></li></ul></li><li><p>获取sqlSession对象</p><ul><li><p>返回一个DefaultSQlSession对象，包含Executor和Configuration;</p></li><li><p>这一步会创建Executor对象；</p><p>获取接口的代理对象（MapperProxy）</p></li></ul></li><li><p>getMapper，使用MapperProxyFactory创建一个MapperProxy的代理对象</p><ul><li>代理对象里面包含了，DefaultSqlSession（Executor）</li></ul></li><li><p>执行增删改查方法</p></li></ol><p>总结：</p><ol><li><p>根据配置文件（全局，sql映射）初始化出Configuration对象</p></li><li><p>创建一个DefaultSqlSession对象，他里面包含Configuration以及Executor（根据全局配置文件中的defaultExecutorType创建出对应的Executor）</p></li><li><p>DefaultSqlSession.getMapper（）：拿到Mapper接口对应的MapperProxy；</p></li><li><p>MapperProxy里面有（DefaultSqlSession）；</p></li><li><p>执行增删改查方法：</p><ol><li><p>调用DefaultSqlSession的增删改查（Executor）；</p></li><li><p>会创建一个StatementHandler对象。（同时也会创建出ParameterHandler和ResultSetHandler）</p></li><li><p>调用StatementHandler预编译参数以及设置参数值;使用ParameterHandler来给sql设置参数</p></li><li><p>调用StatementHandler的增删改查方法；</p></li><li><p>ResultSetHandler封装结果</p><p>注意：四大对象每个创建的时候都有一个interceptorChain.pluginAll(parameterHandler);</p></li></ol></li></ol><h1 id="十-MyBatis-插件开发"><a href="#十-MyBatis-插件开发" class="headerlink" title="十.MyBatis-插件开发"></a>十.MyBatis-插件开发</h1><h2 id="1-插件原理"><a href="#1-插件原理" class="headerlink" title="1.插件原理"></a>1.插件原理</h2><p>在四大对象创建的时候：</p><ol><li>每个创建出来的对象不是直接返回的，而是interceptorChain.pluginAll(parameterHandler);</li><li>获取到所有的Interceptor（拦截器）（插件需要实现的接口）；调用interceptor.plugin(target);返回target包装后的对象</li><li>插件机制，我们可以使用插件为目标对象创建一个代理对象；AOP（面向切面）<pre><code>         我们的插件可以为四大对象创建出代理对象；            代理对象就可以拦截到四大对象的每一个执行；</code></pre></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">pluginAll</span><span class="hljs-params">(Object target)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (Interceptor interceptor : interceptors) &#123;<br>        target = interceptor.plugin(target);<br>    &#125;<br>    <span class="hljs-keyword">return</span> target;<br>&#125;<br></code></pre></td></tr></table></figure><p>默认情况下，MyBatis 允许使用插件来拦截的方法调用包括：</p><ul><li>Executor (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed) </li><li>ParameterHandler (getParameterObject, setParameters) </li><li>ResultSetHandler (handleResultSets, handleOutputParameters) </li><li>StatementHandler (prepare, parameterize, batch, update, query) </li></ul><h2 id="2-插件编写"><a href="#2-插件编写" class="headerlink" title="2.插件编写"></a>2.插件编写</h2><ol><li><p>编写Interceptor的实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.mybatis.dao;<br><br><span class="hljs-keyword">import</span> java.util.Properties;<br><br><span class="hljs-keyword">import</span> org.apache.ibatis.executor.parameter.ParameterHandler;<br><span class="hljs-keyword">import</span> org.apache.ibatis.executor.statement.StatementHandler;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Interceptor;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Intercepts;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Invocation;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Plugin;<br><span class="hljs-keyword">import</span> org.apache.ibatis.plugin.Signature;<br><span class="hljs-keyword">import</span> org.apache.ibatis.reflection.MetaObject;<br><span class="hljs-keyword">import</span> org.apache.ibatis.reflection.SystemMetaObject;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 完成插件签名：</span><br><span class="hljs-comment"> *告诉MyBatis当前插件用来拦截哪个对象的哪个方法</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Intercepts(&#123;</span><br><span class="hljs-meta">@Signature(type=StatementHandler.class,method=&quot;parameterize&quot;,args=java.sql.Statement.class)</span><br><span class="hljs-meta">&#125;)</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyFirstPlugin</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Interceptor</span></span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * intercept：拦截：</span><br><span class="hljs-comment"> * 拦截目标对象的目标方法的执行；</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">intercept</span><span class="hljs-params">(Invocation invocation)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br><span class="hljs-comment">// TODO Auto-generated method stub</span><br>System.out.println(<span class="hljs-string">&quot;MyFirstPlugin...intercept:&quot;</span>+invocation.getMethod());<br><span class="hljs-comment">//动态的改变一下sql运行的参数：以前1号员工，实际从数据库查询11号员工</span><br>Object target = invocation.getTarget();<br>System.out.println(<span class="hljs-string">&quot;当前拦截到的对象：&quot;</span>+target);<br><span class="hljs-comment">//拿到：StatementHandler==&gt;ParameterHandler===&gt;parameterObject</span><br><span class="hljs-comment">//拿到target的元数据</span><br>MetaObject metaObject = SystemMetaObject.forObject(target);<br>Object value = metaObject.getValue(<span class="hljs-string">&quot;parameterHandler.parameterObject&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;sql语句用的参数是：&quot;</span>+value);<br><span class="hljs-comment">//修改完sql语句要用的参数</span><br>metaObject.setValue(<span class="hljs-string">&quot;parameterHandler.parameterObject&quot;</span>, <span class="hljs-number">11</span>);<br><span class="hljs-comment">//执行目标方法</span><br>Object proceed = invocation.proceed();<br><span class="hljs-comment">//返回执行后的返回值</span><br><span class="hljs-keyword">return</span> proceed;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * plugin：</span><br><span class="hljs-comment"> * 包装目标对象的：包装：为目标对象创建一个代理对象</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">plugin</span><span class="hljs-params">(Object target)</span> </span>&#123;<br><span class="hljs-comment">// TODO Auto-generated method stub</span><br><span class="hljs-comment">//我们可以借助Plugin的wrap方法来使用当前Interceptor包装我们目标对象</span><br>System.out.println(<span class="hljs-string">&quot;MyFirstPlugin...plugin:mybatis将要包装的对象&quot;</span>+target);<br>Object wrap = Plugin.wrap(target, <span class="hljs-keyword">this</span>);<br><span class="hljs-comment">//返回为当前target创建的动态代理</span><br><span class="hljs-keyword">return</span> wrap;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * setProperties：</span><br><span class="hljs-comment"> * 将插件注册时 的property属性设置进来</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setProperties</span><span class="hljs-params">(Properties properties)</span> </span>&#123;<br><span class="hljs-comment">// TODO Auto-generated method stub</span><br>System.out.println(<span class="hljs-string">&quot;插件配置的信息：&quot;</span>+properties);<br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p>使用@Intercepts注解完成插件签名</p></li><li><p>将写好的插件注册到全局配置文件中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--plugins：注册插件  --&gt;<br>&lt;plugins&gt;<br>    &lt;plugin interceptor=<span class="hljs-string">&quot;com.atguigu.mybatis.dao.MyFirstPlugin&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;username&quot;</span> value=<span class="hljs-string">&quot;root&quot;</span>/&gt;<br>        &lt;property name=<span class="hljs-string">&quot;password&quot;</span> value=<span class="hljs-string">&quot;123456&quot;</span>/&gt;<br>    &lt;/plugin&gt;<br>    &lt;plugin interceptor=<span class="hljs-string">&quot;com.atguigu.mybatis.dao.MySecondPlugin&quot;</span>&gt;<br>    &lt;/plugin&gt;<br>&lt;/plugins&gt;<br></code></pre></td></tr></table></figure></li></ol><h1 id="十一-MyBatis-实用场景"><a href="#十一-MyBatis-实用场景" class="headerlink" title="十一.MyBatis-实用场景"></a>十一.MyBatis-实用场景</h1><h2 id="1-PageHelper插件进行分页"><a href="#1-PageHelper插件进行分页" class="headerlink" title="1. PageHelper插件进行分页"></a>1. PageHelper插件进行分页</h2><p><a href="https://github.com/pagehelper/Mybatis-PageHelper/blob/master/README_zh.md">官方文档</a></p><p>使用步骤：</p><ol><li><p>导入相关包pagehelper-x.x.x.jar 和 jsqlparser-0.9.5.jar</p></li><li><p>在MyBatis全局配置文件中配置分页插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span> <span class="hljs-attr">interceptor</span>=<span class="hljs-string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>使用PageHelper提供的方法进行分页</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test01</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>    <span class="hljs-comment">// 1、获取sqlSessionFactory对象</span><br>    SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br>    <span class="hljs-comment">// 2、获取sqlSession对象</span><br>    SqlSession openSession = sqlSessionFactory.openSession();<br>    <span class="hljs-keyword">try</span> &#123;<br>        EmployeeMapper mapper = openSession.getMapper(EmployeeMapper.class);<br>        Page&lt;Object&gt; page = PageHelper.startPage(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>);<br><br>        List&lt;Employee&gt; emps = mapper.getEmps();<br>        <span class="hljs-comment">//传入要连续显示多少页</span><br>        PageInfo&lt;Employee&gt; info = <span class="hljs-keyword">new</span> PageInfo&lt;&gt;(emps, <span class="hljs-number">5</span>);<br>        <span class="hljs-keyword">for</span> (Employee employee : emps) &#123;<br>            System.out.println(employee);<br>        &#125;<br>        <span class="hljs-comment">/*System.out.println(&quot;当前页码：&quot;+page.getPageNum());</span><br><span class="hljs-comment">System.out.println(&quot;总记录数：&quot;+page.getTotal());</span><br><span class="hljs-comment">System.out.println(&quot;每页的记录数：&quot;+page.getPageSize());</span><br><span class="hljs-comment">System.out.println(&quot;总页码：&quot;+page.getPages());*/</span><br>        <span class="hljs-comment">///xxx</span><br>        System.out.println(<span class="hljs-string">&quot;当前页码：&quot;</span>+info.getPageNum());<br>        System.out.println(<span class="hljs-string">&quot;总记录数：&quot;</span>+info.getTotal());<br>        System.out.println(<span class="hljs-string">&quot;每页的记录数：&quot;</span>+info.getPageSize());<br>        System.out.println(<span class="hljs-string">&quot;总页码：&quot;</span>+info.getPages());<br>        System.out.println(<span class="hljs-string">&quot;是否第一页：&quot;</span>+info.isIsFirstPage());<br>        System.out.println(<span class="hljs-string">&quot;连续显示的页码：&quot;</span>);<br>        <span class="hljs-keyword">int</span>[] nums = info.getNavigatepageNums();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) &#123;<br>            System.out.println(nums[i]);<br>        &#125;<br><br><br>        <span class="hljs-comment">//xxxx</span><br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        openSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>可以使用更强大的PageInfo封装返回结果</p></li></ol><h2 id="2-批量操作"><a href="#2-批量操作" class="headerlink" title="2. 批量操作"></a>2. 批量操作</h2><h3 id="2-1-操作说明"><a href="#2-1-操作说明" class="headerlink" title="2.1 操作说明"></a>2.1 操作说明</h3><p>默认的 openSession() 方法没有参数,它会创建有如下特性的</p><ul><li><p>会开启一个事务(也就是<strong>不自动提交</strong>) </p></li><li><p>连接对象会从由活动环境配置的数据源实例得到。</p></li><li><p>事务隔离级别将会使用驱动或数据源的默认设置。</p></li><li><p> 预处理语句不会被复用,也不会批量处理更新。</p></li></ul><p>openSession 方法的 <strong>ExecutorType</strong> 类型的参数，枚举类型: </p><ul><li>ExecutorType.SIMPLE: 这个执行器类型不做特殊的事情（这是默认装配的）。它<strong>为每个语句的执行创建一个新的预处理语句</strong>。</li><li>ExecutorType.REUSE: 这个执行器类型<strong>会复用预处理语句</strong>。</li><li>ExecutorType.BATCH: 这个执行器会<strong>批量执行所有更新语句</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testBatch</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException</span>&#123;<br>    SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br><br>    <span class="hljs-comment">//可以执行批量操作的sqlSession</span><br>    SqlSession openSession = sqlSessionFactory.openSession(ExecutorType.BATCH);<br>    <span class="hljs-keyword">long</span> start = System.currentTimeMillis();<br>    <span class="hljs-keyword">try</span>&#123;<br>        EmployeeMapper mapper = openSession.getMapper(EmployeeMapper.class);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10000</span>; i++) &#123;<br>            mapper.addEmp(<span class="hljs-keyword">new</span> Employee(UUID.randomUUID().toString().substring(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>), <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>));<br>        &#125;<br>        openSession.commit();<br>        <span class="hljs-keyword">long</span> end = System.currentTimeMillis();<br>        <span class="hljs-comment">//批量：（预编译sql一次==&gt;设置参数===&gt;10000次===&gt;执行（1次））</span><br>        <span class="hljs-comment">//Parameters: 616c1(String), b(String), 1(String)==&gt;4598</span><br>        <span class="hljs-comment">//非批量：（预编译sql=设置参数=执行）==》10000    10200</span><br>        System.out.println(<span class="hljs-string">&quot;执行时长：&quot;</span>+(end-start));<br>    &#125;<span class="hljs-keyword">finally</span>&#123;<br>        openSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-2-与Spring整合"><a href="#2-2-与Spring整合" class="headerlink" title="2.2 与Spring整合"></a>2.2 与Spring整合</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--配置一个可以进行批量执行的sqlSession  --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sqlSession&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sqlSessionFactory&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;sqlSessionFactoryBean&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;executorType&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;BATCH&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> SqlSession sqlSession;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Employee&gt; <span class="hljs-title">getEmps</span><span class="hljs-params">()</span></span>&#123;<br>    EmployeeMapper mapper = sqlSession.getMapper(EmployeeMapper.class);<br>    <span class="hljs-keyword">return</span> mapper.getEmps();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-3-注意"><a href="#2-3-注意" class="headerlink" title="2.3 注意"></a>2.3 注意</h3><ol><li>批量操作是在session.commit()以后才发送sql语句给数据库进行执行的</li><li>如果我们想让其提前执行，以方便后续可能的查询操作获取数据，我们可以使用sqlSession.flushStatements()方法，让其直接冲刷到数据库进行执行</li></ol><h2 id="3-存储过程-oracle分页"><a href="#3-存储过程-oracle分页" class="headerlink" title="3. 存储过程(oracle分页)"></a>3. 存储过程(oracle分页)</h2><h3 id="3-1-在数据库创建存储过程"><a href="#3-1-在数据库创建存储过程" class="headerlink" title="3.1 在数据库创建存储过程"></a>3.1 在数据库创建存储过程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">procedure</span><br>hello_test(<br>    p_start <span class="hljs-keyword">in</span> <span class="hljs-type">int</span>,p_end <span class="hljs-keyword">in</span> <span class="hljs-type">int</span>,p_count <span class="hljs-keyword">out</span> <span class="hljs-type">int</span>,p_emps <span class="hljs-keyword">out</span> sys_refcursor<br>    )<span class="hljs-keyword">as</span><br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">into</span> p_count <span class="hljs-keyword">from</span> employees;<br><span class="hljs-keyword">open</span> p_emps <span class="hljs-keyword">for</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> rownum rn,e.<span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> employees e <span class="hljs-keyword">where</span> rownum<span class="hljs-operator">&lt;=</span>p_end) <span class="hljs-keyword">where</span> rn<span class="hljs-operator">&gt;=</span>p_start;<br><span class="hljs-keyword">end</span> hello_test;<br></code></pre></td></tr></table></figure><h3 id="3-2-创建分页类"><a href="#3-2-创建分页类" class="headerlink" title="3.2 创建分页类"></a>3.2 创建分页类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.mybatis.bean;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 封装分页查询数据</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> lfy</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">OraclePage</span> </span>&#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> start;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> end;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> count;<br><span class="hljs-keyword">private</span> List&lt;Employee&gt; emps;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getStart</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> start;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setStart</span><span class="hljs-params">(<span class="hljs-keyword">int</span> start)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.start = start;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getEnd</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> end;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setEnd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> end)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.end = end;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getCount</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> count;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setCount</span><span class="hljs-params">(<span class="hljs-keyword">int</span> count)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.count = count;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;Employee&gt; <span class="hljs-title">getEmps</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> emps;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setEmps</span><span class="hljs-params">(List&lt;Employee&gt; emps)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.emps = emps;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-3-在mapper-xml文件中调用存储过程"><a href="#3-3-在mapper-xml文件中调用存储过程" class="headerlink" title="3.3 在mapper.xml文件中调用存储过程"></a>3.3 在mapper.xml文件中调用存储过程</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- public void getPageByProcedure(); </span><br><span class="hljs-comment"> 1、使用select标签定义调用存储过程</span><br><span class="hljs-comment"> 2、statementType=&quot;CALLABLE&quot;:表示要调用存储过程</span><br><span class="hljs-comment"> 3、&#123;call procedure_name(params)&#125;</span><br><span class="hljs-comment"> --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getPageByProcedure&quot;</span> <span class="hljs-attr">statementType</span>=<span class="hljs-string">&quot;CALLABLE&quot;</span> <span class="hljs-attr">databaseId</span>=<span class="hljs-string">&quot;oracle&quot;</span>&gt;</span><br>    &#123;call hello_test(<br>    #&#123;start,mode=IN,jdbcType=INTEGER&#125;,<br>    #&#123;end,mode=IN,jdbcType=INTEGER&#125;,<br>    #&#123;count,mode=OUT,jdbcType=INTEGER&#125;,<br>    #&#123;emps,mode=OUT,jdbcType=CURSOR,javaType=ResultSet,resultMap=PageEmp&#125;<br>    )&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean.Employee&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;PageEmp&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;EMPLOYEE_ID&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;id&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;LAST_NAME&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;email&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;EMAIL&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;email&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="3-4-测试代码"><a href="#3-4-测试代码" class="headerlink" title="3.4 测试代码"></a>3.4 测试代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">* oracle分页：</span><br><span class="hljs-comment">* 借助rownum：行号；子查询；</span><br><span class="hljs-comment">* 存储过程包装分页逻辑 </span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testProcedure</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException</span>&#123;<br>    SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br>    SqlSession openSession = sqlSessionFactory.openSession();<br>    <span class="hljs-keyword">try</span>&#123;<br>        EmployeeMapper mapper = openSession.getMapper(EmployeeMapper.class);<br>        OraclePage page = <span class="hljs-keyword">new</span> OraclePage();<br>        page.setStart(<span class="hljs-number">1</span>);<br>        page.setEnd(<span class="hljs-number">5</span>);<br>        mapper.getPageByProcedure(page);<br><br>        System.out.println(<span class="hljs-string">&quot;总记录数：&quot;</span>+page.getCount());<br>        System.out.println(<span class="hljs-string">&quot;查出的数据：&quot;</span>+page.getEmps().size());<br>        System.out.println(<span class="hljs-string">&quot;查出的数据：&quot;</span>+page.getEmps());<br>    &#125;<span class="hljs-keyword">finally</span>&#123;<br>        openSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-typeHandler处理枚举-用户登陆状态码"><a href="#4-typeHandler处理枚举-用户登陆状态码" class="headerlink" title="4. typeHandler处理枚举(用户登陆状态码)"></a>4. typeHandler处理枚举(用户登陆状态码)</h2><h3 id="4-1-枚举类"><a href="#4-1-枚举类" class="headerlink" title="4.1 枚举类"></a>4.1 枚举类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.mybatis.bean;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.bcel.internal.generic.RETURN;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 希望数据库保存的是100,200这些状态码，而不是默认0,1或者枚举的名</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">EmpStatus</span> </span>&#123;<br>LOGIN(<span class="hljs-number">100</span>,<span class="hljs-string">&quot;用户登录&quot;</span>),LOGOUT(<span class="hljs-number">200</span>,<span class="hljs-string">&quot;用户登出&quot;</span>),REMOVE(<span class="hljs-number">300</span>,<span class="hljs-string">&quot;用户不存在&quot;</span>);<br><br><span class="hljs-keyword">private</span> Integer code;<br><span class="hljs-keyword">private</span> String msg;<br>    <br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">EmpStatus</span><span class="hljs-params">(Integer code,String msg)</span></span>&#123;<br><span class="hljs-keyword">this</span>.code = code;<br><span class="hljs-keyword">this</span>.msg = msg;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getCode</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> code;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setCode</span><span class="hljs-params">(Integer code)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.code = code;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getMsg</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> msg;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setMsg</span><span class="hljs-params">(String msg)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.msg = msg;<br>&#125;<br><br><span class="hljs-comment">//按照状态码返回枚举对象</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> EmpStatus <span class="hljs-title">getEmpStatusByCode</span><span class="hljs-params">(Integer code)</span></span>&#123;<br><span class="hljs-keyword">switch</span> (code) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">100</span>:<br><span class="hljs-keyword">return</span> LOGIN;<br><span class="hljs-keyword">case</span> <span class="hljs-number">200</span>:<br><span class="hljs-keyword">return</span> LOGOUT;<br><span class="hljs-keyword">case</span> <span class="hljs-number">300</span>:<br><span class="hljs-keyword">return</span> REMOVE;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">return</span> LOGOUT;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-2-自定义枚举类的类型处理器"><a href="#4-2-自定义枚举类的类型处理器" class="headerlink" title="4.2 自定义枚举类的类型处理器"></a>4.2 自定义枚举类的类型处理器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.mybatis.typehandler;<br><br><span class="hljs-keyword">import</span> java.sql.CallableStatement;<br><span class="hljs-keyword">import</span> java.sql.PreparedStatement;<br><span class="hljs-keyword">import</span> java.sql.ResultSet;<br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><br><span class="hljs-keyword">import</span> org.apache.ibatis.type.JdbcType;<br><span class="hljs-keyword">import</span> org.apache.ibatis.type.TypeHandler;<br><br><span class="hljs-keyword">import</span> com.atguigu.mybatis.bean.EmpStatus;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1、实现TypeHandler接口。或者继承BaseTypeHandler</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyEnumEmpStatusTypeHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">TypeHandler</span>&lt;<span class="hljs-title">EmpStatus</span>&gt; </span>&#123;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 定义当前数据如何保存到数据库中</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setParameter</span><span class="hljs-params">(PreparedStatement ps, <span class="hljs-keyword">int</span> i, EmpStatus parameter,</span></span><br><span class="hljs-params"><span class="hljs-function">JdbcType jdbcType)</span> <span class="hljs-keyword">throws</span> SQLException </span>&#123;<br><span class="hljs-comment">// TODO Auto-generated method stub</span><br>System.out.println(<span class="hljs-string">&quot;要保存的状态码：&quot;</span>+parameter.getCode());<br>ps.setString(i, parameter.getCode().toString());<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> EmpStatus <span class="hljs-title">getResult</span><span class="hljs-params">(ResultSet rs, String columnName)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> SQLException </span>&#123;<br><span class="hljs-comment">// TODO Auto-generated method stub</span><br><span class="hljs-comment">//需要根据从数据库中拿到的枚举的状态码返回一个枚举对象</span><br><span class="hljs-keyword">int</span> code = rs.getInt(columnName);<br>System.out.println(<span class="hljs-string">&quot;从数据库中获取的状态码：&quot;</span>+code);<br>EmpStatus status = EmpStatus.getEmpStatusByCode(code);<br><span class="hljs-keyword">return</span> status;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> EmpStatus <span class="hljs-title">getResult</span><span class="hljs-params">(ResultSet rs, <span class="hljs-keyword">int</span> columnIndex)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> SQLException </span>&#123;<br><span class="hljs-comment">// TODO Auto-generated method stub</span><br><span class="hljs-keyword">int</span> code = rs.getInt(columnIndex);<br>System.out.println(<span class="hljs-string">&quot;从数据库中获取的状态码：&quot;</span>+code);<br>EmpStatus status = EmpStatus.getEmpStatusByCode(code);<br><span class="hljs-keyword">return</span> status;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> EmpStatus <span class="hljs-title">getResult</span><span class="hljs-params">(CallableStatement cs, <span class="hljs-keyword">int</span> columnIndex)</span></span><br><span class="hljs-function"><span class="hljs-keyword">throws</span> SQLException </span>&#123;<br><span class="hljs-comment">// TODO Auto-generated method stub</span><br><span class="hljs-keyword">int</span> code = cs.getInt(columnIndex);<br>System.out.println(<span class="hljs-string">&quot;从数据库中获取的状态码：&quot;</span>+code);<br>EmpStatus status = EmpStatus.getEmpStatusByCode(code);<br><span class="hljs-keyword">return</span> status;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-3-mybatis配置文件引入自定义类型处理器"><a href="#4-3-mybatis配置文件引入自定义类型处理器" class="headerlink" title="4.3 mybatis配置文件引入自定义类型处理器"></a>4.3 mybatis配置文件引入自定义类型处理器</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">typeHandlers</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--1、配置我们自定义的TypeHandler  --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">typeHandler</span> <span class="hljs-attr">handler</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.typehandler.MyEnumEmpStatusTypeHandler&quot;</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">&quot;com.atguigu.mybatis.bean.EmpStatus&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--2、也可以在处理某个字段的时候告诉MyBatis用什么类型处理器</span><br><span class="hljs-comment">    保存：#&#123;empStatus,typeHandler=xxxx&#125;</span><br><span class="hljs-comment">    查询：</span><br><span class="hljs-comment">     &lt;resultMap type=&quot;com.atguigu.mybatis.bean.Employee&quot; id=&quot;MyEmp&quot;&gt;</span><br><span class="hljs-comment">       &lt;id column=&quot;id&quot; property=&quot;id&quot;/&gt;</span><br><span class="hljs-comment">       &lt;result column=&quot;empStatus&quot; property=&quot;empStatus&quot; typeHandler=&quot;&quot;/&gt;</span><br><span class="hljs-comment">      &lt;/resultMap&gt;</span><br><span class="hljs-comment">    注意：如果在参数位置修改TypeHandler，应该保证保存数据和查询数据用的TypeHandler是一样的。</span><br><span class="hljs-comment">    --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">typeHandlers</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4-4-测试代码"><a href="#4-4-测试代码" class="headerlink" title="4.4 测试代码"></a>4.4 测试代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testEnumUse</span><span class="hljs-params">()</span></span>&#123;<br>    EmpStatus login = EmpStatus.LOGIN;<br>    System.out.println(<span class="hljs-string">&quot;枚举的索引：&quot;</span>+login.ordinal());<br>    System.out.println(<span class="hljs-string">&quot;枚举的名字：&quot;</span>+login.name());<br><br>    System.out.println(<span class="hljs-string">&quot;枚举的状态码：&quot;</span>+login.getCode());<br>    System.out.println(<span class="hljs-string">&quot;枚举的提示消息：&quot;</span>+login.getMsg());<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 默认mybatis在处理枚举对象的时候保存的是枚举的名字：EnumTypeHandler</span><br><span class="hljs-comment">* 改变使用：EnumOrdinalTypeHandler：</span><br><span class="hljs-comment">* <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testEnum</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException</span>&#123;<br>    SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();<br>    SqlSession openSession = sqlSessionFactory.openSession();<br>    <span class="hljs-keyword">try</span>&#123;<br>        EmployeeMapper mapper = openSession.getMapper(EmployeeMapper.class);<br>        Employee employee = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">&quot;test_enum&quot;</span>, <span class="hljs-string">&quot;enum@atguigu.com&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>);<br>        <span class="hljs-comment">//mapper.addEmp(employee);</span><br>        <span class="hljs-comment">//System.out.println(&quot;保存成功&quot;+employee.getId());</span><br>        <span class="hljs-comment">//openSession.commit();</span><br>        Employee empById = mapper.getEmpById(<span class="hljs-number">30026</span>);<br>        System.out.println(empById.getEmpStatus());<br>    &#125;<span class="hljs-keyword">finally</span>&#123;<br>        openSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MyBatis</tag>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyBatisPlus</title>
    <link href="/2021/11/11/MyBatisPlus/"/>
    <url>/2021/11/11/MyBatisPlus/</url>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="一、MyBatisPlus概况"><a href="#一、MyBatisPlus概况" class="headerlink" title="一、MyBatisPlus概况"></a>一、MyBatisPlus概况</h1><h2 id="1-代码及文档地址"><a href="#1-代码及文档地址" class="headerlink" title="1. 代码及文档地址"></a>1. 代码及文档地址</h2><p><a href="http://mp.baomidou.com/">官方地址</a></p><p><a href="https://github.com/baomidou/mybatis-plus">代码发布地址：github</a></p><p><a href="https://gitee.com/baomidou/mybatis-plus">代码发布地址：gitee</a></p><p><a href="http://mp.baomidou.com/#/?id=%E7%AE%80%E4%BB%8B">文档发布地址</a></p><h2 id="2-前置知识"><a href="#2-前置知识" class="headerlink" title="2.前置知识"></a>2.前置知识</h2><p>Mybatis</p><p> Spring </p><p>Maven</p><h1 id="二、集成MP"><a href="#二、集成MP" class="headerlink" title="二、集成MP"></a>二、集成MP</h1><h2 id="1-创建测试表"><a href="#1-创建测试表" class="headerlink" title="1.创建测试表"></a>1.创建测试表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 创建库</span><br><span class="hljs-keyword">CREATE</span> DATABASE mp;<br><span class="hljs-comment">-- 使用库</span><br>USE mp;<br><span class="hljs-comment">-- 创建表</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> tbl_employee(<br> id <span class="hljs-type">INT</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT,<br> last_name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>),<br> email <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>),<br> gender <span class="hljs-type">CHAR</span>(<span class="hljs-number">1</span>),<br> age <span class="hljs-type">int</span><br>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tbl_employee(last_name,email,gender,age) <span class="hljs-keyword">VALUES</span>(<span class="hljs-string">&#x27;Tom&#x27;</span>,<span class="hljs-string">&#x27;tom@atguigu.com&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">22</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tbl_employee(last_name,email,gender,age) <span class="hljs-keyword">VALUES</span>(<span class="hljs-string">&#x27;Jerry&#x27;</span>,<span class="hljs-string">&#x27;jerry@atguigu.com&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">25</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tbl_employee(last_name,email,gender,age) <span class="hljs-keyword">VALUES</span>(<span class="hljs-string">&#x27;Black&#x27;</span>,<span class="hljs-string">&#x27;black@atguigu.com&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">30</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> tbl_employee(last_name,email,gender,age) <span class="hljs-keyword">VALUES</span>(<span class="hljs-string">&#x27;White&#x27;</span>,<span class="hljs-string">&#x27;white@atguigu.com&#x27;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">35</span>);<br></code></pre></td></tr></table></figure><h2 id="2-创建javaBean"><a href="#2-创建javaBean" class="headerlink" title="2.创建javaBean"></a>2.创建javaBean</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> Integer id ; <br>    <span class="hljs-keyword">private</span> String lastName; <br>    <span class="hljs-keyword">private</span> String email ;<br>    <span class="hljs-keyword">private</span> Integer gender ;<br>    <span class="hljs-keyword">private</span> Integer age ;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getId</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">return</span> id; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setId</span><span class="hljs-params">(Integer id)</span> </span>&#123;<span class="hljs-keyword">this</span>.id = id; &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getLastName</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">return</span> lastName;&#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setLastName</span><span class="hljs-params">(String lastName)</span> </span>&#123;<span class="hljs-keyword">this</span>.lastName = lastName; &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getEmail</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">return</span> email; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setEmail</span><span class="hljs-params">(String email)</span> </span>&#123;<span class="hljs-keyword">this</span>.email = email; &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getGender</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">return</span> gender; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setGender</span><span class="hljs-params">(Integer gender)</span> </span>&#123;<span class="hljs-keyword">this</span>.gender = gender; &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getAge</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">return</span> age; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">(Integer age)</span> </span>&#123;<span class="hljs-keyword">this</span>.age = age; &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Employee [id=&quot;</span> + id + <span class="hljs-string">&quot;, lastName=&quot;</span> + lastName + <span class="hljs-string">&quot;, email=&quot;</span> + email<br>        + <span class="hljs-string">&quot;, gender=&quot;</span> + gender + <span class="hljs-string">&quot;, age=&quot;</span><br>        + age + <span class="hljs-string">&quot;]&quot;</span>; <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-依赖配置"><a href="#3-依赖配置" class="headerlink" title="3.依赖配置"></a>3.依赖配置</h2><h3 id="3-1-在pom-xml中添加依赖"><a href="#3-1-在pom-xml中添加依赖" class="headerlink" title="3.1 在pom.xml中添加依赖"></a>3.1 在pom.xml中添加依赖</h3><p>加入对 MP、Spring、连接池、Junit、Mysql 驱动等依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- mp 依赖 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--junit --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.9<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- log4j --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.17<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- c3p0 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.mchange<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>c3p0<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.9.5.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- mysql --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.1.37<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- spring --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-context<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.3.10.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-orm<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.3.10.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>==Mybatis 及 Mybatis-Spring 依赖请勿加入项目配置，以免引起版本冲突！！！Mybatis-Plus 会自动帮你维护！==</p><h3 id="3-2-MyBatis全局配置文件"><a href="#3-2-MyBatis全局配置文件" class="headerlink" title="3.2 MyBatis全局配置文件"></a>3.2 MyBatis全局配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">configuration</span></span><br><span class="hljs-meta"><span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-3-log4j-xml"><a href="#3-3-log4j-xml" class="headerlink" title="3.3 log4j.xml"></a>3.3 log4j.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">log4j</span>:configuration <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;log4j.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">log4j:configuration</span> <span class="hljs-attr">xmlns:log4j</span>=<span class="hljs-string">&quot;http://jakarta.apache.org/log4j/&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Encoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ConversionPattern&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;%-5p %d&#123;MM-dd HH:mm:ss,SSS&#125; %m (%F:%L) \n&quot;</span>/&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;java.sql&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;debug&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.ibatis&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;info&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;debug&quot;</span> /&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">log4j:configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-4-加入-db-properties-连接信息配置"><a href="#3-4-加入-db-properties-连接信息配置" class="headerlink" title="3.4 加入 db.properties 连接信息配置"></a>3.4 加入 db.properties 连接信息配置</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-meta">jdbc.driver</span>=<span class="hljs-string">com.mysql.jdbc.Driver</span><br><span class="hljs-meta">jdbc.url</span>=<span class="hljs-string">jdbc:mysql://localhost:3306/mp</span><br><span class="hljs-meta">jdbc.username</span>=<span class="hljs-string">root</span><br><span class="hljs-meta">jdbc.password</span>=<span class="hljs-string">1234</span><br></code></pre></td></tr></table></figure><h3 id="3-5-加入-spring-的配置文件-applicationContext-xml"><a href="#3-5-加入-spring-的配置文件-applicationContext-xml" class="headerlink" title="3.5 加入 spring 的配置文件 applicationContext.xml"></a>3.5 加入 spring 的配置文件 applicationContext.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:tx</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:mybatis-spring</span>=<span class="hljs-string">&quot;http://mybatis.org/schema/mybatis-spring&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://mybatis.org/schema/mybatis-spring </span></span><br><span class="hljs-string"><span class="hljs-tag">http://mybatis.org/schema/mybatis-spring-1.2.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/beans </span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/context </span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/tx </span></span><br><span class="hljs-string"><span class="hljs-tag">http://www.springframework.org/schema/tx/spring-tx-4.0.xsd&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 数据源 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">context:property-placeholder</span> <span class="hljs-attr">location</span>=<span class="hljs-string">&quot;classpath:db.properties&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClass&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.driver&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;jdbcUrl&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.url&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.username&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.password&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 事务管理器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSourceTransactionManager&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 基于注解的事务管理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tx:annotation-driven</span> </span><br><span class="hljs-tag"><span class="hljs-attr">transaction-manager</span>=<span class="hljs-string">&quot;dataSourceTransactionManager&quot;</span>/&gt;</span><br><span class="hljs-comment">&lt;!-- 配置 SqlSessionFactoryBean --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sqlSessionFactoryBean&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 数据源 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;configLocation&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;classpath:mybatis-config.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 别名处理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;typeAliasesPackage&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.atguigu.mp.beans&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">配置 mybatis 扫描 mapper 接口的路径</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;basePackage&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.atguigu.mp.mapper&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> ApplicationContext iocContext = <span class="hljs-keyword">new</span> ClassPathXmlApplicationContext(<span class="hljs-string">&quot;applicationContext.xml&quot;</span>);<br><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testEnvironment</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>    DataSource ds = iocContext.getBean(<span class="hljs-string">&quot;dataSource&quot;</span>,DataSource.class);<br>    Connection conn = ds.getConnection();<br>    System.out.println(conn);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5-集成MP"><a href="#5-集成MP" class="headerlink" title="5.集成MP"></a>5.集成MP</h2><p>Mybatis-Plus 的集成非常简单，对于 Spring，我们仅仅需要把 Mybatis 自带的MybatisSqlSessionFactoryBean 替换为 MP 自带的即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sqlSessionFactoryBean&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 数据源 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;configLocation&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;classpath:mybatis-config.xml&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 别名处理 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;typeAliasesPackage&quot;</span> </span><br><span class="hljs-tag">    <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.atguigu.mp.beans&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="三、入门操作"><a href="#三、入门操作" class="headerlink" title="三、入门操作"></a>三、入门操作</h1><h2 id="1-通用crud"><a href="#1-通用crud" class="headerlink" title="1.通用crud"></a>1.通用crud</h2><ul><li><p>假设我们已存在一张 tbl_employee 表，且已有对应的实体类 Employee，实现tbl_employee 表的 CRUD 操作我们需要做什么呢？</p></li><li><p>实现方式:</p><ul><li><p>基于 Mybatis</p><p>需要编写 EmployeeMapper 接口，并手动编写 CRUD 方法。提供 EmployeeMapper.xml 映射文件，并手动编写每个方法对应的 SQL 语句.</p></li><li><p>基于 MP</p><p>只需要创建 EmployeeMapper 接口, 并继承 BaseMapper 接口.这就是使用 MP需要完成的所有操作，甚至不需要创建 SQL 映射文件。</p></li></ul></li></ul><h2 id="2-插入操作"><a href="#2-插入操作" class="headerlink" title="2.插入操作"></a>2.插入操作</h2><ul><li><p>Integer insert(T entity); </p><p>插入时会根据实体类的每个属性进行非空判断，只有非空的才会出现到SQL语句中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//初始化Employee对象</span><br>Employee employee  = <span class="hljs-keyword">new</span> Employee();<br>employee.setLastName(<span class="hljs-string">&quot;MP&quot;</span>);<br>employee.setEmail(<span class="hljs-string">&quot;mp@atguigu.com&quot;</span>);<br>employee.setGender(<span class="hljs-number">1</span>);<br>employee.setAge(<span class="hljs-number">22</span>);<br>employee.setSalary(<span class="hljs-number">20000.0</span>);<br><span class="hljs-comment">//插入到数据库   </span><br><span class="hljs-comment">// insert方法在插入时， 会根据实体类的每个属性进行非空判断，只有非空的属性对应的字段才会出现到SQL语句中</span><br>employeeMapper.insert(employee);  <br></code></pre></td></tr></table></figure></li><li><p>@TableName(value=”tbl_employee”)或者全局的 MP 配置: <property name="tablePrefix" value="tbl_"></property></p></li><li><p>@TableField(value=”last_name”)或者全局的 MP 配置: <property name="dbColumnUnderline" value="true"></property></p></li><li><p> @TableId(value = “id” , type = IdType.AUTO)或者全局的 MP 配置: <property name="idType" value="0"></property></p></li><li><p>支持主键自增的数据库插入数据获取主键值</p><ul><li><p>Mybatis: 需要通过 useGeneratedKeys 以及 keyProperty 来设置</p></li><li><p>MP: 自动将主键值回写到实体类中</p></li></ul></li><li><p>Integer insertAllColumn(T entity)</p><p>插入时不管属性是否为空，属性所对应的字段都会出现到SQL语句中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//初始化Employee对象</span><br>Employee employee  = <span class="hljs-keyword">new</span> Employee();<br>employee.setLastName(<span class="hljs-string">&quot;MP&quot;</span>);<br>employee.setEmail(<span class="hljs-string">&quot;mp@atguigu.com&quot;</span>);<br><span class="hljs-comment">//employee.setGender(1);</span><br><span class="hljs-comment">//employee.setAge(22);</span><br><span class="hljs-comment">//insertAllColumn方法在插入时， 不管属性是否非空， 属性所对应的字段都会出现到SQL语句中. </span><br>employeeMapper.insertAllColumn(employee);<br></code></pre></td></tr></table></figure></li></ul><h2 id="3-更新操作"><a href="#3-更新操作" class="headerlink" title="3.更新操作"></a>3.更新操作</h2><ul><li><p>Integer updateById(@Param(“et”) T entity);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//初始化修改对象</span><br>Employee employee = <span class="hljs-keyword">new</span> Employee();<br>employee.setId(<span class="hljs-number">7</span>);<br>employee.setLastName(<span class="hljs-string">&quot;小泽老师&quot;</span>);<br>employee.setEmail(<span class="hljs-string">&quot;xz@sina.com&quot;</span>);<br>employee.setGender(<span class="hljs-number">0</span>);<br>employee.setAge(<span class="hljs-number">33</span>);<br><br>employeeMapper.updateById(employee);<br></code></pre></td></tr></table></figure></li><li><p>Integer updateAllColumnById(@Param(“et”) T entity)</p><p>注意：此方法若没有给某些字段赋值，则会将这些字段更新为null，若更新前原本有值，慎用此方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//初始化修改对象</span><br>Employee employee = <span class="hljs-keyword">new</span> Employee();<br>employee.setId(<span class="hljs-number">7</span>);<br>employee.setLastName(<span class="hljs-string">&quot;小泽老师&quot;</span>);<br>employee.setEmail(<span class="hljs-string">&quot;xz@sina.com&quot;</span>);<br>employee.setGender(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//employee.setAge(33);</span><br><br>employeeMapper.updateAllColumnById(employee);<br></code></pre></td></tr></table></figure></li></ul><h2 id="4-查询操作"><a href="#4-查询操作" class="headerlink" title="4.查询操作"></a>4.查询操作</h2><h3 id="4-1-通过id查询"><a href="#4-1-通过id查询" class="headerlink" title="4.1 通过id查询"></a>4.1 通过id查询</h3><ul><li><p>T selectById(Serializable id);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//通过id查询</span><br>Employee employee = employeeMapper.selectById(<span class="hljs-number">7</span>);<br>System.out.println(employee);<br></code></pre></td></tr></table></figure></li></ul><h3 id="4-2-通过多个列进行查询，只能进行结果只有一条数据的查询"><a href="#4-2-通过多个列进行查询，只能进行结果只有一条数据的查询" class="headerlink" title="4.2 通过多个列进行查询，只能进行结果只有一条数据的查询"></a>4.2 通过多个列进行查询，只能进行结果只有一条数据的查询</h3><ul><li><p>T selectOne(@Param(“ew”) T entity);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//通过多个列进行查询    id  +  lastName  +  gender</span><br>Employee  employee = <span class="hljs-keyword">new</span> Employee();<br>employee.setId(<span class="hljs-number">7</span>);<br>employee.setLastName(<span class="hljs-string">&quot;小泽老师&quot;</span>);<br>employee.setGender(<span class="hljs-number">0</span>);<br>Employee result = employeeMapper.selectOne(employee);<br>System.out.println(<span class="hljs-string">&quot;result: &quot;</span> +result );<br></code></pre></td></tr></table></figure></li></ul><h3 id="4-3-通过多个id查询"><a href="#4-3-通过多个id查询" class="headerlink" title="4.3 通过多个id查询"></a>4.3 通过多个id查询</h3><ul><li> List<T> selectBatchIds(List&lt;? extends Serializable&gt; idList);</li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//通过多个id进行查询   </span><br>List&lt;Integer&gt; idList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>idList.add(<span class="hljs-number">4</span>);<br>idList.add(<span class="hljs-number">5</span>);<br>idList.add(<span class="hljs-number">6</span>);<br>idList.add(<span class="hljs-number">7</span>);<br>List&lt;Employee&gt; emps = employeeMapper.selectBatchIds(idList);<br>System.out.println(emps);<br></code></pre></td></tr></table></figure><h3 id="4-4-通过Map封装条件查询"><a href="#4-4-通过Map封装条件查询" class="headerlink" title="4.4 通过Map封装条件查询"></a>4.4 通过Map封装条件查询</h3><ul><li><p>List<T> selectByMap(@Param(“cm”) Map&lt;String, Object&gt; columnMap);</p><p>集合中要写的是数据库表的列名，不是实体类的属性名。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//通过Map封装条件查询</span><br>Map&lt;String,Object&gt; columnMap = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>columnMap.put(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;Tom&quot;</span>);<br>columnMap.put(<span class="hljs-string">&quot;gender&quot;</span>, <span class="hljs-number">1</span>);<br>List&lt;Employee&gt; emps = employeeMapper.selectByMap(columnMap);<br>System.out.println(emps);<br></code></pre></td></tr></table></figure></li></ul><h3 id="4-5-分页查询"><a href="#4-5-分页查询" class="headerlink" title="4.5 分页查询"></a>4.5 分页查询</h3><ul><li><p>List<T> selectPage(RowBounds rowBounds, @Param(“ew”) Wrapper<T> wrapper);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//5. 分页查询</span><br>List&lt;Employee&gt; emps = employeeMapper.selectPage(<span class="hljs-keyword">new</span> Page&lt;&gt;(<span class="hljs-number">3</span>, <span class="hljs-number">2</span>), <span class="hljs-keyword">null</span>);<br>System.out.println(emps);<br></code></pre></td></tr></table></figure></li></ul><h2 id="5-删除操作"><a href="#5-删除操作" class="headerlink" title="5.删除操作"></a>5.删除操作</h2><h3 id="5-1-根据id删除"><a href="#5-1-根据id删除" class="headerlink" title="5.1 根据id删除"></a>5.1 根据id删除</h3><ul><li><p>Integer deleteById(Serializable id);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1 .根据id进行删除</span><br>Integer result = employeeMapper.deleteById(<span class="hljs-number">13</span>);<br>System.out.println(<span class="hljs-string">&quot;result: &quot;</span> + result );<br></code></pre></td></tr></table></figure></li></ul><h3 id="5-2-根据-条件进行删除"><a href="#5-2-根据-条件进行删除" class="headerlink" title="5.2 根据 条件进行删除"></a>5.2 根据 条件进行删除</h3><ul><li><p>Integer deleteByMap(@Param(“cm”) Map&lt;String, Object&gt; columnMap);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Map&lt;String,Object&gt; columnMap = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>columnMap.put(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;MP&quot;</span>);<br>columnMap.put(<span class="hljs-string">&quot;email&quot;</span>, <span class="hljs-string">&quot;mp@atguigu.com&quot;</span>);<br>Integer result = employeeMapper.deleteByMap(columnMap);<br>System.out.println(<span class="hljs-string">&quot;result: &quot;</span> + result );<br></code></pre></td></tr></table></figure></li></ul><h3 id="5-3-批量删除"><a href="#5-3-批量删除" class="headerlink" title="5.3 批量删除"></a>5.3 批量删除</h3><ul><li> Integer deleteBatchIds(List&lt;? extends Serializable&gt; idList);</li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//批量删除</span><br>List&lt;Integer&gt; idList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>idList.add(<span class="hljs-number">3</span>);<br>idList.add(<span class="hljs-number">4</span>);<br>idList.add(<span class="hljs-number">5</span>);<br>Integer result = employeeMapper.deleteBatchIds(idList);<br>System.out.println(<span class="hljs-string">&quot;result: &quot;</span> + result );<br></code></pre></td></tr></table></figure><h2 id="6-启动注入-SQL-原理分析"><a href="#6-启动注入-SQL-原理分析" class="headerlink" title="6.启动注入 SQL 原理分析"></a>6.<strong>启动注入</strong> <strong>SQL</strong> 原理分析</h2><ul><li><p>问题: xxxMapper 继承了 BaseMapper<T>, BaseMapper 中提供了通用的 CRUD 方法,方法来源于 BaseMapper, 有方法就必须有 SQL, 因为 MyBatis 最终还是需要通过SQL 语句操作数据.</p></li><li><p>前置知识:MyBatis 源码中比较重要的一些对象， MyBatis 框架的执行流程</p></li></ul><p>Configuration、MappedStatement……..</p><ul><li>通过现象看到本质</li></ul><p>A． employeeMapper 的本质 org.apache.ibatis.binding.MapperProxy</p><p>B． MapperProxy 中 sqlSession –&gt;SqlSessionFactory</p><p>C． SqlSessionFacotry 中 → Configuration→ MappedStatements</p><p>每一个 mappedStatement 都表示 Mapper 接口中的一个方法与 Mapper 映射文件中的一个 SQL。 MP 在启动就会挨个分析 xxxMapper 中的方法，并且将对应的 SQL 语句处理好，保存到 configuration 对象中的 mappedStatements 中. </p><p>D． 本质:</p><p>​    Configuration： MyBatis 或者 MP 全局配置对象</p><p>​    MappedStatement：一个 MappedStatement 对象对应 Mapper 配置文件中的一个</p><p>​    select/update/insert/delete 节点，主要描述的是一条 SQL 语句</p><p>​    SqlMethod : 枚举对象 ，MP 支持的 SQL 方法</p><p>​    TableInfo：数据库表反射信息 ，可以获取到数据库表相关的信息</p><p>​    SqlSource: SQL 语句处理对象</p><p>​    MapperBuilderAssistant： 用于缓存、SQL 参数、查询方剂结果集处理等. 通过 MapperBuilderAssistant 将每一个 mappedStatement 添加到 configuration 中的 mappedstatements 中</p><h1 id="四、条件构造器-EntityWrapper"><a href="#四、条件构造器-EntityWrapper" class="headerlink" title="四、条件构造器 EntityWrapper"></a>四、条件构造器 EntityWrapper</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><ul><li><p>Mybatis-Plus 通过 EntityWrapper（简称 EW，MP 封装的一个查询条件构造器）或者Condition（与 EW 类似） 来让用户自由的构建查询条件，简单便捷，没有额外的负担，能够有效提高开发效率</p></li><li><p>实体包装器，主要用于处理 sql 拼接，排序，实体参数查询等</p></li><li><p>注意: ==使用的是数据库字段，不是 Java 属性!==</p></li><li><p><a href="https://mp.baomidou.com/guide/wrapper.html">条件参数说明</a></p></li></ul><h2 id="2-案例"><a href="#2-案例" class="headerlink" title="2.案例"></a>2.案例</h2><p>需求：分页查询 tbl_employee 表中，年龄在 18~50 之间性别为男且姓名为 xx 的所有用户。</p><p>实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;Employee&gt; userList = employeeMapper.selectPage(<br> <span class="hljs-keyword">new</span> Page&lt;Employee&gt;(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>),<br> <span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>    .eq(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;MybatisPlus&quot;</span>)<br> .eq(<span class="hljs-string">&quot;gender&quot;</span>, <span class="hljs-number">1</span>)<br> .between(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">18</span>, <span class="hljs-number">50</span>)<br>);<br></code></pre></td></tr></table></figure><h2 id="3-带条件的查询"><a href="#3-带条件的查询" class="headerlink" title="3.带条件的查询"></a>3.带条件的查询</h2><p>List<T> selectList(@Param(“ew”) Wrapper<T> wrapper);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//分页查询tbl_employee表中，年龄在18~50之间且性别为男且姓名为Tom的所有用户</span><br>List&lt;Employee&gt; emps =employeeMapper.selectPage(<br>    <span class="hljs-keyword">new</span> Page&lt;Employee&gt;(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>),<br><span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>.between(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">18</span>, <span class="hljs-number">50</span>)<br>.eq(<span class="hljs-string">&quot;gender&quot;</span>, <span class="hljs-number">1</span>)<br>.eq(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;Tom&quot;</span>)<br>);<br>System.out.println(emps);<br><br><span class="hljs-comment">// 查询tbl_employee表中， 性别为女并且名字中带有&quot;老师&quot; 或者  邮箱中带有&quot;a&quot;</span><br>List&lt;Employee&gt; emps = employeeMapper.selectList(<br><span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>.eq(<span class="hljs-string">&quot;gender&quot;</span>, <span class="hljs-number">0</span>)<br>.like(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;老师&quot;</span>)<br><span class="hljs-comment">//.or()    // SQL: (gender = ? AND last_name LIKE ? OR email LIKE ?)    </span><br>.orNew()   <span class="hljs-comment">// SQL: (gender = ? AND last_name LIKE ?) OR (email LIKE ?) </span><br>.like(<span class="hljs-string">&quot;email&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>)<br>);<br>System.out.println(emps);<br><br><span class="hljs-comment">// 查询性别为女的, 根据age进行排序(asc/desc), 简单分页</span><br>List&lt;Employee&gt; emps  = employeeMapper.selectList(<br><span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>.eq(<span class="hljs-string">&quot;gender&quot;</span>, <span class="hljs-number">0</span>)<br><span class="hljs-comment">//.orderBy(&quot;age&quot;) //默认升序</span><br>.orderDesc(Arrays.asList(<span class="hljs-keyword">new</span> String [] &#123;<span class="hljs-string">&quot;age&quot;</span>&#125;))<br>.last(<span class="hljs-string">&quot;desc limit 1,3&quot;</span>)<br>);<br>System.out.println(emps);<br></code></pre></td></tr></table></figure><h2 id="4-带条件的修改"><a href="#4-带条件的修改" class="headerlink" title="4.带条件的修改"></a>4.带条件的修改</h2><p>Integer update(@Param(“et”) T entity, @Param(“ew”) Wrapper<T> wrapper);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>employee.setLastName(<span class="hljs-string">&quot;苍老师&quot;</span>);<br>employee.setEmail(<span class="hljs-string">&quot;cls@sina.com&quot;</span>);<br>employee.setGender(<span class="hljs-number">0</span>);<br><br>employeeMapper.update(employee, <br><span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>.eq(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;Tom&quot;</span>)<br>.eq(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">44</span>)<br>);<br></code></pre></td></tr></table></figure><h2 id="5-带条件的删除"><a href="#5-带条件的删除" class="headerlink" title="5.带条件的删除"></a>5.带条件的删除</h2><p>Integer delete(@Param(“ew”) Wrapper<T> wrapper);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">employeeMapper.delete(<br><span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>.eq(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;Tom&quot;</span>)<br>.eq(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">22</span>)<br>);<br></code></pre></td></tr></table></figure><h2 id="6-使用-Condition-的方式打开如上需求"><a href="#6-使用-Condition-的方式打开如上需求" class="headerlink" title="6.使用 Condition 的方式打开如上需求"></a>6.<strong>使用</strong> <strong>Condition</strong> 的方式打开如上需求</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//分页查询tbl_employee表中，年龄在18~50之间且性别为男且姓名为Tom的所有用户</span><br>List&lt;Employee &gt; emps = employeeMapper.selectPage(<br><span class="hljs-keyword">new</span> Page&lt;Employee&gt;(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>), <br>Condition.create()<br>.between(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">18</span>, <span class="hljs-number">50</span>)<br>.eq(<span class="hljs-string">&quot;gender&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>)<br>.eq(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;Tom&quot;</span>)<br>);<br>System.out.println(emps);<br></code></pre></td></tr></table></figure><h2 id="7-小结"><a href="#7-小结" class="headerlink" title="7.小结"></a>7.小结</h2><p>MP: EntityWrapper Condition 条件构造器</p><p>MyBatis MBG : xxxExample→Criteria : QBC( Query By Criteria)</p><p>​        Hibernate 、 通用 Mapper</p><h1 id="五、ActiveRecord-活动记录"><a href="#五、ActiveRecord-活动记录" class="headerlink" title="五、ActiveRecord(活动记录)"></a>五、ActiveRecord(活动记录)</h1><p>Active Record(活动记录)，是一种领域模型模式，特点是一个模型类对应关系型数据库中的一个表，而模型类的一个实例对应表中的一行记录。</p><p>ActiveRecord 一直广受动态语言（ PHP 、 Ruby 等）的喜爱，而 Java 作为准静态语言，对于ActiveRecord 往往只能感叹其优雅，所以 MP 也在 AR 道路上进行了一定的探索</p><h2 id="1-如何使用AR模式"><a href="#1-如何使用AR模式" class="headerlink" title="1.如何使用AR模式"></a>1.如何使用AR模式</h2><p>让实体类继承 Model 类且实现主键指定方法即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.activerecord.Model;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span>&lt;<span class="hljs-title">Employee</span>&gt; </span>&#123;<br>    ...<br>        <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 指定当前实体类的主键属性</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> Serializable <span class="hljs-title">pkVal</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> id;<br>&#125; <br>    <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-AR基本CRUD"><a href="#2-AR基本CRUD" class="headerlink" title="2.AR基本CRUD"></a>2.AR基本CRUD</h2><h3 id="2-1-AR-插入操作"><a href="#2-1-AR-插入操作" class="headerlink" title="2.1 AR  插入操作"></a>2.1 AR  插入操作</h3><p>public boolean insert()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>employee.setLastName(<span class="hljs-string">&quot;宋老师&quot;</span>);<br>employee.setEmail(<span class="hljs-string">&quot;sls@atguigu.com&quot;</span>);<br>employee.setGender(<span class="hljs-number">1</span>);<br>employee.setAge(<span class="hljs-number">35</span>);<br><br><span class="hljs-keyword">boolean</span> result = employee.insert();<br>System.out.println(<span class="hljs-string">&quot;result:&quot;</span> +result );<br></code></pre></td></tr></table></figure><h3 id="2-2-修改操作"><a href="#2-2-修改操作" class="headerlink" title="2.2 修改操作"></a>2.2 修改操作</h3><p>public boolean updateById()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>employee.setId(<span class="hljs-number">20</span>);<br>employee.setLastName(<span class="hljs-string">&quot;宋老湿&quot;</span>);<br>employee.setEmail(<span class="hljs-string">&quot;sls@atguigu.com&quot;</span>);<br>employee.setGender(<span class="hljs-number">1</span>);<br>employee.setAge(<span class="hljs-number">36</span>);<br><br><span class="hljs-keyword">boolean</span> result = employee.updateById();<br>System.out.println(<span class="hljs-string">&quot;result:&quot;</span> +result );<br></code></pre></td></tr></table></figure><h3 id="2-3-查询操作"><a href="#2-3-查询操作" class="headerlink" title="2.3 查询操作"></a>2.3 查询操作</h3><ul><li>public T selectById()</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>employee.setId(<span class="hljs-number">14</span>);<br>Employee result = employee.selectById();<br>System.out.println(result );<br></code></pre></td></tr></table></figure><ul><li>public T selectById(Serializable id)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>Employee result = employee.selectById(<span class="hljs-number">14</span>);<br>System.out.println(result );<br></code></pre></td></tr></table></figure><ul><li>public List<T> selectAll()</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>List&lt;Employee&gt; emps = employee.selectAll();<br>System.out.println(emps);<br></code></pre></td></tr></table></figure><ul><li>public List<T> selectList(Wrapper wrapper)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>List&lt;Employee &gt; emps= <br>employee.selectList(<br>    <span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>    .like(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;老师&quot;</span>)<br>);<br>System.out.println(emps);<br></code></pre></td></tr></table></figure><ul><li>public int selectCount(Wrapper wrapper)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>Integer result = employee.selectCount(<br>    <span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>    .eq(<span class="hljs-string">&quot;gender&quot;</span>, <span class="hljs-number">0</span>)<br>);<br>System.out.println(<span class="hljs-string">&quot;result: &quot;</span> +result );<br></code></pre></td></tr></table></figure><h3 id="2-4-删除操作"><a href="#2-4-删除操作" class="headerlink" title="2.4 删除操作"></a>2.4 删除操作</h3><ul><li>public boolean deleteById()</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>employee.setId(<span class="hljs-number">2</span>);<br><span class="hljs-keyword">boolean</span> result = employee.deleteById();<br>System.out.println(<span class="hljs-string">&quot;result:&quot;</span> +result );<br></code></pre></td></tr></table></figure><ul><li>public boolean deleteById(Serializable id)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br><span class="hljs-keyword">boolean</span> result = employee.deleteById(<span class="hljs-number">2</span>);<br>System.out.println(<span class="hljs-string">&quot;result:&quot;</span> +result );<br></code></pre></td></tr></table></figure><ul><li>public boolean delete(Wrapper wrapper)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br><span class="hljs-keyword">boolean</span> result = employee.delete(<br>    <span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>    .like(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;小&quot;</span>)<br>);<br>System.out.println(result );<br></code></pre></td></tr></table></figure><h3 id="2-5-分页复杂操作"><a href="#2-5-分页复杂操作" class="headerlink" title="2.5 分页复杂操作"></a>2.5 分页复杂操作</h3><ul><li>public Page<T> selectPage(Page<T> page, Wrapper<T> wrapper)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">Employee employee = <span class="hljs-keyword">new</span> Employee();<br>Page&lt;Employee&gt; page = employee.selectPage(<br>    <span class="hljs-keyword">new</span> Page&lt;&gt;(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>), <br><span class="hljs-keyword">new</span> EntityWrapper&lt;Employee&gt;()<br>    .like(<span class="hljs-string">&quot;last_name&quot;</span>, <span class="hljs-string">&quot;老&quot;</span>)<br>);<br>List&lt;Employee&gt; emps = page.getRecords();<br>System.out.println(emps);<br></code></pre></td></tr></table></figure><h2 id="3-小结"><a href="#3-小结" class="headerlink" title="3.小结"></a>3.小结</h2><p>AR 模式提供了一种更加便捷的方式实现 CRUD 操作，其本质还是调用的 Mybatis 对应的方法，类似于==语法糖==。</p><p>语法糖是指计算机语言中添加的某种语法，这种语法对原本语言的功能并没有影响.可以更方便开发者使用，可以避免出错的机会，让程序可读性更好.</p><h1 id="六、代码生成器"><a href="#六、代码生成器" class="headerlink" title="六、代码生成器"></a>六、代码生成器</h1><ol><li><p>MP 提供了大量的自定义设置，生成的代码完全能够满足各类型的需求</p></li><li><p>MP 的代码生成器 和 Mybatis MBG 代码生成器: </p></li></ol><ul><li>MP 的代码生成器都是基于 java 代码来生成。</li><li>MBG 基于 xml 文件进行代码生成</li><li></li><li>MyBatis 的代码生成器可生成: 实体类、Mapper 接口、Mapper 映射文件</li><li>MP 的代码生成器可生成: 实体类(可以选择是否支持 AR)、Mapper 接口、Mapper 映射文件、 ==Service 层、Controller 层==.</li></ul><ol start="3"><li><p>表及字段命名策略选择</p><p>在 MP 中，我们建议数据库表名 和 表字段名采用==驼峰命名方式==， 如果采用下划线命名方式。请开启全局下划线开关，如果表名字段名命名方式不一致请注解指定，我们建议最好保持一致。这么做的原因是为了避免在对应实体类时产生的性能损耗，这样字段不用做映射就能直接和实体类对应。当然如果项目里不用考虑这点性能损耗，那么你采用下滑线也是没问题的，只需要在生成代码时配置dbColumnUnderline 属性就可以</p></li></ol><h2 id="1-依赖"><a href="#1-依赖" class="headerlink" title="1.依赖"></a>1.依赖</h2><h3 id="1-1-模板引擎"><a href="#1-1-模板引擎" class="headerlink" title="1.1 模板引擎"></a>1.1 模板引擎</h3><p>MP 的代码生成器默认使用的是 Apache 的 Velocity 模板，当然也可以更换为别的模板技术，例如 freemarker。需要加入 Apache Velocity 的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.velocity<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>velocity-engine-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="1-2-加入-slf4j-查看日志输出信息"><a href="#1-2-加入-slf4j-查看日志输出信息" class="headerlink" title="1.2 加入 slf4j ,查看日志输出信息"></a>1.2 加入 slf4j ,查看日志输出信息</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.7.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span> <br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-log4j12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.7.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="2-示例代码"><a href="#2-示例代码" class="headerlink" title="2.示例代码"></a>2.示例代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span>  <span class="hljs-title">testGenerator</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">//1. 全局配置</span><br>    GlobalConfig config = <span class="hljs-keyword">new</span> GlobalConfig();<br>    config.setActiveRecord(<span class="hljs-keyword">true</span>) <span class="hljs-comment">// 是否支持AR模式</span><br>        .setAuthor(<span class="hljs-string">&quot;alvis-yaing&quot;</span>) <span class="hljs-comment">// 作者</span><br>        .setOutputDir(<span class="hljs-string">&quot;E:\JavaProjects\official\scantest\src\main\java&quot;</span>) <span class="hljs-comment">// 生成路径</span><br>        .setFileOverride(<span class="hljs-keyword">true</span>)  <span class="hljs-comment">// 文件覆盖</span><br>        .setIdType(IdType.AUTO) <span class="hljs-comment">// 主键策略</span><br>        .setServiceName(<span class="hljs-string">&quot;%sService&quot;</span>)  <span class="hljs-comment">// 设置生成的service接口的名字的首字母是否为I</span><br>        <span class="hljs-comment">// IEmployeeService</span><br>        .setBaseResultMap(<span class="hljs-keyword">true</span>)<br>        .setBaseColumnList(<span class="hljs-keyword">true</span>);<br><br>    <span class="hljs-comment">//2. 数据源配置</span><br>    DataSourceConfig  dsConfig  = <span class="hljs-keyword">new</span> DataSourceConfig();<br>    dsConfig.setDbType(DbType.MYSQL)  <span class="hljs-comment">// 设置数据库类型</span><br>        .setDriverName(<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>)<br>        .setUrl(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/mp&quot;</span>)<br>        .setUsername(<span class="hljs-string">&quot;root&quot;</span>)<br>        .setPassword(<span class="hljs-string">&quot;root&quot;</span>);<br><br>    <span class="hljs-comment">//3. 策略配置</span><br>    StrategyConfig stConfig = <span class="hljs-keyword">new</span> StrategyConfig();<br>    stConfig.setCapitalMode(<span class="hljs-keyword">true</span>) <span class="hljs-comment">//全局大写命名</span><br>        .setDbColumnUnderline(<span class="hljs-keyword">true</span>)  <span class="hljs-comment">// 指定表名 字段名是否使用下划线</span><br>        .setNaming(NamingStrategy.underline_to_camel) <span class="hljs-comment">// 数据库表映射到实体的命名策略</span><br>        .setTablePrefix(<span class="hljs-string">&quot;tbl_&quot;</span>)<br>        .setInclude(<span class="hljs-string">&quot;tbl_employee&quot;</span>);  <span class="hljs-comment">// 生成的表</span><br><br>    <span class="hljs-comment">//4. 包名策略配置 </span><br>    PackageConfig pkConfig = <span class="hljs-keyword">new</span> PackageConfig();<br>    pkConfig.setParent(<span class="hljs-string">&quot;com.deepcre.mvc&quot;</span>)<br>        .setMapper(<span class="hljs-string">&quot;mapper&quot;</span>)<br>        .setService(<span class="hljs-string">&quot;service&quot;</span>)<br>        .setController(<span class="hljs-string">&quot;controller&quot;</span>)<br>        .setEntity(<span class="hljs-string">&quot;beans&quot;</span>)<br>        .setXml(<span class="hljs-string">&quot;mapper&quot;</span>);<br><br>    <span class="hljs-comment">//5. 整合配置</span><br>    AutoGenerator  ag = <span class="hljs-keyword">new</span> AutoGenerator();<br><br>    ag.setGlobalConfig(config)<br>        .setDataSource(dsConfig)<br>        .setStrategy(stConfig)<br>        .setPackageInfo(pkConfig);<br><br>    <span class="hljs-comment">//6. 执行</span><br>    ag.execute();<br>&#125;<br></code></pre></td></tr></table></figure><p>不用再进行mapper的注入.EmployeeServiceImpl  继承了ServiceImpl</p><p>在ServiceImpl中已经完成Mapper对象的注入,直接在EmployeeServiceImpl中进行使用</p><p>在ServiceImpl中也帮我们提供了常用的CRUD方法， 基本的一些CRUD方法在Service中不需要我们自己定义.</p><h2 id="3-小结-1"><a href="#3-小结-1" class="headerlink" title="3.小结"></a>3.小结</h2><p><a href="https://mp.baomidou.com/guide/generator.html">其他配置参考地址</a></p><h1 id="七、插件扩展"><a href="#七、插件扩展" class="headerlink" title="七、插件扩展"></a>七、插件扩展</h1><h2 id="1-Mybatis插件机制简介"><a href="#1-Mybatis插件机制简介" class="headerlink" title="1.Mybatis插件机制简介"></a>1.Mybatis插件机制简介</h2><ol><li>插件机制：Mybatis 通过插件(Interceptor) 可以做到拦截四大对象相关方法的执行,根据需求,完成相关数据的动态改变。</li></ol><ul><li>Executor</li><li>StatementHandler</li><li>ParameterHandler</li><li>ResultSetHandler</li></ul><ol start="2"><li> 插件原理：四大对象的每个对象在创建时，都会执行 interceptorChain.pluginAll()，会经过每个插件对象的 plugin()方法，目的是为当前的四大对象创建代理。代理对象就可以拦截到四大对象相关方法的执行，因为要执行四大对象的方法需要经过代理.</li></ol><h2 id="2-分页插件"><a href="#2-分页插件" class="headerlink" title="2.分页插件"></a>2.分页插件</h2><p>com.baomidou.mybatisplus.plugins.PaginationInterceptor</p><p>插件注册（appplicationContext.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- mp分页插件注册 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;plugins&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 注册分页插件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.plugins.PaginationInterceptor&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试分页插件</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testPage</span><span class="hljs-params">()</span> </span>&#123;<br>    Page&lt;Employee&gt; page = <span class="hljs-keyword">new</span> Page&lt;&gt;(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br><br>    List&lt;Employee &gt; emps = employeeMapper.selectPage(page, <span class="hljs-keyword">null</span>);<br>    System.out.println(emps);<br><br>    System.out.println(<span class="hljs-string">&quot;===============获取分页相关的一些信息======================&quot;</span>);<br><br>    System.out.println(<span class="hljs-string">&quot;总条数:&quot;</span> +page.getTotal());<br>    System.out.println(<span class="hljs-string">&quot;当前页码: &quot;</span>+  page.getCurrent());<br>    System.out.println(<span class="hljs-string">&quot;总页码:&quot;</span> + page.getPages());<br>    System.out.println(<span class="hljs-string">&quot;每页显示的条数:&quot;</span> + page.getSize());<br>    System.out.println(<span class="hljs-string">&quot;是否有上一页: &quot;</span> + page.hasPrevious());<br>    System.out.println(<span class="hljs-string">&quot;是否有下一页: &quot;</span> + page.hasNext());<br><br>    <span class="hljs-comment">//将查询的结果封装到page对象中</span><br>    page.setRecords(emps);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-执行分析插件"><a href="#3-执行分析插件" class="headerlink" title="3.执行分析插件"></a>3.执行分析插件</h2><ul><li>com.baomidou.mybatisplus.plugins.SqlExplainInterceptor</li><li>SQL 执行分析拦截器，只支持 MySQL5.6.3 以上版本</li><li>该插件的作用是分析 DELETE UPDATE 语句,防止小白或者恶意进行 DELETE UPDATE 全表操作</li><li>只建议在开发环境中使用，不建议在生产环境使用</li><li>在插件的底层 通过 SQL 语句分析命令:Explain 分析当前的 SQL 语句，根据结果集中的 Extra 列来断定当前是否全表操作。</li></ul><p>插件注册（appplicationContext.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 插件注册 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;plugins&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 注册执行分析插件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.plugins.SqlExplainInterceptor&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;stopProceed&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试SQL执行分析插件</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSQLExplain</span><span class="hljs-params">()</span> </span>&#123;<br>    employeeMapper.delete(<span class="hljs-keyword">null</span>);  <span class="hljs-comment">// 全表删除</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-性能分析插件"><a href="#4-性能分析插件" class="headerlink" title="4.性能分析插件"></a>4.性能分析插件</h2><ul><li>com.baomidou.mybatisplus.plugins.PerformanceInterceptor</li><li>性能分析拦截器，用于输出每条 SQL 语句及其执行时间</li><li>SQL 性能执行分析,开发环境使用<em>，</em>超过指定时间，停止运行。有助于发现问题</li></ul><p>插件注册（appplicationContext.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 插件注册 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;plugins&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 注册性能分析插件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.plugins.PerformanceInterceptor&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;format&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- &lt;property name=&quot;maxTime&quot; value=&quot;5&quot;&gt;&lt;/property&gt; --&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试 性能分析插件</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testPerformance</span><span class="hljs-params">()</span> </span>&#123;<br>    Employee employee = <span class="hljs-keyword">new</span> Employee();<br>    employee.setLastName(<span class="hljs-string">&quot;玛利亚老师&quot;</span>);<br>    employee.setEmail(<span class="hljs-string">&quot;mly@sina.com&quot;</span>);<br>    employee.setGender(<span class="hljs-string">&quot;0&quot;</span>);<br>    employee.setAge(<span class="hljs-number">22</span>);<br><br>    employeeMapper.insert(employee);<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5-注册乐观锁插件"><a href="#5-注册乐观锁插件" class="headerlink" title="5.注册乐观锁插件"></a>5.注册乐观锁插件</h2><ul><li><p>com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor</p></li><li><p>如果想实现如下需求: 当要更新一条记录的时候，希望这条记录没有被别人更新</p></li><li><p>乐观锁的实现原理:</p><ul><li><p>取出记录时，获取当前 version 2 </p></li><li><p>更新时，带上这个 version 2 </p></li><li><p>执行更新时， set version = yourVersion+1 where version = yourVersion</p></li><li><p>如果 version 不对，就更新失败</p></li></ul></li><li><p>@Version 用于注解实体字段，必须要有。</p></li></ul><p>插件注册（appplicationContext.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 插件注册 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;plugins&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 注册乐观锁插件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试 乐观锁插件</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testOptimisticLocker</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">//更新操作</span><br>    Employee employee = <span class="hljs-keyword">new</span> Employee();<br>    employee.setId(<span class="hljs-number">15</span>);<br>    employee.setLastName(<span class="hljs-string">&quot;TomAA&quot;</span>);<br>    employee.setEmail(<span class="hljs-string">&quot;tomAA@sina.com&quot;</span>);<br>    employee.setGender(<span class="hljs-string">&quot;1&quot;</span>);<br>    employee.setAge(<span class="hljs-number">22</span>);<br>    employee.setVersion(<span class="hljs-number">3</span>);<br><br>    employeeMapper.updateById(employee);<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="八、自定义全局操作"><a href="#八、自定义全局操作" class="headerlink" title="八、自定义全局操作"></a>八、自定义全局操作</h1><p>根据 MybatisPlus 的 AutoSqlInjector 可以自定义各种你想要的 sql ,注入到全局中，相当于自定义 Mybatisplus 自动注入的方法。之前需要在 xml 中进行配置的 SQL 语句，现在通过扩展 AutoSqlInjector 在加载 mybatis 环境时就注入。</p><h2 id="1-设置步骤"><a href="#1-设置步骤" class="headerlink" title="1.设置步骤"></a>1.设置步骤</h2><ol><li><p>在 Mapper 接口中定义相关的 CRUD 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">int</span>  <span class="hljs-title">deleteAll</span><span class="hljs-params">()</span></span>;<br></code></pre></td></tr></table></figure></li><li><p>扩展 AutoSqlInjector inject 方法，实现 Mapper 接口中方法要注入的 SQL</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.mp.injector;<br><br><span class="hljs-keyword">import</span> org.apache.ibatis.builder.MapperBuilderAssistant;<br><span class="hljs-keyword">import</span> org.apache.ibatis.mapping.SqlSource;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.Configuration;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.entity.TableInfo;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.mapper.AutoSqlInjector;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 自定义全局操作</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MySqlInjector</span>  <span class="hljs-keyword">extends</span> <span class="hljs-title">AutoSqlInjector</span></span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 扩展inject 方法，完成自定义全局操作</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">inject</span><span class="hljs-params">(Configuration configuration, MapperBuilderAssistant builderAssistant, Class&lt;?&gt; mapperClass,</span></span><br><span class="hljs-params"><span class="hljs-function">Class&lt;?&gt; modelClass, TableInfo table)</span> </span>&#123;<br><span class="hljs-comment">//将EmployeeMapper中定义的deleteAll， 处理成对应的MappedStatement对象，加入到configuration对象中。</span><br><br><span class="hljs-comment">//注入的SQL语句</span><br>String sql = <span class="hljs-string">&quot;delete from &quot;</span> +table.getTableName();<br><span class="hljs-comment">//注入的方法名   一定要与EmployeeMapper接口中的方法名一致</span><br>String method = <span class="hljs-string">&quot;deleteAll&quot;</span> ;<br><br><span class="hljs-comment">//构造SqlSource对象</span><br>SqlSource sqlSource = languageDriver.createSqlSource(configuration, sql, modelClass);<br><br><span class="hljs-comment">//构造一个删除的MappedStatement</span><br><span class="hljs-keyword">this</span>.addDeleteMappedStatement(mapperClass, method, sqlSource);<br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p>在 MP 全局策略中，配置 自定义注入器</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 定义自定义注入器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;mySqlInjector&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.atguigu.mp.injector.MySqlInjector&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 定义MybatisPlus的全局策略配置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span> =<span class="hljs-string">&quot;globalConfiguration&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;</span>&gt;</span><br>    ...<br><br>    <span class="hljs-comment">&lt;!--注入自定义全局操作 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sqlInjector&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;mySqlInjector&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="2-测试代码"><a href="#2-测试代码" class="headerlink" title="2.测试代码"></a>2.测试代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试自定义全局操作</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span>  <span class="hljs-title">testMySqlInjector</span><span class="hljs-params">()</span> </span>&#123;<br>    Integer result = employeeMapper.deleteAll();<br>    System.out.println(<span class="hljs-string">&quot;result: &quot;</span> +result );<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-自定义注入器的应用之-逻辑删除"><a href="#3-自定义注入器的应用之-逻辑删除" class="headerlink" title="3.自定义注入器的应用之 逻辑删除"></a>3.自定义注入器的应用之 逻辑删除</h2><p>假删除、逻辑删除: 并不会真正的从数据库中将数据删除掉，而是将当前被删除的这条数据中的一个逻辑删除字段置为删除状态.</p><p>tbl_user logic_flag = 1 → -1 </p><ol><li>com.baomidou.mybatisplus.mapper.LogicSqlInjector</li><li>logicDeleteValue 逻辑删除全局值</li><li>logicNotDeleteValue 逻辑未删除全局值</li><li>在 POJO 的逻辑删除字段 添加 @TableLogic 注解</li><li>会在 mp 自带查询和更新方法的 sql 后面，追加『逻辑删除字段』=『LogicNotDeleteValue默认值』 删除方法: deleteById()和其他 delete 方法, 底层 SQL 调用的是 update tbl_xxx set 『逻辑删除字段』『logicDeleteValue 默认值』</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 定义MybatisPlus的全局策略配置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span> =<span class="hljs-string">&quot;globalConfiguration&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;</span>&gt;</span><br>    ...<br><br>    <span class="hljs-comment">&lt;!-- 注入逻辑删除 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sqlInjector&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;logicSqlInjector&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!-- 注入逻辑删除全局值 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;logicDeleteValue&quot;</span> <span class="hljs-attr">value</span> = <span class="hljs-string">&quot;-1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;logicNotDeleteValue&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><br><span class="hljs-comment">&lt;!-- 逻辑删除 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;logicSqlInjector&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.mapper.LogicSqlInjector&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>实体类注解方式设置逻辑删除属性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@TableLogic</span>   <span class="hljs-comment">// 逻辑删除属性</span><br><span class="hljs-keyword">private</span> Integer logicFlag ;<br></code></pre></td></tr></table></figure><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试逻辑删除</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testLogicDelete</span><span class="hljs-params">()</span> </span>&#123;<br><br>    Integer result = userMapper.deleteById(<span class="hljs-number">1</span>);<br>    System.out.println(<span class="hljs-string">&quot;result:&quot;</span> +result );<br><br>    User user = userMapper.selectById(<span class="hljs-number">1</span>);<br>    System.out.println(user);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="九、公共字段自动填充"><a href="#九、公共字段自动填充" class="headerlink" title="九、公共字段自动填充"></a>九、公共字段自动填充</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>元数据处理器接口  com.baomidou.mybatisplus.mapper.MetaObjectHandler</p><p>insertFill(MetaObject metaObject) </p><p>updateFill(MetaObject metaObject)</p><p>metaobject: 元对象： 是 Mybatis 提供的一个用于更加方便，更加优雅的访问对象的属性,给对象的属性设置值 的一个对象. 还会用于包装对象. 支持对 Object 、Map、Collection等对象进行包装。</p><p>本质上 metaObject 获取对象的属性值或者是给对象的属性设置值，最终是要通过 Reflector 获取到属性的对应方法的 Invoker, 最终 invoke。</p><h2 id="2-开发步骤"><a href="#2-开发步骤" class="headerlink" title="2.开发步骤"></a>2.开发步骤</h2><ol><li>注解填充字段 @TableFile(fill = FieldFill.INSERT) 查看 FieldFill</li><li>自定义公共字段填充处理器</li><li>MP 全局注入 自定义公共字段填充处理器</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 自定义公共字段填充处理器</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyMetaObjectHandler</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">MetaObjectHandler</span> </span>&#123;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 插入操作 自动填充</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">insertFill</span><span class="hljs-params">(MetaObject metaObject)</span> </span>&#123;<br><span class="hljs-comment">//获取到需要被填充的字段的值</span><br>Object fieldValue = getFieldValByName(<span class="hljs-string">&quot;name&quot;</span>, metaObject);<br><span class="hljs-keyword">if</span>(fieldValue == <span class="hljs-keyword">null</span>) &#123;<br>System.out.println(<span class="hljs-string">&quot;*******插入操作 满足填充条件*********&quot;</span>);<br>setFieldValByName(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;weiyunhui&quot;</span>, metaObject);<br>&#125;<br><br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 修改操作 自动填充</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">updateFill</span><span class="hljs-params">(MetaObject metaObject)</span> </span>&#123;<br>Object fieldValue = getFieldValByName(<span class="hljs-string">&quot;name&quot;</span>, metaObject);<br><span class="hljs-keyword">if</span>(fieldValue == <span class="hljs-keyword">null</span>) &#123;<br>System.out.println(<span class="hljs-string">&quot;*******修改操作 满足填充条件*********&quot;</span>);<br>setFieldValByName(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;weiyh&quot;</span>, metaObject);<br>&#125;<br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 公共字段填充处理器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myMetaObjectHandler&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.atguigu.mp.metaObjectHandler.MyMetaObjectHandler&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 定义MybatisPlus的全局策略配置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span> =<span class="hljs-string">&quot;globalConfiguration&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;</span>&gt;</span><br>    ...<br>    <span class="hljs-comment">&lt;!-- 注入公共字段填充处理器 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;metaObjectHandler&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;myMetaObjectHandler&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试公共字段填充</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testMetaObjectHandler</span><span class="hljs-params">()</span> </span>&#123;<br>    User user = <span class="hljs-keyword">new</span> User();<br>    <span class="hljs-comment">//user.setName(&quot;Tom&quot;);</span><br><br>    user.setId(<span class="hljs-number">5</span>);<br>    user.setLogicFlag(<span class="hljs-number">1</span>);<br><br>    userMapper.updateById(user);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="十、Oracle-主键Sequence"><a href="#十、Oracle-主键Sequence" class="headerlink" title="十、Oracle 主键Sequence"></a>十、Oracle 主键Sequence</h1><ul><li><p>MySQL: 支持主键自增。 IdType.Auto</p></li><li><p>Oracle: 序列(Sequence)</p><ul><li><p>实体类配置主键 Sequence @KeySequence(value=”序列名”，clazz=xxx.class 主键属性类型)</p></li><li><p>全局 MP 主键生成策略为 IdType.INPUT </p></li><li><p>全局 MP 中配置 Oracle 主键 Sequence：</p><p>com.baomidou.mybatisplus.incrementer.OracleKeyGenerator</p></li><li><p>可以将@keySequence 定义在父类中，可实现多个子类对应的多个表公用一个 Sequence</p></li></ul></li></ul><h2 id="1-oracle环境搭建"><a href="#1-oracle环境搭建" class="headerlink" title="1.oracle环境搭建"></a>1.oracle环境搭建</h2><ul><li><p>添加pom依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- Oracle驱动: 因为Oracle授权的问题，不能从Maven的仓库中下载到Oracle驱动 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.oracle<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>ojdbc14<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>10.2.0.4.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>db.properties添加oracle数据库信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml">orcl.driver=oracle.jdbc.OracleDriver<br>orcl.url=jdbc:oracle:thin:@localhost:1521:xe<br>orcl.username=system<br>orcl.password=1234<br></code></pre></td></tr></table></figure></li><li><p>applicationContext.xml将数据源设为oracle</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- Oracle --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClass&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;orcl.driver&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;jdbcUrl&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;orcl.url&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;orcl.username&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;orcl.password&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>新建表和序列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 创建一个测试表</span><br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> tbl_user;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> tbl_user(<br>id number(<span class="hljs-number">11</span>) <span class="hljs-keyword">primary</span> key,<br>    name varchar2(<span class="hljs-number">50</span>),<br>    logic_flag number(<span class="hljs-number">11</span>)<br>);<br><br><span class="hljs-comment">-- 序列</span><br><span class="hljs-keyword">create</span> sequence seq_user <span class="hljs-keyword">start</span> <span class="hljs-keyword">with</span> <span class="hljs-number">100</span> increment <span class="hljs-keyword">by</span> <span class="hljs-number">2</span>;<br><br><span class="hljs-comment">-- 序列的常用操作</span><br><span class="hljs-comment">-- 查询序列的下一个值</span><br><span class="hljs-keyword">select</span> seq_user.nextval <span class="hljs-keyword">from</span> dual;<br><span class="hljs-comment">-- 查询序列的当前值</span><br><span class="hljs-keyword">select</span> seq_user.currval <span class="hljs-keyword">from</span> dual;<br></code></pre></td></tr></table></figure></li></ul><h2 id="2-开发步骤-1"><a href="#2-开发步骤-1" class="headerlink" title="2.开发步骤"></a>2.开发步骤</h2><p>2.1 实体类配置主键 Sequence @KeySequence(value=”序列名”，clazz=xxx.class 主键属性类型)</p><p>2.2 全局 MP 主键生成策略为 IdType.INPUT </p><p>2.3 全局 MP 中配置 Oracle 主键 Sequence：</p><p>com.baomidou.mybatisplus.incrementer.OracleKeyGenerator</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 配置Oracle主键Sequence --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;oracleKeyGenerator&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.incrementer.OracleKeyGenerator&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 定义MybatisPlus的全局策略配置--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span> =<span class="hljs-string">&quot;globalConfiguration&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;</span>&gt;</span><br>    ...<br><br>    <span class="hljs-comment">&lt;!-- 注入Oracle主键Sequence --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;keyGenerator&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;oracleKeyGenerator&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2.4 测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试Oracle 主键 Sequence</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testOracle</span><span class="hljs-params">()</span> </span>&#123;<br>    User user = <span class="hljs-keyword">new</span> User();<br>    user.setLogicFlag(<span class="hljs-number">1</span>);<br>    user.setName(<span class="hljs-string">&quot;OracleSEQ&quot;</span>);<br>    userMapper.insert(user);<br>&#125;<br></code></pre></td></tr></table></figure><p>==将@keySequence 定义在父类中，可实现多个子类对应的多个表公用一个 Sequence==</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@KeySequence(value=&quot;seq_user&quot;,clazz=Integer.class)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Parent</span> </span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>子类继承：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//@KeySequence(value=&quot;seq_user&quot;,clazz=Integer.class)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Parent</span> </span>&#123;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="十一、Idea快速开发插件"><a href="#十一、Idea快速开发插件" class="headerlink" title="十一、Idea快速开发插件"></a>十一、Idea快速开发插件</h1><p>MybatisX 辅助 idea 快速开发插件，为效率而生.</p><p>可以实现 java 与 xml 跳转，根据 Mapper 接口中的方法自动生成 xml 结构.</p><p>官方安装： File -&gt; Settings -&gt; Plugins -&gt; Browse Repositories.. 输入 mybatisx 安装下载</p><p>Jar 安装： File -&gt; Settings -&gt; Plugins -&gt; Install plugin from disk.. 选中 mybatisx..jar 安装</p>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>mp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringMVC笔记</title>
    <link href="/2021/11/10/SpringMVC%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/11/10/SpringMVC%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一、SpringMVC简介"><a href="#一、SpringMVC简介" class="headerlink" title="一、SpringMVC简介"></a>一、SpringMVC简介</h1><h3 id="1、什么是MVC"><a href="#1、什么是MVC" class="headerlink" title="1、什么是MVC"></a>1、什么是MVC</h3><p>MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分</p><p>M：Model，模型层，指工程中的JavaBean，作用是处理数据</p><p>JavaBean分为两类：</p><ul><li>一类称为实体类Bean：专门存储业务数据的，如 Student、User 等</li><li>一类称为业务处理 Bean：指 Service 或 Dao 对象，专门用于处理业务逻辑和数据访问。</li></ul><p>V：View，视图层，指工程中的html或jsp等页面，作用是与用户进行交互，展示数据</p><p>C：Controller，控制层，指工程中的servlet，作用是接收请求和响应浏览器</p><p>MVC的工作流程：<br>用户通过视图层发送请求到服务器，在服务器中请求被Controller接收，Controller调用相应的Model层处理请求，处理完毕将结果返回到Controller，Controller再根据请求处理的结果找到相应的View视图，渲染数据后最终响应给浏览器</p><h3 id="2、什么是SpringMVC"><a href="#2、什么是SpringMVC" class="headerlink" title="2、什么是SpringMVC"></a>2、什么是SpringMVC</h3><p>SpringMVC是Spring的一个后续产品，是Spring的一个子项目</p><p>SpringMVC 是 Spring 为表述层开发提供的一整套完备的解决方案。在表述层框架历经 Strust、WebWork、Strust2 等诸多产品的历代更迭之后，目前业界普遍选择了 SpringMVC 作为 Java EE 项目表述层开发的<strong>首选方案</strong>。</p><blockquote><p>注：三层架构分为表述层（或表示层）、业务逻辑层、数据访问层，表述层表示前台页面和后台servlet</p></blockquote><h3 id="3、SpringMVC的特点"><a href="#3、SpringMVC的特点" class="headerlink" title="3、SpringMVC的特点"></a>3、SpringMVC的特点</h3><ul><li><strong>Spring 家族原生产品</strong>，与 IOC 容器等基础设施无缝对接</li><li><strong>基于原生的Servlet</strong>，通过了功能强大的<strong>前端控制器DispatcherServlet</strong>，对请求和响应进行统一处理</li><li>表述层各细分领域需要解决的问题<strong>全方位覆盖</strong>，提供<strong>全面解决方案</strong></li><li><strong>代码清新简洁</strong>，大幅度提升开发效率</li><li>内部组件化程度高，可插拔式组件<strong>即插即用</strong>，想要什么功能配置相应组件即可</li><li><strong>性能卓著</strong>，尤其适合现代大型、超大型互联网项目要求</li></ul><h1 id="二、HelloWorld"><a href="#二、HelloWorld" class="headerlink" title="二、HelloWorld"></a>二、HelloWorld</h1><h3 id="1、开发环境"><a href="#1、开发环境" class="headerlink" title="1、开发环境"></a>1、开发环境</h3><p>IDE：idea 2019.2</p><p>构建工具：maven3.5.4</p><p>服务器：tomcat7</p><p>Spring版本：5.3.1</p><h3 id="2、创建maven工程"><a href="#2、创建maven工程" class="headerlink" title="2、创建maven工程"></a>2、创建maven工程</h3><h5 id="a-gt-添加web模块"><a href="#a-gt-添加web模块" class="headerlink" title="a&gt;添加web模块"></a>a&gt;添加web模块</h5><h5 id="b-gt-打包方式：war"><a href="#b-gt-打包方式：war" class="headerlink" title="b&gt;打包方式：war"></a>b&gt;打包方式：war</h5><h5 id="c-gt-引入依赖"><a href="#c-gt-引入依赖" class="headerlink" title="c&gt;引入依赖"></a>c&gt;引入依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- SpringMVC --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-webmvc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 日志 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>ch.qos.logback<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>logback-classic<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- ServletAPI --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javax.servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- Spring5和Thymeleaf整合包 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.thymeleaf<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.12.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注：由于 Maven 的传递性，我们不必将所有需要的包全部配置依赖，而是配置最顶端的依赖，其他靠传递性导入。</p><p><img src="img%5Cimg001.png" alt="images"></p><h3 id="3、配置web-xml"><a href="#3、配置web-xml" class="headerlink" title="3、配置web.xml"></a>3、配置web.xml</h3><p>注册SpringMVC的前端控制器DispatcherServlet</p><h5 id="a-gt-默认配置方式"><a href="#a-gt-默认配置方式" class="headerlink" title="a&gt;默认配置方式"></a>a&gt;默认配置方式</h5><p>此配置作用下，SpringMVC的配置文件默认位于WEB-INF下，默认名称为&lt;servlet-name&gt;-servlet.xml，例如，以下配置所对应SpringMVC的配置文件位于WEB-INF下，文件名为springMVC-servlet.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">        设置springMVC的核心控制器所能处理的请求的请求路径</span><br><span class="hljs-comment">        /所匹配的请求可以是/login或.html或.js或.css方式的请求路径</span><br><span class="hljs-comment">        但是/不能匹配.jsp请求路径的请求</span><br><span class="hljs-comment">    --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="b-gt-扩展配置方式"><a href="#b-gt-扩展配置方式" class="headerlink" title="b&gt;扩展配置方式"></a>b&gt;扩展配置方式</h5><p>可通过init-param标签设置SpringMVC配置文件的位置和名称，通过load-on-startup标签设置SpringMVC前端控制器DispatcherServlet的初始化时间</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 通过初始化参数指定SpringMVC配置文件的位置和名称 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- contextConfigLocation为固定值 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 使用classpath:表示从类路径查找配置文件，例如maven工程中的src/main/resources --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:springMVC.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment"> 作为框架的核心组件，在启动过程中有大量的初始化操作要做</span><br><span class="hljs-comment">而这些操作放在第一次请求时才执行会严重影响访问速度</span><br><span class="hljs-comment">因此需要通过此标签将启动控制DispatcherServlet的初始化时间提前到服务器启动时</span><br><span class="hljs-comment">--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">load-on-startup</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">load-on-startup</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">        设置springMVC的核心控制器所能处理的请求的请求路径</span><br><span class="hljs-comment">        /所匹配的请求可以是/login或.html或.js或.css方式的请求路径</span><br><span class="hljs-comment">        但是/不能匹配.jsp请求路径的请求</span><br><span class="hljs-comment">    --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>注：</p><p>&lt;url-pattern&gt;标签中使用/和/*的区别：</p><p>/所匹配的请求可以是/login或.html或.js或.css方式的请求路径，但是/不能匹配.jsp请求路径的请求</p><p>因此就可以避免在访问jsp页面时，该请求被DispatcherServlet处理，从而找不到相应的页面</p><p>/*则能够匹配所有请求，例如在使用过滤器时，若需要对所有请求进行过滤，就需要使用/*的写法</p></blockquote><h3 id="4、创建请求控制器"><a href="#4、创建请求控制器" class="headerlink" title="4、创建请求控制器"></a>4、创建请求控制器</h3><p>由于前端控制器对浏览器发送的请求进行了统一的处理，但是具体的请求有不同的处理过程，因此需要创建处理具体请求的类，即请求控制器</p><p>请求控制器中每一个处理请求的方法成为控制器方法</p><p>因为SpringMVC的控制器由一个POJO（普通的Java类）担任，因此需要通过@Controller注解将其标识为一个控制层组件，交给Spring的IoC容器管理，此时SpringMVC才能够识别控制器的存在</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloController</span> </span>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5、创建springMVC的配置文件"><a href="#5、创建springMVC的配置文件" class="headerlink" title="5、创建springMVC的配置文件"></a>5、创建springMVC的配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 自动扫描包 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;com.atguigu.mvc.controller&quot;</span>/&gt;</span><br><br><span class="hljs-comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;viewResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;order&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateEngine&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateResolver&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span><br>    <br>                    <span class="hljs-comment">&lt;!-- 视图前缀 --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;prefix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span><br>    <br>                    <span class="hljs-comment">&lt;!-- 视图后缀 --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;suffix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;.html&quot;</span>/&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateMode&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;HTML5&quot;</span>/&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">   处理静态资源，例如html、js、css、jpg</span><br><span class="hljs-comment">  若只设置该标签，则只能访问静态资源，其他请求则无法访问</span><br><span class="hljs-comment">  此时必须设置&lt;mvc:annotation-driven/&gt;解决问题</span><br><span class="hljs-comment"> --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mvc:default-servlet-handler</span>/&gt;</span><br><br><span class="hljs-comment">&lt;!-- 开启mvc注解驱动 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mvc:annotation-driven</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:message-converters</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 处理响应中文内容乱码 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultCharset&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;supportedMediaTypes&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>text/html<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>application/json<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mvc:message-converters</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mvc:annotation-driven</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="6、测试HelloWorld"><a href="#6、测试HelloWorld" class="headerlink" title="6、测试HelloWorld"></a>6、测试HelloWorld</h3><h5 id="a-gt-实现对首页的访问"><a href="#a-gt-实现对首页的访问" class="headerlink" title="a&gt;实现对首页的访问"></a>a&gt;实现对首页的访问</h5><p>在请求控制器中创建处理请求的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// @RequestMapping注解：处理请求和控制器方法之间的映射关系</span><br><span class="hljs-comment">// @RequestMapping注解的value属性可以通过请求地址匹配请求，/表示的当前工程的上下文路径</span><br><span class="hljs-comment">// localhost:8080/springMVC/</span><br><span class="hljs-meta">@RequestMapping(&quot;/&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">index</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">//设置视图名称</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;index&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="b-gt-通过超链接跳转到指定页面"><a href="#b-gt-通过超链接跳转到指定页面" class="headerlink" title="b&gt;通过超链接跳转到指定页面"></a>b&gt;通过超链接跳转到指定页面</h5><p>在主页index.html中设置超链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>首页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>首页<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/hello&#125;&quot;</span>&gt;</span>HelloWorld<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在请求控制器中创建处理请求的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/hello&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">HelloWorld</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;target&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7、总结"><a href="#7、总结" class="headerlink" title="7、总结"></a>7、总结</h3><p>浏览器发送请求，若请求地址符合前端控制器的url-pattern，该请求就会被前端控制器DispatcherServlet处理。前端控制器会读取SpringMVC的核心配置文件，通过扫描组件找到控制器，将请求地址和控制器中@RequestMapping注解的value属性值进行匹配，若匹配成功，该注解所标识的控制器方法就是处理请求的方法。处理请求的方法需要返回一个字符串类型的视图名称，该视图名称会被视图解析器解析，加上前缀和后缀组成视图的路径，通过Thymeleaf对视图进行渲染，最终转发到视图所对应页面</p><h1 id="三、-RequestMapping注解"><a href="#三、-RequestMapping注解" class="headerlink" title="三、@RequestMapping注解"></a>三、@RequestMapping注解</h1><h3 id="1、-RequestMapping注解的功能"><a href="#1、-RequestMapping注解的功能" class="headerlink" title="1、@RequestMapping注解的功能"></a>1、@RequestMapping注解的功能</h3><p>从注解名称上我们可以看到，@RequestMapping注解的作用就是将请求和处理请求的控制器方法关联起来，建立映射关系。</p><p>SpringMVC 接收到指定的请求，就会来找到在映射关系中对应的控制器方法来处理这个请求。</p><h3 id="2、-RequestMapping注解的位置"><a href="#2、-RequestMapping注解的位置" class="headerlink" title="2、@RequestMapping注解的位置"></a>2、@RequestMapping注解的位置</h3><p>@RequestMapping标识一个类：设置映射请求的请求路径的初始信息</p><p>@RequestMapping标识一个方法：设置映射请求请求路径的具体信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span><br><span class="hljs-meta">@RequestMapping(&quot;/test&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RequestMappingController</span> </span>&#123;<br><br><span class="hljs-comment">//此时请求映射所映射的请求的请求路径为：/test/testRequestMapping</span><br>    <span class="hljs-meta">@RequestMapping(&quot;/testRequestMapping&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testRequestMapping</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3、-RequestMapping注解的value属性"><a href="#3、-RequestMapping注解的value属性" class="headerlink" title="3、@RequestMapping注解的value属性"></a>3、@RequestMapping注解的value属性</h3><p>@RequestMapping注解的value属性通过请求的请求地址匹配请求映射</p><p>@RequestMapping注解的value属性是一个字符串类型的数组，表示该请求映射能够匹配多个请求地址所对应的请求</p><p>@RequestMapping注解的value属性必须设置，至少通过请求地址匹配请求映射</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/testRequestMapping&#125;&quot;</span>&gt;</span>测试@RequestMapping的value属性--&gt;/testRequestMapping<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/test&#125;&quot;</span>&gt;</span>测试@RequestMapping的value属性--&gt;/test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(</span><br><span class="hljs-meta">        value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;</span><br><span class="hljs-meta">)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testRequestMapping</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、-RequestMapping注解的method属性"><a href="#4、-RequestMapping注解的method属性" class="headerlink" title="4、@RequestMapping注解的method属性"></a>4、@RequestMapping注解的method属性</h3><p>@RequestMapping注解的method属性通过请求的请求方式（get或post）匹配请求映射</p><p>@RequestMapping注解的method属性是一个RequestMethod类型的数组，表示该请求映射能够匹配多种请求方式的请求</p><p>若当前请求的请求地址满足请求映射的value属性，但是请求方式不满足method属性，则浏览器报错405：Request method ‘POST’ not supported</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/test&#125;&quot;</span>&gt;</span>测试@RequestMapping的value属性--&gt;/test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">th:action</span>=<span class="hljs-string">&quot;@&#123;/test&#125;&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(</span><br><span class="hljs-meta">        value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;,</span><br><span class="hljs-meta">        method = &#123;RequestMethod.GET, RequestMethod.POST&#125;</span><br><span class="hljs-meta">)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testRequestMapping</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>注：</p><p>1、对于处理指定请求方式的控制器方法，SpringMVC中提供了@RequestMapping的派生注解</p><p>处理get请求的映射–&gt;@GetMapping</p><p>处理post请求的映射–&gt;@PostMapping</p><p>处理put请求的映射–&gt;@PutMapping</p><p>处理delete请求的映射–&gt;@DeleteMapping</p><p>2、常用的请求方式有get，post，put，delete</p><p>但是目前浏览器只支持get和post，若在form表单提交时，为method设置了其他请求方式的字符串（put或delete），则按照默认的请求方式get处理</p><p>若要发送put和delete请求，则需要通过spring提供的过滤器HiddenHttpMethodFilter，在RESTful部分会讲到</p></blockquote><h3 id="5、-RequestMapping注解的params属性（了解）"><a href="#5、-RequestMapping注解的params属性（了解）" class="headerlink" title="5、@RequestMapping注解的params属性（了解）"></a>5、@RequestMapping注解的params属性（了解）</h3><p>@RequestMapping注解的params属性通过请求的请求参数匹配请求映射</p><p>@RequestMapping注解的params属性是一个字符串类型的数组，可以通过四种表达式设置请求参数和请求映射的匹配关系</p><p>“param”：要求请求映射所匹配的请求必须携带param请求参数</p><p>“!param”：要求请求映射所匹配的请求必须不能携带param请求参数</p><p>“param=value”：要求请求映射所匹配的请求必须携带param请求参数且param=value</p><p>“param!=value”：要求请求映射所匹配的请求必须携带param请求参数但是param!=value</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/test(username=&#x27;admin&#x27;,password=123456)&quot;</span>&gt;</span>测试@RequestMapping的params属性--&gt;/test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(</span><br><span class="hljs-meta">        value = &#123;&quot;/testRequestMapping&quot;, &quot;/test&quot;&#125;</span><br><span class="hljs-meta">        ,method = &#123;RequestMethod.GET, RequestMethod.POST&#125;</span><br><span class="hljs-meta">        ,params = &#123;&quot;username&quot;,&quot;password!=123456&quot;&#125;</span><br><span class="hljs-meta">)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testRequestMapping</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>注：</p><p>若当前请求满足@RequestMapping注解的value和method属性，但是不满足params属性，此时页面回报错400：Parameter conditions “username, password!=123456” not met for actual request parameters: username={admin}, password={123456}</p></blockquote><h3 id="6、-RequestMapping注解的headers属性（了解）"><a href="#6、-RequestMapping注解的headers属性（了解）" class="headerlink" title="6、@RequestMapping注解的headers属性（了解）"></a>6、@RequestMapping注解的headers属性（了解）</h3><p>@RequestMapping注解的headers属性通过请求的请求头信息匹配请求映射</p><p>@RequestMapping注解的headers属性是一个字符串类型的数组，可以通过四种表达式设置请求头信息和请求映射的匹配关系</p><p>“header”：要求请求映射所匹配的请求必须携带header请求头信息</p><p>“!header”：要求请求映射所匹配的请求必须不能携带header请求头信息</p><p>“header=value”：要求请求映射所匹配的请求必须携带header请求头信息且header=value</p><p>“header!=value”：要求请求映射所匹配的请求必须携带header请求头信息且header!=value</p><p>若当前请求满足@RequestMapping注解的value和method属性，但是不满足headers属性，此时页面显示404错误，即资源未找到</p><h3 id="7、SpringMVC支持ant风格的路径"><a href="#7、SpringMVC支持ant风格的路径" class="headerlink" title="7、SpringMVC支持ant风格的路径"></a>7、SpringMVC支持ant风格的路径</h3><p>？：表示任意的单个字符</p><p>*：表示任意的0个或多个字符</p><p>**：表示任意的一层或多层目录</p><p>注意：在使用**时，只能使用/**/xxx的方式</p><h3 id="8、SpringMVC支持路径中的占位符（重点）"><a href="#8、SpringMVC支持路径中的占位符（重点）" class="headerlink" title="8、SpringMVC支持路径中的占位符（重点）"></a>8、SpringMVC支持路径中的占位符（重点）</h3><p>原始方式：/deleteUser?id=1</p><p>rest方式：/deleteUser/1</p><p>SpringMVC路径中的占位符常用于RESTful风格中，当请求路径中将某些数据通过路径的方式传输到服务器中，就可以在相应的@RequestMapping注解的value属性中通过占位符{xxx}表示传输的数据，在通过@PathVariable注解，将占位符所表示的数据赋值给控制器方法的形参</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/testRest/1/admin&#125;&quot;</span>&gt;</span>测试路径中的占位符--&gt;/testRest<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testRest/&#123;id&#125;/&#123;username&#125;&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testRest</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> String id, <span class="hljs-meta">@PathVariable(&quot;username&quot;)</span> String username)</span></span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;id:&quot;</span>+id+<span class="hljs-string">&quot;,username:&quot;</span>+username);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br><span class="hljs-comment">//最终输出的内容为--&gt;id:1,username:admin</span><br></code></pre></td></tr></table></figure><h1 id="四、SpringMVC获取请求参数"><a href="#四、SpringMVC获取请求参数" class="headerlink" title="四、SpringMVC获取请求参数"></a>四、SpringMVC获取请求参数</h1><h3 id="1、通过ServletAPI获取"><a href="#1、通过ServletAPI获取" class="headerlink" title="1、通过ServletAPI获取"></a>1、通过ServletAPI获取</h3><p>将HttpServletRequest作为控制器方法的形参，此时HttpServletRequest类型的参数表示封装了当前请求的请求报文的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testParam&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testParam</span><span class="hljs-params">(HttpServletRequest request)</span></span>&#123;<br>    String username = request.getParameter(<span class="hljs-string">&quot;username&quot;</span>);<br>    String password = request.getParameter(<span class="hljs-string">&quot;password&quot;</span>);<br>    System.out.println(<span class="hljs-string">&quot;username:&quot;</span>+username+<span class="hljs-string">&quot;,password:&quot;</span>+password);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2、通过控制器方法的形参获取请求参数"><a href="#2、通过控制器方法的形参获取请求参数" class="headerlink" title="2、通过控制器方法的形参获取请求参数"></a>2、通过控制器方法的形参获取请求参数</h3><p>在控制器方法的形参位置，设置和请求参数同名的形参，当浏览器发送请求，匹配到请求映射时，在DispatcherServlet中就会将请求参数赋值给相应的形参</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/testParam(username=&#x27;admin&#x27;,password=123456)&#125;&quot;</span>&gt;</span>测试获取请求参数--&gt;/testParam<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testParam&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testParam</span><span class="hljs-params">(String username, String password)</span></span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;username:&quot;</span>+username+<span class="hljs-string">&quot;,password:&quot;</span>+password);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>注：</p><p>若请求所传输的请求参数中有多个同名的请求参数，此时可以在控制器方法的形参中设置字符串数组或者字符串类型的形参接收此请求参数</p><p>若使用字符串数组类型的形参，此参数的数组中包含了每一个数据</p><p>若使用字符串类型的形参，此参数的值为每个数据中间使用逗号拼接的结果</p></blockquote><h3 id="3、-RequestParam"><a href="#3、-RequestParam" class="headerlink" title="3、@RequestParam"></a>3、@RequestParam</h3><p>@RequestParam是将请求参数和控制器方法的形参创建映射关系</p><p>@RequestParam注解一共有三个属性：</p><p>value：指定为形参赋值的请求参数的参数名</p><p>required：设置是否必须传输此请求参数，默认值为true</p><p>若设置为true时，则当前请求必须传输value所指定的请求参数，若没有传输该请求参数，且没有设置defaultValue属性，则页面报错400：Required String parameter ‘xxx’ is not present；若设置为false，则当前请求不是必须传输value所指定的请求参数，若没有传输，则注解所标识的形参的值为null</p><p>defaultValue：不管required属性值为true或false，当value所指定的请求参数没有传输或传输的值为””时，则使用默认值为形参赋值</p><h3 id="4、-RequestHeader"><a href="#4、-RequestHeader" class="headerlink" title="4、@RequestHeader"></a>4、@RequestHeader</h3><p>@RequestHeader是将请求头信息和控制器方法的形参创建映射关系</p><p>@RequestHeader注解一共有三个属性：value、required、defaultValue，用法同@RequestParam</p><h3 id="5、-CookieValue"><a href="#5、-CookieValue" class="headerlink" title="5、@CookieValue"></a>5、@CookieValue</h3><p>@CookieValue是将cookie数据和控制器方法的形参创建映射关系</p><p>@CookieValue注解一共有三个属性：value、required、defaultValue，用法同@RequestParam</p><h3 id="6、通过POJO获取请求参数"><a href="#6、通过POJO获取请求参数" class="headerlink" title="6、通过POJO获取请求参数"></a>6、通过POJO获取请求参数</h3><p>可以在控制器方法的形参位置设置一个实体类类型的形参，此时若浏览器传输的请求参数的参数名和实体类中的属性名一致，那么请求参数就会为此属性赋值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">th:action</span>=<span class="hljs-string">&quot;@&#123;/testpojo&#125;&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>    用户名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    密码：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    性别：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;男&quot;</span>&gt;</span>男<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;女&quot;</span>&gt;</span>女<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    年龄：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;age&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    邮箱：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testpojo&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testPOJO</span><span class="hljs-params">(User user)</span></span>&#123;<br>    System.out.println(user);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br><span class="hljs-comment">//最终结果--&gt;User&#123;id=null, username=&#x27;张三&#x27;, password=&#x27;123&#x27;, age=23, sex=&#x27;男&#x27;, email=&#x27;123@qq.com&#x27;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="7、解决获取请求参数的乱码问题"><a href="#7、解决获取请求参数的乱码问题" class="headerlink" title="7、解决获取请求参数的乱码问题"></a>7、解决获取请求参数的乱码问题</h3><p>解决获取请求参数的乱码问题，可以使用SpringMVC提供的编码过滤器CharacterEncodingFilter，但是必须在web.xml中进行注册</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--配置springMVC的编码过滤器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>encoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>forceResponseEncoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>注：</p><p>SpringMVC中处理编码的过滤器一定要配置到其他过滤器之前，否则无效</p></blockquote><h1 id="五、域对象共享数据"><a href="#五、域对象共享数据" class="headerlink" title="五、域对象共享数据"></a>五、域对象共享数据</h1><h3 id="1、使用ServletAPI向request域对象共享数据"><a href="#1、使用ServletAPI向request域对象共享数据" class="headerlink" title="1、使用ServletAPI向request域对象共享数据"></a>1、使用ServletAPI向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testServletAPI&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testServletAPI</span><span class="hljs-params">(HttpServletRequest request)</span></span>&#123;<br>    request.setAttribute(<span class="hljs-string">&quot;testScope&quot;</span>, <span class="hljs-string">&quot;hello,servletAPI&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2、使用ModelAndView向request域对象共享数据"><a href="#2、使用ModelAndView向request域对象共享数据" class="headerlink" title="2、使用ModelAndView向request域对象共享数据"></a>2、使用ModelAndView向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testModelAndView&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title">testModelAndView</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * ModelAndView有Model和View的功能</span><br><span class="hljs-comment">     * Model主要用于向请求域共享数据</span><br><span class="hljs-comment">     * View主要用于设置视图，实现页面跳转</span><br><span class="hljs-comment">     */</span><br>    ModelAndView mav = <span class="hljs-keyword">new</span> ModelAndView();<br>    <span class="hljs-comment">//向请求域共享数据</span><br>    mav.addObject(<span class="hljs-string">&quot;testScope&quot;</span>, <span class="hljs-string">&quot;hello,ModelAndView&quot;</span>);<br>    <span class="hljs-comment">//设置视图，实现页面跳转</span><br>    mav.setViewName(<span class="hljs-string">&quot;success&quot;</span>);<br>    <span class="hljs-keyword">return</span> mav;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3、使用Model向request域对象共享数据"><a href="#3、使用Model向request域对象共享数据" class="headerlink" title="3、使用Model向request域对象共享数据"></a>3、使用Model向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testModel&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testModel</span><span class="hljs-params">(Model model)</span></span>&#123;<br>    model.addAttribute(<span class="hljs-string">&quot;testScope&quot;</span>, <span class="hljs-string">&quot;hello,Model&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、使用map向request域对象共享数据"><a href="#4、使用map向request域对象共享数据" class="headerlink" title="4、使用map向request域对象共享数据"></a>4、使用map向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testMap&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testMap</span><span class="hljs-params">(Map&lt;String, Object&gt; map)</span></span>&#123;<br>    map.put(<span class="hljs-string">&quot;testScope&quot;</span>, <span class="hljs-string">&quot;hello,Map&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5、使用ModelMap向request域对象共享数据"><a href="#5、使用ModelMap向request域对象共享数据" class="headerlink" title="5、使用ModelMap向request域对象共享数据"></a>5、使用ModelMap向request域对象共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testModelMap&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testModelMap</span><span class="hljs-params">(ModelMap modelMap)</span></span>&#123;<br>    modelMap.addAttribute(<span class="hljs-string">&quot;testScope&quot;</span>, <span class="hljs-string">&quot;hello,ModelMap&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6、Model、ModelMap、Map的关系"><a href="#6、Model、ModelMap、Map的关系" class="headerlink" title="6、Model、ModelMap、Map的关系"></a>6、Model、ModelMap、Map的关系</h3><p>Model、ModelMap、Map类型的参数其实本质上都是 BindingAwareModelMap 类型的</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs scala">public interface <span class="hljs-type">Model</span>&#123;&#125;<br>public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ModelMap</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">LinkedHashMap&lt;String</span>, <span class="hljs-title">Object&gt;</span> </span>&#123;&#125;<br>public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExtendedModelMap</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ModelMap</span> <span class="hljs-title">implements</span> <span class="hljs-title">Model</span> </span>&#123;&#125;<br>public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BindingAwareModelMap</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ExtendedModelMap</span> </span>&#123;&#125;<br></code></pre></td></tr></table></figure><h3 id="7、向session域共享数据"><a href="#7、向session域共享数据" class="headerlink" title="7、向session域共享数据"></a>7、向session域共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testSession&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testSession</span><span class="hljs-params">(HttpSession session)</span></span>&#123;<br>    session.setAttribute(<span class="hljs-string">&quot;testSessionScope&quot;</span>, <span class="hljs-string">&quot;hello,session&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8、向application域共享数据"><a href="#8、向application域共享数据" class="headerlink" title="8、向application域共享数据"></a>8、向application域共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testApplication&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testApplication</span><span class="hljs-params">(HttpSession session)</span></span>&#123;<br>ServletContext application = session.getServletContext();<br>    application.setAttribute(<span class="hljs-string">&quot;testApplicationScope&quot;</span>, <span class="hljs-string">&quot;hello,application&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="六、SpringMVC的视图"><a href="#六、SpringMVC的视图" class="headerlink" title="六、SpringMVC的视图"></a>六、SpringMVC的视图</h1><p>SpringMVC中的视图是View接口，视图的作用渲染数据，将模型Model中的数据展示给用户</p><p>SpringMVC视图的种类很多，默认有转发视图和重定向视图</p><p>当工程引入jstl的依赖，转发视图会自动转换为JstlView</p><p>若使用的视图技术为Thymeleaf，在SpringMVC的配置文件中配置了Thymeleaf的视图解析器，由此视图解析器解析之后所得到的是ThymeleafView</p><h3 id="1、ThymeleafView"><a href="#1、ThymeleafView" class="headerlink" title="1、ThymeleafView"></a>1、ThymeleafView</h3><p>当控制器方法中所设置的视图名称没有任何前缀时，此时的视图名称会被SpringMVC配置文件中所配置的视图解析器解析，视图名称拼接视图前缀和视图后缀所得到的最终路径，会通过转发的方式实现跳转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testHello&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testHello</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;hello&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="img/img002.png"></p><h3 id="2、转发视图"><a href="#2、转发视图" class="headerlink" title="2、转发视图"></a>2、转发视图</h3><p>SpringMVC中默认的转发视图是InternalResourceView</p><p>SpringMVC中创建转发视图的情况：</p><p>当控制器方法中所设置的视图名称以”forward:”为前缀时，创建InternalResourceView视图，此时的视图名称不会被SpringMVC配置文件中所配置的视图解析器解析，而是会将前缀”forward:”去掉，剩余部分作为最终路径通过转发的方式实现跳转</p><p>例如”forward:/“，”forward:/employee”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testForward&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testForward</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;forward:/testHello&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="img/img003.png" alt="image-20210706201316593"></p><h3 id="3、重定向视图"><a href="#3、重定向视图" class="headerlink" title="3、重定向视图"></a>3、重定向视图</h3><p>SpringMVC中默认的重定向视图是RedirectView</p><p>当控制器方法中所设置的视图名称以”redirect:”为前缀时，创建RedirectView视图，此时的视图名称不会被SpringMVC配置文件中所配置的视图解析器解析，而是会将前缀”redirect:”去掉，剩余部分作为最终路径通过重定向的方式实现跳转</p><p>例如”redirect:/“，”redirect:/employee”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testRedirect&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testRedirect</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/testHello&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="img/img004.png" alt="image-20210706201602267"></p><blockquote><p>注：</p><p>重定向视图在解析时，会先将redirect:前缀去掉，然后会判断剩余部分是否以/开头，若是则会自动拼接上下文路径</p></blockquote><h3 id="4、视图控制器view-controller"><a href="#4、视图控制器view-controller" class="headerlink" title="4、视图控制器view-controller"></a>4、视图控制器view-controller</h3><p>当控制器方法中，仅仅用来实现页面跳转，即只需要设置视图名称时，可以将处理器方法使用view-controller标签进行表示</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">path：设置处理的请求地址</span><br><span class="hljs-comment">view-name：设置请求地址所对应的视图名称</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mvc:view-controller</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/testView&quot;</span> <span class="hljs-attr">view-name</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mvc:view-controller</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>注：</p><p>当SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效，此时需要在SpringMVC的核心配置文件中设置开启mvc注解驱动的标签：</p><p>&lt;mvc:annotation-driven /&gt;</p></blockquote><h1 id="七、RESTful"><a href="#七、RESTful" class="headerlink" title="七、RESTful"></a>七、RESTful</h1><h3 id="1、RESTful简介"><a href="#1、RESTful简介" class="headerlink" title="1、RESTful简介"></a>1、RESTful简介</h3><p>REST：<strong>Re</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer，表现层资源状态转移。</p><h5 id="a-gt-资源"><a href="#a-gt-资源" class="headerlink" title="a&gt;资源"></a>a&gt;资源</h5><p>资源是一种看待服务器的方式，即，将服务器看作是由很多离散的资源组成。每个资源是服务器上一个可命名的抽象概念。因为资源是一个抽象的概念，所以它不仅仅能代表服务器文件系统中的一个文件、数据库中的一张表等等具体的东西，可以将资源设计的要多抽象有多抽象，只要想象力允许而且客户端应用开发者能够理解。与面向对象设计类似，资源是以名词为核心来组织的，首先关注的是名词。一个资源可以由一个或多个URI来标识。URI既是资源的名称，也是资源在Web上的地址。对某个资源感兴趣的客户端应用，可以通过资源的URI与其进行交互。</p><h5 id="b-gt-资源的表述"><a href="#b-gt-资源的表述" class="headerlink" title="b&gt;资源的表述"></a>b&gt;资源的表述</h5><p>资源的表述是一段对于资源在某个特定时刻的状态的描述。可以在客户端-服务器端之间转移（交换）。资源的表述可以有多种格式，例如HTML/XML/JSON/纯文本/图片/视频/音频等等。资源的表述格式可以通过协商机制来确定。请求-响应方向的表述通常使用不同的格式。</p><h5 id="c-gt-状态转移"><a href="#c-gt-状态转移" class="headerlink" title="c&gt;状态转移"></a>c&gt;状态转移</h5><p>状态转移说的是：在客户端和服务器端之间转移（transfer）代表资源状态的表述。通过转移和操作资源的表述，来间接实现操作资源的目的。</p><h3 id="2、RESTful的实现"><a href="#2、RESTful的实现" class="headerlink" title="2、RESTful的实现"></a>2、RESTful的实现</h3><p>具体说，就是 HTTP 协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。</p><p>它们分别对应四种基本操作：GET 用来获取资源，POST 用来新建资源，PUT 用来更新资源，DELETE 用来删除资源。</p><p>REST 风格提倡 URL 地址使用统一的风格设计，从前到后各个单词使用斜杠分开，不使用问号键值对方式携带请求参数，而是将要发送给服务器的数据作为 URL 地址的一部分，以保证整体风格的一致性。</p><table><thead><tr><th>操作</th><th>传统方式</th><th>REST风格</th></tr></thead><tbody><tr><td>查询操作</td><td>getUserById?id=1</td><td>user/1–&gt;get请求方式</td></tr><tr><td>保存操作</td><td>saveUser</td><td>user–&gt;post请求方式</td></tr><tr><td>删除操作</td><td>deleteUser?id=1</td><td>user/1–&gt;delete请求方式</td></tr><tr><td>更新操作</td><td>updateUser</td><td>user–&gt;put请求方式</td></tr></tbody></table><h3 id="3、HiddenHttpMethodFilter"><a href="#3、HiddenHttpMethodFilter" class="headerlink" title="3、HiddenHttpMethodFilter"></a>3、HiddenHttpMethodFilter</h3><p>由于浏览器只支持发送get和post方式的请求，那么该如何发送put和delete请求呢？</p><p>SpringMVC 提供了 <strong>HiddenHttpMethodFilter</strong> 帮助我们<strong>将 POST 请求转换为 DELETE 或 PUT 请求</strong></p><p><strong>HiddenHttpMethodFilter</strong> 处理put和delete请求的条件：</p><p>a&gt;当前请求的请求方式必须为post</p><p>b&gt;当前请求必须传输请求参数_method</p><p>满足以上条件，<strong>HiddenHttpMethodFilter</strong> 过滤器就会将当前请求的请求方式转换为请求参数_method的值，因此请求参数_method的值才是最终的请求方式</p><p>在web.xml中注册<strong>HiddenHttpMethodFilter</strong> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>注：</p><p>目前为止，SpringMVC中提供了两个过滤器：CharacterEncodingFilter和HiddenHttpMethodFilter</p><p>在web.xml中注册时，必须先注册CharacterEncodingFilter，再注册HiddenHttpMethodFilter</p><p>原因：</p><ul><li><p>在 CharacterEncodingFilter 中通过 request.setCharacterEncoding(encoding) 方法设置字符集的</p></li><li><p>request.setCharacterEncoding(encoding) 方法要求前面不能有任何获取请求参数的操作</p></li><li><p>而 HiddenHttpMethodFilter 恰恰有一个获取请求方式的操作：</p></li><li><p>```<br>String paramValue = request.getParameter(this.methodParam);</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><br><br><br># 八、RESTful案例<br><br>### <span class="hljs-number">1</span>、准备工作<br><br>和传统 CRUD 一样，实现对员工信息的增删改查。<br><br>- 搭建环境<br><br>- 准备实体类<br><br> ```java<br> package com.atguigu.mvc.bean;<br> <br> <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span> &#123;</span><br> <br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> lastName;<br> <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">String</span> email;<br>    <span class="hljs-comment">//1 male, 0 female</span><br>    <span class="hljs-keyword">private</span> Integer gender;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getId</span><span class="hljs-params">()</span> </span>&#123;<br>       <span class="hljs-keyword">return</span> id;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setId</span><span class="hljs-params">(Integer id)</span> </span>&#123;<br>       <span class="hljs-keyword">this</span>.id = id;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> <span class="hljs-title">getLastName</span><span class="hljs-params">()</span> </span>&#123;<br>       <span class="hljs-keyword">return</span> lastName;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setLastName</span><span class="hljs-params">(<span class="hljs-keyword">String</span> lastName)</span> </span>&#123;<br>       <span class="hljs-keyword">this</span>.lastName = lastName;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">String</span> <span class="hljs-title">getEmail</span><span class="hljs-params">()</span> </span>&#123;<br>       <span class="hljs-keyword">return</span> email;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setEmail</span><span class="hljs-params">(<span class="hljs-keyword">String</span> email)</span> </span>&#123;<br>       <span class="hljs-keyword">this</span>.email = email;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Integer <span class="hljs-title">getGender</span><span class="hljs-params">()</span> </span>&#123;<br>       <span class="hljs-keyword">return</span> gender;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setGender</span><span class="hljs-params">(Integer gender)</span> </span>&#123;<br>       <span class="hljs-keyword">this</span>.gender = gender;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Employee</span><span class="hljs-params">(Integer id, <span class="hljs-keyword">String</span> lastName, <span class="hljs-keyword">String</span> email, Integer gender)</span> </span>&#123;<br>       <span class="hljs-built_in">super</span>();<br>       <span class="hljs-keyword">this</span>.id = id;<br>       <span class="hljs-keyword">this</span>.lastName = lastName;<br>       <span class="hljs-keyword">this</span>.email = email;<br>       <span class="hljs-keyword">this</span>.gender = gender;<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Employee</span><span class="hljs-params">()</span> </span>&#123;<br>    &#125;<br> &#125;<br></code></pre></td></tr></table></figure></li></ul></blockquote><ul><li><p>准备dao模拟数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.mvc.dao;<br><br><span class="hljs-keyword">import</span> java.util.Collection;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">import</span> com.atguigu.mvc.bean.Employee;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Repository;<br><br><br><span class="hljs-meta">@Repository</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EmployeeDao</span> </span>&#123;<br><br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Map&lt;Integer, Employee&gt; employees = <span class="hljs-keyword">null</span>;<br>   <br>   <span class="hljs-keyword">static</span>&#123;<br>      employees = <span class="hljs-keyword">new</span> HashMap&lt;Integer, Employee&gt;();<br><br>      employees.put(<span class="hljs-number">1001</span>, <span class="hljs-keyword">new</span> Employee(<span class="hljs-number">1001</span>, <span class="hljs-string">&quot;E-AA&quot;</span>, <span class="hljs-string">&quot;aa@163.com&quot;</span>, <span class="hljs-number">1</span>));<br>      employees.put(<span class="hljs-number">1002</span>, <span class="hljs-keyword">new</span> Employee(<span class="hljs-number">1002</span>, <span class="hljs-string">&quot;E-BB&quot;</span>, <span class="hljs-string">&quot;bb@163.com&quot;</span>, <span class="hljs-number">1</span>));<br>      employees.put(<span class="hljs-number">1003</span>, <span class="hljs-keyword">new</span> Employee(<span class="hljs-number">1003</span>, <span class="hljs-string">&quot;E-CC&quot;</span>, <span class="hljs-string">&quot;cc@163.com&quot;</span>, <span class="hljs-number">0</span>));<br>      employees.put(<span class="hljs-number">1004</span>, <span class="hljs-keyword">new</span> Employee(<span class="hljs-number">1004</span>, <span class="hljs-string">&quot;E-DD&quot;</span>, <span class="hljs-string">&quot;dd@163.com&quot;</span>, <span class="hljs-number">0</span>));<br>      employees.put(<span class="hljs-number">1005</span>, <span class="hljs-keyword">new</span> Employee(<span class="hljs-number">1005</span>, <span class="hljs-string">&quot;E-EE&quot;</span>, <span class="hljs-string">&quot;ee@163.com&quot;</span>, <span class="hljs-number">1</span>));<br>   &#125;<br>   <br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Integer initId = <span class="hljs-number">1006</span>;<br>   <br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">save</span><span class="hljs-params">(Employee employee)</span></span>&#123;<br>      <span class="hljs-keyword">if</span>(employee.getId() == <span class="hljs-keyword">null</span>)&#123;<br>         employee.setId(initId++);<br>      &#125;<br>      employees.put(employee.getId(), employee);<br>   &#125;<br>   <br>   <span class="hljs-function"><span class="hljs-keyword">public</span> Collection&lt;Employee&gt; <span class="hljs-title">getAll</span><span class="hljs-params">()</span></span>&#123;<br>      <span class="hljs-keyword">return</span> employees.values();<br>   &#125;<br>   <br>   <span class="hljs-function"><span class="hljs-keyword">public</span> Employee <span class="hljs-title">get</span><span class="hljs-params">(Integer id)</span></span>&#123;<br>      <span class="hljs-keyword">return</span> employees.get(id);<br>   &#125;<br>   <br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">delete</span><span class="hljs-params">(Integer id)</span></span>&#123;<br>      employees.remove(id);<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="2、功能清单"><a href="#2、功能清单" class="headerlink" title="2、功能清单"></a>2、功能清单</h3><table><thead><tr><th>功能</th><th>URL 地址</th><th>请求方式</th></tr></thead><tbody><tr><td>访问首页√</td><td>/</td><td>GET</td></tr><tr><td>查询全部数据√</td><td>/employee</td><td>GET</td></tr><tr><td>删除√</td><td>/employee/2</td><td>DELETE</td></tr><tr><td>跳转到添加数据页面√</td><td>/toAdd</td><td>GET</td></tr><tr><td>执行保存√</td><td>/employee</td><td>POST</td></tr><tr><td>跳转到更新数据页面√</td><td>/employee/2</td><td>GET</td></tr><tr><td>执行更新√</td><td>/employee</td><td>PUT</td></tr></tbody></table><h3 id="3、具体功能：访问首页"><a href="#3、具体功能：访问首页" class="headerlink" title="3、具体功能：访问首页"></a>3、具体功能：访问首页</h3><h5 id="a-gt-配置view-controller"><a href="#a-gt-配置view-controller" class="headerlink" title="a&gt;配置view-controller"></a>a&gt;配置view-controller</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mvc:view-controller</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">view-name</span>=<span class="hljs-string">&quot;index&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><h5 id="b-gt-创建页面"><a href="#b-gt-创建页面" class="headerlink" title="b&gt;创建页面"></a>b&gt;创建页面</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> &gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>首页<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/employee&#125;&quot;</span>&gt;</span>访问员工信息<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4、具体功能：查询所有员工数据"><a href="#4、具体功能：查询所有员工数据" class="headerlink" title="4、具体功能：查询所有员工数据"></a>4、具体功能：查询所有员工数据</h3><h5 id="a-gt-控制器方法"><a href="#a-gt-控制器方法" class="headerlink" title="a&gt;控制器方法"></a>a&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(value = &quot;/employee&quot;, method = RequestMethod.GET)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getEmployeeList</span><span class="hljs-params">(Model model)</span></span>&#123;<br>    Collection&lt;Employee&gt; employeeList = employeeDao.getAll();<br>    model.addAttribute(<span class="hljs-string">&quot;employeeList&quot;</span>, employeeList);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;employee_list&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="b-gt-创建employee-list-html"><a href="#b-gt-创建employee-list-html" class="headerlink" title="b&gt;创建employee_list.html"></a>b&gt;创建employee_list.html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Employee Info<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">th:src</span>=<span class="hljs-string">&quot;@&#123;/static/js/vue.js&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">cellpadding</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: center;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataTable&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>Employee Info<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>id<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>lastName<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>email<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>gender<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>options(<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/toAdd&#125;&quot;</span>&gt;</span>add<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>)<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span> <span class="hljs-attr">th:each</span>=<span class="hljs-string">&quot;employee : $&#123;employeeList&#125;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;employee.id&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;employee.lastName&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;employee.email&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;employee.gender&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;deleteA&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;deleteEmployee&quot;</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;&#x27;/employee/&#x27;+$&#123;employee.id&#125;&#125;&quot;</span>&gt;</span>delete<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;&#x27;/employee/&#x27;+$&#123;employee.id&#125;&#125;&quot;</span>&gt;</span>update<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="5、具体功能：删除"><a href="#5、具体功能：删除" class="headerlink" title="5、具体功能：删除"></a>5、具体功能：删除</h3><h5 id="a-gt-创建处理delete请求方式的表单"><a href="#a-gt-创建处理delete请求方式的表单" class="headerlink" title="a&gt;创建处理delete请求方式的表单"></a>a&gt;创建处理delete请求方式的表单</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 作用：通过超链接控制表单的提交，将post请求转换为delete请求 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;delete_form&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- HiddenHttpMethodFilter要求：必须传输_method请求参数，并且值为最终的请求方式 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;_method&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;delete&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="b-gt-删除超链接绑定点击事件"><a href="#b-gt-删除超链接绑定点击事件" class="headerlink" title="b&gt;删除超链接绑定点击事件"></a>b&gt;删除超链接绑定点击事件</h5><p>引入vue.js</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">th:src</span>=<span class="hljs-string">&quot;@&#123;/static/js/vue.js&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>删除超链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;deleteA&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;deleteEmployee&quot;</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;&#x27;/employee/&#x27;+$&#123;employee.id&#125;&#125;&quot;</span>&gt;</span>delete<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>通过vue处理点击事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">var</span> vue = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        <span class="hljs-attr">el</span>:<span class="hljs-string">&quot;#dataTable&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">methods</span>:&#123;</span><br><span class="javascript">            <span class="hljs-comment">//event表示当前事件</span></span><br><span class="javascript">            <span class="hljs-attr">deleteEmployee</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-comment">//通过id获取表单标签</span></span><br><span class="javascript">                <span class="hljs-keyword">var</span> delete_form = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;delete_form&quot;</span>);</span><br><span class="javascript">                <span class="hljs-comment">//将触发事件的超链接的href属性为表单的action属性赋值</span></span><br><span class="javascript">                delete_form.action = event.target.href;</span><br><span class="javascript">                <span class="hljs-comment">//提交表单</span></span><br><span class="javascript">                delete_form.submit();</span><br><span class="javascript">                <span class="hljs-comment">//阻止超链接的默认跳转行为</span></span><br><span class="javascript">                event.preventDefault();</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="c-gt-控制器方法"><a href="#c-gt-控制器方法" class="headerlink" title="c&gt;控制器方法"></a>c&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(value = &quot;/employee/&#123;id&#125;&quot;, method = RequestMethod.DELETE)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">deleteEmployee</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>&#123;<br>    employeeDao.delete(id);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/employee&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6、具体功能：跳转到添加数据页面"><a href="#6、具体功能：跳转到添加数据页面" class="headerlink" title="6、具体功能：跳转到添加数据页面"></a>6、具体功能：跳转到添加数据页面</h3><h5 id="a-gt-配置view-controller-1"><a href="#a-gt-配置view-controller-1" class="headerlink" title="a&gt;配置view-controller"></a>a&gt;配置view-controller</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mvc:view-controller</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/toAdd&quot;</span> <span class="hljs-attr">view-name</span>=<span class="hljs-string">&quot;employee_add&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mvc:view-controller</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="b-gt-创建employee-add-html"><a href="#b-gt-创建employee-add-html" class="headerlink" title="b&gt;创建employee_add.html"></a>b&gt;创建employee_add.html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Add Employee<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">th:action</span>=<span class="hljs-string">&quot;@&#123;/employee&#125;&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>    lastName:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lastName&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    email:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    gender:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>male<br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span>female<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="7、具体功能：执行保存"><a href="#7、具体功能：执行保存" class="headerlink" title="7、具体功能：执行保存"></a>7、具体功能：执行保存</h3><h5 id="a-gt-控制器方法-1"><a href="#a-gt-控制器方法-1" class="headerlink" title="a&gt;控制器方法"></a>a&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(value = &quot;/employee&quot;, method = RequestMethod.POST)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">addEmployee</span><span class="hljs-params">(Employee employee)</span></span>&#123;<br>    employeeDao.save(employee);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/employee&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8、具体功能：跳转到更新数据页面"><a href="#8、具体功能：跳转到更新数据页面" class="headerlink" title="8、具体功能：跳转到更新数据页面"></a>8、具体功能：跳转到更新数据页面</h3><h5 id="a-gt-修改超链接"><a href="#a-gt-修改超链接" class="headerlink" title="a&gt;修改超链接"></a>a&gt;修改超链接</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;&#x27;/employee/&#x27;+$&#123;employee.id&#125;&#125;&quot;</span>&gt;</span>update<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="b-gt-控制器方法"><a href="#b-gt-控制器方法" class="headerlink" title="b&gt;控制器方法"></a>b&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(value = &quot;/employee/&#123;id&#125;&quot;, method = RequestMethod.GET)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getEmployeeById</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> Integer id, Model model)</span></span>&#123;<br>    Employee employee = employeeDao.get(id);<br>    model.addAttribute(<span class="hljs-string">&quot;employee&quot;</span>, employee);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;employee_update&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="c-gt-创建employee-update-html"><a href="#c-gt-创建employee-update-html" class="headerlink" title="c&gt;创建employee_update.html"></a>c&gt;创建employee_update.html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Update Employee<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">th:action</span>=<span class="hljs-string">&quot;@&#123;/employee&#125;&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;_method&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;put&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">&quot;$&#123;employee.id&#125;&quot;</span>&gt;</span><br>    lastName:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lastName&quot;</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">&quot;$&#123;employee.lastName&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    email:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">&quot;$&#123;employee.email&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">        th:field=&quot;$&#123;employee.gender&#125;&quot;可用于单选框或复选框的回显</span><br><span class="hljs-comment">        若单选框的value和employee.gender的值一致，则添加checked=&quot;checked&quot;属性</span><br><span class="hljs-comment">    --&gt;</span><br>    gender:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">th:field</span>=<span class="hljs-string">&quot;$&#123;employee.gender&#125;&quot;</span>&gt;</span>male<br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">th:field</span>=<span class="hljs-string">&quot;$&#123;employee.gender&#125;&quot;</span>&gt;</span>female<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;update&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="9、具体功能：执行更新"><a href="#9、具体功能：执行更新" class="headerlink" title="9、具体功能：执行更新"></a>9、具体功能：执行更新</h3><h5 id="a-gt-控制器方法-2"><a href="#a-gt-控制器方法-2" class="headerlink" title="a&gt;控制器方法"></a>a&gt;控制器方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(value = &quot;/employee&quot;, method = RequestMethod.PUT)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">updateEmployee</span><span class="hljs-params">(Employee employee)</span></span>&#123;<br>    employeeDao.save(employee);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/employee&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="八、HttpMessageConverter"><a href="#八、HttpMessageConverter" class="headerlink" title="八、HttpMessageConverter"></a>八、HttpMessageConverter</h1><p>HttpMessageConverter，报文信息转换器，将请求报文转换为Java对象，或将Java对象转换为响应报文</p><p>HttpMessageConverter提供了两个注解和两个类型：@RequestBody，@ResponseBody，RequestEntity，</p><p>ResponseEntity</p><h3 id="1、-RequestBody"><a href="#1、-RequestBody" class="headerlink" title="1、@RequestBody"></a>1、@RequestBody</h3><p>@RequestBody可以获取请求体，需要在控制器方法设置一个形参，使用@RequestBody进行标识，当前请求的请求体就会为当前注解所标识的形参赋值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">th:action</span>=<span class="hljs-string">&quot;@&#123;/testRequestBody&#125;&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>    用户名：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    密码：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testRequestBody&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testRequestBody</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> String requestBody)</span></span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;requestBody:&quot;</span>+requestBody);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><p>requestBody:username=admin&amp;password=123456</p><h3 id="2、RequestEntity"><a href="#2、RequestEntity" class="headerlink" title="2、RequestEntity"></a>2、RequestEntity</h3><p>RequestEntity封装请求报文的一种类型，需要在控制器方法的形参中设置该类型的形参，当前请求的请求报文就会赋值给该形参，可以通过getHeaders()获取请求头信息，通过getBody()获取请求体信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testRequestEntity&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testRequestEntity</span><span class="hljs-params">(RequestEntity&lt;String&gt; requestEntity)</span></span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;requestHeader:&quot;</span>+requestEntity.getHeaders());<br>    System.out.println(<span class="hljs-string">&quot;requestBody:&quot;</span>+requestEntity.getBody());<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：<br>requestHeader:[host:”localhost:8080”, connection:”keep-alive”, content-length:”27”, cache-control:”max-age=0”, sec-ch-ua:”” Not A;Brand”;v=”99”, “Chromium”;v=”90”, “Google Chrome”;v=”90””, sec-ch-ua-mobile:”?0”, upgrade-insecure-requests:”1”, origin:”<a href="http://localhost:8080&quot;">http://localhost:8080&quot;</a>, user-agent:”Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36”]<br>requestBody:username=admin&amp;password=123</p><h3 id="3、-ResponseBody"><a href="#3、-ResponseBody" class="headerlink" title="3、@ResponseBody"></a>3、@ResponseBody</h3><p>@ResponseBody用于标识一个控制器方法，可以将该方法的返回值直接作为响应报文的响应体响应到浏览器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testResponseBody&quot;)</span><br><span class="hljs-meta">@ResponseBody</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testResponseBody</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>结果：浏览器页面显示success</p><h3 id="4、SpringMVC处理json"><a href="#4、SpringMVC处理json" class="headerlink" title="4、SpringMVC处理json"></a>4、SpringMVC处理json</h3><p>@ResponseBody处理json的步骤：</p><p>a&gt;导入jackson的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.12.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>b&gt;在SpringMVC的核心配置文件中开启mvc的注解驱动，此时在HandlerAdaptor中会自动装配一个消息转换器：MappingJackson2HttpMessageConverter，可以将响应到浏览器的Java对象转换为Json格式的字符串</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">&lt;<span class="hljs-symbol">mvc:</span><span class="hljs-keyword">annotation</span>-<span class="hljs-title">driven</span> /&gt;<br></code></pre></td></tr></table></figure><p>c&gt;在处理器方法上使用@ResponseBody注解进行标识</p><p>d&gt;将Java对象直接作为控制器方法的返回值返回，就会自动转换为Json格式的字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testResponseUser&quot;)</span><br><span class="hljs-meta">@ResponseBody</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> User <span class="hljs-title">testResponseUser</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> User(<span class="hljs-number">1001</span>,<span class="hljs-string">&quot;admin&quot;</span>,<span class="hljs-string">&quot;123456&quot;</span>,<span class="hljs-number">23</span>,<span class="hljs-string">&quot;男&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>浏览器的页面中展示的结果：</p><p>{“id”:1001,”username”:”admin”,”password”:”123456”,”age”:23,”sex”:”男”}</p><h3 id="5、SpringMVC处理ajax"><a href="#5、SpringMVC处理ajax" class="headerlink" title="5、SpringMVC处理ajax"></a>5、SpringMVC处理ajax</h3><p>a&gt;请求超链接：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/testAjax&#125;&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;testAjax&quot;</span>&gt;</span>testAjax<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>b&gt;通过vue和axios处理点击事件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">th:src</span>=<span class="hljs-string">&quot;@&#123;/static/js/vue.js&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">th:src</span>=<span class="hljs-string">&quot;@&#123;/static/js/axios.min.js&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">var</span> vue = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        <span class="hljs-attr">el</span>:<span class="hljs-string">&quot;#app&quot;</span>,</span><br><span class="javascript">        <span class="hljs-attr">methods</span>:&#123;</span><br><span class="javascript">            <span class="hljs-attr">testAjax</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;</span><br><span class="javascript">                axios(&#123;</span><br><span class="javascript">                    <span class="hljs-attr">method</span>:<span class="hljs-string">&quot;post&quot;</span>,</span><br><span class="javascript">                    <span class="hljs-attr">url</span>:event.target.href,</span><br><span class="javascript">                    <span class="hljs-attr">params</span>:&#123;</span><br><span class="javascript">                        <span class="hljs-attr">username</span>:<span class="hljs-string">&quot;admin&quot;</span>,</span><br><span class="javascript">                        <span class="hljs-attr">password</span>:<span class="hljs-string">&quot;123456&quot;</span></span><br><span class="javascript">                    &#125;</span><br><span class="javascript">                &#125;).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;</span><br><span class="javascript">                    alert(response.data);</span><br><span class="javascript">                &#125;);</span><br><span class="javascript">                event.preventDefault();</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>c&gt;控制器方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testAjax&quot;)</span><br><span class="hljs-meta">@ResponseBody</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testAjax</span><span class="hljs-params">(String username, String password)</span></span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;username:&quot;</span>+username+<span class="hljs-string">&quot;,password:&quot;</span>+password);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;hello,ajax&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6、-RestController注解"><a href="#6、-RestController注解" class="headerlink" title="6、@RestController注解"></a>6、@RestController注解</h3><p>@RestController注解是springMVC提供的一个复合注解，标识在控制器的类上，就相当于为类添加了@Controller注解，并且为其中的每个方法添加了@ResponseBody注解</p><h3 id="7、ResponseEntity"><a href="#7、ResponseEntity" class="headerlink" title="7、ResponseEntity"></a>7、ResponseEntity</h3><p>ResponseEntity用于控制器方法的返回值类型，该控制器方法的返回值就是响应到浏览器的响应报文</p><h1 id="九、文件上传和下载"><a href="#九、文件上传和下载" class="headerlink" title="九、文件上传和下载"></a>九、文件上传和下载</h1><h3 id="1、文件下载"><a href="#1、文件下载" class="headerlink" title="1、文件下载"></a>1、文件下载</h3><p>使用ResponseEntity实现下载文件的功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testDown&quot;)</span><br><span class="hljs-keyword">public</span> ResponseEntity&lt;<span class="hljs-keyword">byte</span>[]&gt; testResponseEntity(HttpSession session) <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">//获取ServletContext对象</span><br>    ServletContext servletContext = session.getServletContext();<br>    <span class="hljs-comment">//获取服务器中文件的真实路径</span><br>    String realPath = servletContext.getRealPath(<span class="hljs-string">&quot;/static/img/1.jpg&quot;</span>);<br>    <span class="hljs-comment">//创建输入流</span><br>    InputStream is = <span class="hljs-keyword">new</span> FileInputStream(realPath);<br>    <span class="hljs-comment">//创建字节数组</span><br>    <span class="hljs-keyword">byte</span>[] bytes = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[is.available()];<br>    <span class="hljs-comment">//将流读到字节数组中</span><br>    is.read(bytes);<br>    <span class="hljs-comment">//创建HttpHeaders对象设置响应头信息</span><br>    MultiValueMap&lt;String, String&gt; headers = <span class="hljs-keyword">new</span> HttpHeaders();<br>    <span class="hljs-comment">//设置要下载方式以及下载文件的名字</span><br>    headers.add(<span class="hljs-string">&quot;Content-Disposition&quot;</span>, <span class="hljs-string">&quot;attachment;filename=1.jpg&quot;</span>);<br>    <span class="hljs-comment">//设置响应状态码</span><br>    HttpStatus statusCode = HttpStatus.OK;<br>    <span class="hljs-comment">//创建ResponseEntity对象</span><br>    ResponseEntity&lt;<span class="hljs-keyword">byte</span>[]&gt; responseEntity = <span class="hljs-keyword">new</span> ResponseEntity&lt;&gt;(bytes, headers, statusCode);<br>    <span class="hljs-comment">//关闭输入流</span><br>    is.close();<br>    <span class="hljs-keyword">return</span> responseEntity;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2、文件上传"><a href="#2、文件上传" class="headerlink" title="2、文件上传"></a>2、文件上传</h3><p>文件上传要求form表单的请求方式必须为post，并且添加属性enctype=”multipart/form-data”</p><p>SpringMVC中将上传的文件封装到MultipartFile对象中，通过此对象可以获取文件相关信息</p><p>上传步骤：</p><p>a&gt;添加依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>b&gt;在SpringMVC的配置文件中添加配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;multipartResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>c&gt;控制器方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/testUp&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">testUp</span><span class="hljs-params">(MultipartFile photo, HttpSession session)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>    <span class="hljs-comment">//获取上传的文件的文件名</span><br>    String fileName = photo.getOriginalFilename();<br>    <span class="hljs-comment">//处理文件重名问题</span><br>    String hzName = fileName.substring(fileName.lastIndexOf(<span class="hljs-string">&quot;.&quot;</span>));<br>    fileName = UUID.randomUUID().toString() + hzName;<br>    <span class="hljs-comment">//获取服务器中photo目录的路径</span><br>    ServletContext servletContext = session.getServletContext();<br>    String photoPath = servletContext.getRealPath(<span class="hljs-string">&quot;photo&quot;</span>);<br>    File file = <span class="hljs-keyword">new</span> File(photoPath);<br>    <span class="hljs-keyword">if</span>(!file.exists())&#123;<br>        file.mkdir();<br>    &#125;<br>    String finalPath = photoPath + File.separator + fileName;<br>    <span class="hljs-comment">//实现上传功能</span><br>    photo.transferTo(<span class="hljs-keyword">new</span> File(finalPath));<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="十、拦截器"><a href="#十、拦截器" class="headerlink" title="十、拦截器"></a>十、拦截器</h1><h3 id="1、拦截器的配置"><a href="#1、拦截器的配置" class="headerlink" title="1、拦截器的配置"></a>1、拦截器的配置</h3><p>SpringMVC中的拦截器用于拦截控制器方法的执行</p><p>SpringMVC中的拦截器需要实现HandlerInterceptor</p><p>SpringMVC的拦截器必须在SpringMVC的配置文件中进行配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.atguigu.interceptor.FirstInterceptor&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ref</span> <span class="hljs-attr">bean</span>=<span class="hljs-string">&quot;firstInterceptor&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ref</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 以上两种配置方式都是对DispatcherServlet所处理的所有的请求进行拦截 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mvc:interceptor</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:mapping</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/**&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:exclude-mapping</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/testRequestEntity&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ref</span> <span class="hljs-attr">bean</span>=<span class="hljs-string">&quot;firstInterceptor&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ref</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mvc:interceptor</span>&gt;</span><br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求</span><br><span class="hljs-comment">--&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、拦截器的三个抽象方法"><a href="#2、拦截器的三个抽象方法" class="headerlink" title="2、拦截器的三个抽象方法"></a>2、拦截器的三个抽象方法</h3><p>SpringMVC中的拦截器有三个抽象方法：</p><p>preHandle：控制器方法执行之前执行preHandle()，其boolean类型的返回值表示是否拦截或放行，返回true为放行，即调用控制器方法；返回false表示拦截，即不调用控制器方法</p><p>postHandle：控制器方法执行之后执行postHandle()</p><p>afterComplation：处理完视图和模型数据，渲染视图完毕之后执行afterComplation()</p><h3 id="3、多个拦截器的执行顺序"><a href="#3、多个拦截器的执行顺序" class="headerlink" title="3、多个拦截器的执行顺序"></a>3、多个拦截器的执行顺序</h3><p>a&gt;若每个拦截器的preHandle()都返回true</p><p>此时多个拦截器的执行顺序和拦截器在SpringMVC的配置文件的配置顺序有关：</p><p>preHandle()会按照配置的顺序执行，而postHandle()和afterComplation()会按照配置的反序执行</p><p>b&gt;若某个拦截器的preHandle()返回了false</p><p>preHandle()返回false和它之前的拦截器的preHandle()都会执行，postHandle()都不执行，返回false的拦截器之前的拦截器的afterComplation()会执行</p><h1 id="十一、异常处理器"><a href="#十一、异常处理器" class="headerlink" title="十一、异常处理器"></a>十一、异常处理器</h1><h3 id="1、基于配置的异常处理"><a href="#1、基于配置的异常处理" class="headerlink" title="1、基于配置的异常处理"></a>1、基于配置的异常处理</h3><p>SpringMVC提供了一个处理控制器方法执行过程中所出现的异常的接口：HandlerExceptionResolver</p><p>HandlerExceptionResolver接口的实现类有：DefaultHandlerExceptionResolver和SimpleMappingExceptionResolver</p><p>SpringMVC提供了自定义的异常处理器SimpleMappingExceptionResolver，使用方式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;exceptionMappings&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">props</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">        properties的键表示处理器方法执行过程中出现的异常</span><br><span class="hljs-comment">        properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面</span><br><span class="hljs-comment">        --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">prop</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;java.lang.ArithmeticException&quot;</span>&gt;</span>error<span class="hljs-tag">&lt;/<span class="hljs-name">prop</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">props</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">    exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享</span><br><span class="hljs-comment">    --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;exceptionAttribute&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;ex&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、基于注解的异常处理"><a href="#2、基于注解的异常处理" class="headerlink" title="2、基于注解的异常处理"></a>2、基于注解的异常处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//@ControllerAdvice将当前类标识为异常处理的组件</span><br><span class="hljs-meta">@ControllerAdvice</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExceptionController</span> </span>&#123;<br><br>    <span class="hljs-comment">//@ExceptionHandler用于设置所标识方法处理的异常</span><br>    <span class="hljs-meta">@ExceptionHandler(ArithmeticException.class)</span><br>    <span class="hljs-comment">//ex表示当前请求处理中出现的异常对象</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">handleArithmeticException</span><span class="hljs-params">(Exception ex, Model model)</span></span>&#123;<br>        model.addAttribute(<span class="hljs-string">&quot;ex&quot;</span>, ex);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;error&quot;</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="十二、注解配置SpringMVC"><a href="#十二、注解配置SpringMVC" class="headerlink" title="十二、注解配置SpringMVC"></a>十二、注解配置SpringMVC</h1><p>使用配置类和注解代替web.xml和SpringMVC配置文件的功能</p><h3 id="1、创建初始化类，代替web-xml"><a href="#1、创建初始化类，代替web-xml" class="headerlink" title="1、创建初始化类，代替web.xml"></a>1、创建初始化类，代替web.xml</h3><p>在Servlet3.0环境中，容器会在类路径中查找实现javax.servlet.ServletContainerInitializer接口的类，如果找到的话就用它来配置Servlet容器。<br>Spring提供了这个接口的实现，名为SpringServletContainerInitializer，这个类反过来又会查找实现WebApplicationInitializer的类并将配置的任务交给它们来完成。Spring3.2引入了一个便利的WebApplicationInitializer基础实现，名为AbstractAnnotationConfigDispatcherServletInitializer，当我们的类扩展了AbstractAnnotationConfigDispatcherServletInitializer并将其部署到Servlet3.0容器的时候，容器会自动发现它，并用它来配置Servlet上下文。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WebInit</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractAnnotationConfigDispatcherServletInitializer</span> </span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定spring的配置类</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Class[]&#123;SpringConfig.class&#125;;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定SpringMVC的配置类</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Class[]&#123;WebConfig.class&#125;;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定DispatcherServlet的映射规则，即url-pattern</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> String[] getServletMappings() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;/&quot;</span>&#125;;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加过滤器</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Filter[] getServletFilters() &#123;<br>        CharacterEncodingFilter encodingFilter = <span class="hljs-keyword">new</span> CharacterEncodingFilter();<br>        encodingFilter.setEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>        encodingFilter.setForceRequestEncoding(<span class="hljs-keyword">true</span>);<br>        HiddenHttpMethodFilter hiddenHttpMethodFilter = <span class="hljs-keyword">new</span> HiddenHttpMethodFilter();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Filter[]&#123;encodingFilter, hiddenHttpMethodFilter&#125;;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2、创建SpringConfig配置类，代替spring的配置文件"><a href="#2、创建SpringConfig配置类，代替spring的配置文件" class="headerlink" title="2、创建SpringConfig配置类，代替spring的配置文件"></a>2、创建SpringConfig配置类，代替spring的配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SpringConfig</span> </span>&#123;<br><span class="hljs-comment">//ssm整合之后，spring的配置信息写在此类中</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3、创建WebConfig配置类，代替SpringMVC的配置文件"><a href="#3、创建WebConfig配置类，代替SpringMVC的配置文件" class="headerlink" title="3、创建WebConfig配置类，代替SpringMVC的配置文件"></a>3、创建WebConfig配置类，代替SpringMVC的配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-comment">//扫描组件</span><br><span class="hljs-meta">@ComponentScan(&quot;com.atguigu.mvc.controller&quot;)</span><br><span class="hljs-comment">//开启MVC注解驱动</span><br><span class="hljs-meta">@EnableWebMvc</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WebConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">WebMvcConfigurer</span> </span>&#123;<br><br>    <span class="hljs-comment">//使用默认的servlet处理静态资源</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">configureDefaultServletHandling</span><span class="hljs-params">(DefaultServletHandlerConfigurer configurer)</span> </span>&#123;<br>        configurer.enable();<br>    &#125;<br><br>    <span class="hljs-comment">//配置文件上传解析器</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> CommonsMultipartResolver <span class="hljs-title">multipartResolver</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> CommonsMultipartResolver();<br>    &#125;<br><br>    <span class="hljs-comment">//配置拦截器</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span> </span>&#123;<br>        FirstInterceptor firstInterceptor = <span class="hljs-keyword">new</span> FirstInterceptor();<br>        registry.addInterceptor(firstInterceptor).addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>);<br>    &#125;<br>    <br>    <span class="hljs-comment">//配置视图控制</span><br>    <br>    <span class="hljs-comment">/*@Override</span><br><span class="hljs-comment">    public void addViewControllers(ViewControllerRegistry registry) &#123;</span><br><span class="hljs-comment">        registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);</span><br><span class="hljs-comment">    &#125;*/</span><br>    <br>    <span class="hljs-comment">//配置异常映射</span><br>    <span class="hljs-comment">/*@Override</span><br><span class="hljs-comment">    public void configureHandlerExceptionResolvers(List&lt;HandlerExceptionResolver&gt; resolvers) &#123;</span><br><span class="hljs-comment">        SimpleMappingExceptionResolver exceptionResolver = new SimpleMappingExceptionResolver();</span><br><span class="hljs-comment">        Properties prop = new Properties();</span><br><span class="hljs-comment">        prop.setProperty(&quot;java.lang.ArithmeticException&quot;, &quot;error&quot;);</span><br><span class="hljs-comment">        //设置异常映射</span><br><span class="hljs-comment">        exceptionResolver.setExceptionMappings(prop);</span><br><span class="hljs-comment">        //设置共享异常信息的键</span><br><span class="hljs-comment">        exceptionResolver.setExceptionAttribute(&quot;ex&quot;);</span><br><span class="hljs-comment">        resolvers.add(exceptionResolver);</span><br><span class="hljs-comment">    &#125;*/</span><br><br>    <span class="hljs-comment">//配置生成模板解析器</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> ITemplateResolver <span class="hljs-title">templateResolver</span><span class="hljs-params">()</span> </span>&#123;<br>        WebApplicationContext webApplicationContext = ContextLoader.getCurrentWebApplicationContext();<br>        <span class="hljs-comment">// ServletContextTemplateResolver需要一个ServletContext作为构造参数，可通过WebApplicationContext 的方法获得</span><br>        ServletContextTemplateResolver templateResolver = <span class="hljs-keyword">new</span> ServletContextTemplateResolver(<br>                webApplicationContext.getServletContext());<br>        templateResolver.setPrefix(<span class="hljs-string">&quot;/WEB-INF/templates/&quot;</span>);<br>        templateResolver.setSuffix(<span class="hljs-string">&quot;.html&quot;</span>);<br>        templateResolver.setCharacterEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>        templateResolver.setTemplateMode(TemplateMode.HTML);<br>        <span class="hljs-keyword">return</span> templateResolver;<br>    &#125;<br><br>    <span class="hljs-comment">//生成模板引擎并为模板引擎注入模板解析器</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> SpringTemplateEngine <span class="hljs-title">templateEngine</span><span class="hljs-params">(ITemplateResolver templateResolver)</span> </span>&#123;<br>        SpringTemplateEngine templateEngine = <span class="hljs-keyword">new</span> SpringTemplateEngine();<br>        templateEngine.setTemplateResolver(templateResolver);<br>        <span class="hljs-keyword">return</span> templateEngine;<br>    &#125;<br><br>    <span class="hljs-comment">//生成视图解析器并未解析器注入模板引擎</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> ViewResolver <span class="hljs-title">viewResolver</span><span class="hljs-params">(SpringTemplateEngine templateEngine)</span> </span>&#123;<br>        ThymeleafViewResolver viewResolver = <span class="hljs-keyword">new</span> ThymeleafViewResolver();<br>        viewResolver.setCharacterEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>        viewResolver.setTemplateEngine(templateEngine);<br>        <span class="hljs-keyword">return</span> viewResolver;<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、测试功能"><a href="#4、测试功能" class="headerlink" title="4、测试功能"></a>4、测试功能</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">index</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;index&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="十三、SpringMVC执行流程"><a href="#十三、SpringMVC执行流程" class="headerlink" title="十三、SpringMVC执行流程"></a>十三、SpringMVC执行流程</h1><h3 id="1、SpringMVC常用组件"><a href="#1、SpringMVC常用组件" class="headerlink" title="1、SpringMVC常用组件"></a>1、SpringMVC常用组件</h3><ul><li>DispatcherServlet：<strong>前端控制器</strong>，不需要工程师开发，由框架提供</li></ul><p>作用：统一处理请求和响应，整个流程控制的中心，由它调用其它组件处理用户的请求</p><ul><li>HandlerMapping：<strong>处理器映射器</strong>，不需要工程师开发，由框架提供</li></ul><p>作用：根据请求的url、method等信息查找Handler，即控制器方法</p><ul><li>Handler：<strong>处理器</strong>，需要工程师开发</li></ul><p>作用：在DispatcherServlet的控制下Handler对具体的用户请求进行处理</p><ul><li>HandlerAdapter：<strong>处理器适配器</strong>，不需要工程师开发，由框架提供</li></ul><p>作用：通过HandlerAdapter对处理器（控制器方法）进行执行</p><ul><li>ViewResolver：<strong>视图解析器</strong>，不需要工程师开发，由框架提供</li></ul><p>作用：进行视图解析，得到相应的视图，例如：ThymeleafView、InternalResourceView、RedirectView</p><ul><li>View：<strong>视图</strong></li></ul><p>作用：将模型数据通过页面展示给用户</p><h3 id="2、DispatcherServlet初始化过程"><a href="#2、DispatcherServlet初始化过程" class="headerlink" title="2、DispatcherServlet初始化过程"></a>2、DispatcherServlet初始化过程</h3><p>DispatcherServlet 本质上是一个 Servlet，所以天然的遵循 Servlet 的生命周期。所以宏观上是 Servlet 生命周期来进行调度。</p><p><img src="img/img005.png" alt="images"></p><h5 id="a-gt-初始化WebApplicationContext"><a href="#a-gt-初始化WebApplicationContext" class="headerlink" title="a&gt;初始化WebApplicationContext"></a>a&gt;初始化WebApplicationContext</h5><p>所在类：org.springframework.web.servlet.FrameworkServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> WebApplicationContext <span class="hljs-title">initWebApplicationContext</span><span class="hljs-params">()</span> </span>&#123;<br>    WebApplicationContext rootContext =<br>        WebApplicationContextUtils.getWebApplicationContext(getServletContext());<br>    WebApplicationContext wac = <span class="hljs-keyword">null</span>;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.webApplicationContext != <span class="hljs-keyword">null</span>) &#123;<br>        <span class="hljs-comment">// A context instance was injected at construction time -&gt; use it</span><br>        wac = <span class="hljs-keyword">this</span>.webApplicationContext;<br>        <span class="hljs-keyword">if</span> (wac <span class="hljs-keyword">instanceof</span> ConfigurableWebApplicationContext) &#123;<br>            ConfigurableWebApplicationContext cwac = (ConfigurableWebApplicationContext) wac;<br>            <span class="hljs-keyword">if</span> (!cwac.isActive()) &#123;<br>                <span class="hljs-comment">// The context has not yet been refreshed -&gt; provide services such as</span><br>                <span class="hljs-comment">// setting the parent context, setting the application context id, etc</span><br>                <span class="hljs-keyword">if</span> (cwac.getParent() == <span class="hljs-keyword">null</span>) &#123;<br>                    <span class="hljs-comment">// The context instance was injected without an explicit parent -&gt; set</span><br>                    <span class="hljs-comment">// the root application context (if any; may be null) as the parent</span><br>                    cwac.setParent(rootContext);<br>                &#125;<br>                configureAndRefreshWebApplicationContext(cwac);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (wac == <span class="hljs-keyword">null</span>) &#123;<br>        <span class="hljs-comment">// No context instance was injected at construction time -&gt; see if one</span><br>        <span class="hljs-comment">// has been registered in the servlet context. If one exists, it is assumed</span><br>        <span class="hljs-comment">// that the parent context (if any) has already been set and that the</span><br>        <span class="hljs-comment">// user has performed any initialization such as setting the context id</span><br>        wac = findWebApplicationContext();<br>    &#125;<br>    <span class="hljs-keyword">if</span> (wac == <span class="hljs-keyword">null</span>) &#123;<br>        <span class="hljs-comment">// No context instance is defined for this servlet -&gt; create a local one</span><br>        <span class="hljs-comment">// 创建WebApplicationContext</span><br>        wac = createWebApplicationContext(rootContext);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.refreshEventReceived) &#123;<br>        <span class="hljs-comment">// Either the context is not a ConfigurableApplicationContext with refresh</span><br>        <span class="hljs-comment">// support or the context injected at construction time had already been</span><br>        <span class="hljs-comment">// refreshed -&gt; trigger initial onRefresh manually here.</span><br>        <span class="hljs-keyword">synchronized</span> (<span class="hljs-keyword">this</span>.onRefreshMonitor) &#123;<br>            <span class="hljs-comment">// 刷新WebApplicationContext</span><br>            onRefresh(wac);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.publishContext) &#123;<br>        <span class="hljs-comment">// Publish the context as a servlet context attribute.</span><br>        <span class="hljs-comment">// 将IOC容器在应用域共享</span><br>        String attrName = getServletContextAttributeName();<br>        getServletContext().setAttribute(attrName, wac);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> wac;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="b-gt-创建WebApplicationContext"><a href="#b-gt-创建WebApplicationContext" class="headerlink" title="b&gt;创建WebApplicationContext"></a>b&gt;创建WebApplicationContext</h5><p>所在类：org.springframework.web.servlet.FrameworkServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> WebApplicationContext <span class="hljs-title">createWebApplicationContext</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> ApplicationContext parent)</span> </span>&#123;<br>    Class&lt;?&gt; contextClass = getContextClass();<br>    <span class="hljs-keyword">if</span> (!ConfigurableWebApplicationContext.class.isAssignableFrom(contextClass)) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ApplicationContextException(<br>            <span class="hljs-string">&quot;Fatal initialization error in servlet with name &#x27;&quot;</span> + getServletName() +<br>            <span class="hljs-string">&quot;&#x27;: custom WebApplicationContext class [&quot;</span> + contextClass.getName() +<br>            <span class="hljs-string">&quot;] is not of type ConfigurableWebApplicationContext&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 通过反射创建 IOC 容器对象</span><br>    ConfigurableWebApplicationContext wac =<br>        (ConfigurableWebApplicationContext) BeanUtils.instantiateClass(contextClass);<br><br>    wac.setEnvironment(getEnvironment());<br>    <span class="hljs-comment">// 设置父容器</span><br>    wac.setParent(parent);<br>    String configLocation = getContextConfigLocation();<br>    <span class="hljs-keyword">if</span> (configLocation != <span class="hljs-keyword">null</span>) &#123;<br>        wac.setConfigLocation(configLocation);<br>    &#125;<br>    configureAndRefreshWebApplicationContext(wac);<br><br>    <span class="hljs-keyword">return</span> wac;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="c-gt-DispatcherServlet初始化策略"><a href="#c-gt-DispatcherServlet初始化策略" class="headerlink" title="c&gt;DispatcherServlet初始化策略"></a>c&gt;DispatcherServlet初始化策略</h5><p>FrameworkServlet创建WebApplicationContext后，刷新容器，调用onRefresh(wac)，此方法在DispatcherServlet中进行了重写，调用了initStrategies(context)方法，初始化策略，即初始化DispatcherServlet的各个组件</p><p>所在类：org.springframework.web.servlet.DispatcherServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initStrategies</span><span class="hljs-params">(ApplicationContext context)</span> </span>&#123;<br>   initMultipartResolver(context);<br>   initLocaleResolver(context);<br>   initThemeResolver(context);<br>   initHandlerMappings(context);<br>   initHandlerAdapters(context);<br>   initHandlerExceptionResolvers(context);<br>   initRequestToViewNameTranslator(context);<br>   initViewResolvers(context);<br>   initFlashMapManager(context);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3、DispatcherServlet调用组件处理请求"><a href="#3、DispatcherServlet调用组件处理请求" class="headerlink" title="3、DispatcherServlet调用组件处理请求"></a>3、DispatcherServlet调用组件处理请求</h3><h5 id="a-gt-processRequest"><a href="#a-gt-processRequest" class="headerlink" title="a&gt;processRequest()"></a>a&gt;processRequest()</h5><p>FrameworkServlet重写HttpServlet中的service()和doXxx()，这些方法中调用了processRequest(request, response)</p><p>所在类：org.springframework.web.servlet.FrameworkServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title">processRequest</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="hljs-function">    <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br><br>    <span class="hljs-keyword">long</span> startTime = System.currentTimeMillis();<br>    Throwable failureCause = <span class="hljs-keyword">null</span>;<br><br>    LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext();<br>    LocaleContext localeContext = buildLocaleContext(request);<br><br>    RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes();<br>    ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes);<br><br>    WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);<br>    asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), <span class="hljs-keyword">new</span> RequestBindingInterceptor());<br><br>    initContextHolders(request, localeContext, requestAttributes);<br><br>    <span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// 执行服务，doService()是一个抽象方法，在DispatcherServlet中进行了重写</span><br>        doService(request, response);<br>    &#125;<br>    <span class="hljs-keyword">catch</span> (ServletException | IOException ex) &#123;<br>        failureCause = ex;<br>        <span class="hljs-keyword">throw</span> ex;<br>    &#125;<br>    <span class="hljs-keyword">catch</span> (Throwable ex) &#123;<br>        failureCause = ex;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NestedServletException(<span class="hljs-string">&quot;Request processing failed&quot;</span>, ex);<br>    &#125;<br><br>    <span class="hljs-keyword">finally</span> &#123;<br>        resetContextHolders(request, previousLocaleContext, previousAttributes);<br>        <span class="hljs-keyword">if</span> (requestAttributes != <span class="hljs-keyword">null</span>) &#123;<br>            requestAttributes.requestCompleted();<br>        &#125;<br>        logResult(request, response, failureCause, asyncManager);<br>        publishRequestHandledEvent(request, response, startTime, failureCause);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="b-gt-doService"><a href="#b-gt-doService" class="headerlink" title="b&gt;doService()"></a>b&gt;doService()</h5><p>所在类：org.springframework.web.servlet.DispatcherServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doService</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>    logRequest(request);<br><br>    <span class="hljs-comment">// Keep a snapshot of the request attributes in case of an include,</span><br>    <span class="hljs-comment">// to be able to restore the original attributes after the include.</span><br>    Map&lt;String, Object&gt; attributesSnapshot = <span class="hljs-keyword">null</span>;<br>    <span class="hljs-keyword">if</span> (WebUtils.isIncludeRequest(request)) &#123;<br>        attributesSnapshot = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>        Enumeration&lt;?&gt; attrNames = request.getAttributeNames();<br>        <span class="hljs-keyword">while</span> (attrNames.hasMoreElements()) &#123;<br>            String attrName = (String) attrNames.nextElement();<br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.cleanupAfterInclude || attrName.startsWith(DEFAULT_STRATEGIES_PREFIX)) &#123;<br>                attributesSnapshot.put(attrName, request.getAttribute(attrName));<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// Make framework objects available to handlers and view objects.</span><br>    request.setAttribute(WEB_APPLICATION_CONTEXT_ATTRIBUTE, getWebApplicationContext());<br>    request.setAttribute(LOCALE_RESOLVER_ATTRIBUTE, <span class="hljs-keyword">this</span>.localeResolver);<br>    request.setAttribute(THEME_RESOLVER_ATTRIBUTE, <span class="hljs-keyword">this</span>.themeResolver);<br>    request.setAttribute(THEME_SOURCE_ATTRIBUTE, getThemeSource());<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.flashMapManager != <span class="hljs-keyword">null</span>) &#123;<br>        FlashMap inputFlashMap = <span class="hljs-keyword">this</span>.flashMapManager.retrieveAndUpdate(request, response);<br>        <span class="hljs-keyword">if</span> (inputFlashMap != <span class="hljs-keyword">null</span>) &#123;<br>            request.setAttribute(INPUT_FLASH_MAP_ATTRIBUTE, Collections.unmodifiableMap(inputFlashMap));<br>        &#125;<br>        request.setAttribute(OUTPUT_FLASH_MAP_ATTRIBUTE, <span class="hljs-keyword">new</span> FlashMap());<br>        request.setAttribute(FLASH_MAP_MANAGER_ATTRIBUTE, <span class="hljs-keyword">this</span>.flashMapManager);<br>    &#125;<br><br>    RequestPath requestPath = <span class="hljs-keyword">null</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.parseRequestPath &amp;&amp; !ServletRequestPathUtils.hasParsedRequestPath(request)) &#123;<br>        requestPath = ServletRequestPathUtils.parseAndCache(request);<br>    &#125;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">// 处理请求和响应</span><br>        doDispatch(request, response);<br>    &#125;<br>    <span class="hljs-keyword">finally</span> &#123;<br>        <span class="hljs-keyword">if</span> (!WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted()) &#123;<br>            <span class="hljs-comment">// Restore the original attribute snapshot, in case of an include.</span><br>            <span class="hljs-keyword">if</span> (attributesSnapshot != <span class="hljs-keyword">null</span>) &#123;<br>                restoreAttributesAfterInclude(request, attributesSnapshot);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (requestPath != <span class="hljs-keyword">null</span>) &#123;<br>            ServletRequestPathUtils.clearParsedRequestPath(request);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="c-gt-doDispatch"><a href="#c-gt-doDispatch" class="headerlink" title="c&gt;doDispatch()"></a>c&gt;doDispatch()</h5><p>所在类：org.springframework.web.servlet.DispatcherServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doDispatch</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>    HttpServletRequest processedRequest = request;<br>    HandlerExecutionChain mappedHandler = <span class="hljs-keyword">null</span>;<br>    <span class="hljs-keyword">boolean</span> multipartRequestParsed = <span class="hljs-keyword">false</span>;<br><br>    WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        ModelAndView mv = <span class="hljs-keyword">null</span>;<br>        Exception dispatchException = <span class="hljs-keyword">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            processedRequest = checkMultipart(request);<br>            multipartRequestParsed = (processedRequest != request);<br><br>            <span class="hljs-comment">// Determine handler for the current request.</span><br>            <span class="hljs-comment">/*</span><br><span class="hljs-comment">            mappedHandler：调用链</span><br><span class="hljs-comment">                包含handler、interceptorList、interceptorIndex</span><br><span class="hljs-comment">            handler：浏览器发送的请求所匹配的控制器方法</span><br><span class="hljs-comment">            interceptorList：处理控制器方法的所有拦截器集合</span><br><span class="hljs-comment">            interceptorIndex：拦截器索引，控制拦截器afterCompletion()的执行</span><br><span class="hljs-comment">            */</span><br>            mappedHandler = getHandler(processedRequest);<br>            <span class="hljs-keyword">if</span> (mappedHandler == <span class="hljs-keyword">null</span>) &#123;<br>                noHandlerFound(processedRequest, response);<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br><br>            <span class="hljs-comment">// Determine handler adapter for the current request.</span><br>           <span class="hljs-comment">// 通过控制器方法创建相应的处理器适配器，调用所对应的控制器方法</span><br>            HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler());<br><br>            <span class="hljs-comment">// Process last-modified header, if supported by the handler.</span><br>            String method = request.getMethod();<br>            <span class="hljs-keyword">boolean</span> isGet = <span class="hljs-string">&quot;GET&quot;</span>.equals(method);<br>            <span class="hljs-keyword">if</span> (isGet || <span class="hljs-string">&quot;HEAD&quot;</span>.equals(method)) &#123;<br>                <span class="hljs-keyword">long</span> lastModified = ha.getLastModified(request, mappedHandler.getHandler());<br>                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> ServletWebRequest(request, response).checkNotModified(lastModified) &amp;&amp; isGet) &#123;<br>                    <span class="hljs-keyword">return</span>;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-comment">// 调用拦截器的preHandle()</span><br>            <span class="hljs-keyword">if</span> (!mappedHandler.applyPreHandle(processedRequest, response)) &#123;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br><br>            <span class="hljs-comment">// Actually invoke the handler.</span><br>            <span class="hljs-comment">// 由处理器适配器调用具体的控制器方法，最终获得ModelAndView对象</span><br>            mv = ha.handle(processedRequest, response, mappedHandler.getHandler());<br><br>            <span class="hljs-keyword">if</span> (asyncManager.isConcurrentHandlingStarted()) &#123;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br><br>            applyDefaultViewName(processedRequest, mv);<br>            <span class="hljs-comment">// 调用拦截器的postHandle()</span><br>            mappedHandler.applyPostHandle(processedRequest, response, mv);<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception ex) &#123;<br>            dispatchException = ex;<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Throwable err) &#123;<br>            <span class="hljs-comment">// As of 4.3, we&#x27;re processing Errors thrown from handler methods as well,</span><br>            <span class="hljs-comment">// making them available for @ExceptionHandler methods and other scenarios.</span><br>            dispatchException = <span class="hljs-keyword">new</span> NestedServletException(<span class="hljs-string">&quot;Handler dispatch failed&quot;</span>, err);<br>        &#125;<br>        <span class="hljs-comment">// 后续处理：处理模型数据和渲染视图</span><br>        processDispatchResult(processedRequest, response, mappedHandler, mv, dispatchException);<br>    &#125;<br>    <span class="hljs-keyword">catch</span> (Exception ex) &#123;<br>        triggerAfterCompletion(processedRequest, response, mappedHandler, ex);<br>    &#125;<br>    <span class="hljs-keyword">catch</span> (Throwable err) &#123;<br>        triggerAfterCompletion(processedRequest, response, mappedHandler,<br>                               <span class="hljs-keyword">new</span> NestedServletException(<span class="hljs-string">&quot;Handler processing failed&quot;</span>, err));<br>    &#125;<br>    <span class="hljs-keyword">finally</span> &#123;<br>        <span class="hljs-keyword">if</span> (asyncManager.isConcurrentHandlingStarted()) &#123;<br>            <span class="hljs-comment">// Instead of postHandle and afterCompletion</span><br>            <span class="hljs-keyword">if</span> (mappedHandler != <span class="hljs-keyword">null</span>) &#123;<br>                mappedHandler.applyAfterConcurrentHandlingStarted(processedRequest, response);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// Clean up any resources used by a multipart request.</span><br>            <span class="hljs-keyword">if</span> (multipartRequestParsed) &#123;<br>                cleanupMultipart(processedRequest);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="d-gt-processDispatchResult"><a href="#d-gt-processDispatchResult" class="headerlink" title="d&gt;processDispatchResult()"></a>d&gt;processDispatchResult()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">processDispatchResult</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response,</span></span><br><span class="hljs-params"><span class="hljs-function">                                   <span class="hljs-meta">@Nullable</span> HandlerExecutionChain mappedHandler, <span class="hljs-meta">@Nullable</span> ModelAndView mv,</span></span><br><span class="hljs-params"><span class="hljs-function">                                   <span class="hljs-meta">@Nullable</span> Exception exception)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><br>    <span class="hljs-keyword">boolean</span> errorView = <span class="hljs-keyword">false</span>;<br><br>    <span class="hljs-keyword">if</span> (exception != <span class="hljs-keyword">null</span>) &#123;<br>        <span class="hljs-keyword">if</span> (exception <span class="hljs-keyword">instanceof</span> ModelAndViewDefiningException) &#123;<br>            logger.debug(<span class="hljs-string">&quot;ModelAndViewDefiningException encountered&quot;</span>, exception);<br>            mv = ((ModelAndViewDefiningException) exception).getModelAndView();<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            Object handler = (mappedHandler != <span class="hljs-keyword">null</span> ? mappedHandler.getHandler() : <span class="hljs-keyword">null</span>);<br>            mv = processHandlerException(request, response, handler, exception);<br>            errorView = (mv != <span class="hljs-keyword">null</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// Did the handler return a view to render?</span><br>    <span class="hljs-keyword">if</span> (mv != <span class="hljs-keyword">null</span> &amp;&amp; !mv.wasCleared()) &#123;<br>        <span class="hljs-comment">// 处理模型数据和渲染视图</span><br>        render(mv, request, response);<br>        <span class="hljs-keyword">if</span> (errorView) &#123;<br>            WebUtils.clearErrorRequestAttributes(request);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (logger.isTraceEnabled()) &#123;<br>            logger.trace(<span class="hljs-string">&quot;No view rendering, null ModelAndView returned.&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted()) &#123;<br>        <span class="hljs-comment">// Concurrent handling started during a forward</span><br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (mappedHandler != <span class="hljs-keyword">null</span>) &#123;<br>        <span class="hljs-comment">// Exception (if any) is already handled..</span><br>        <span class="hljs-comment">// 调用拦截器的afterCompletion()</span><br>        mappedHandler.triggerAfterCompletion(request, response, <span class="hljs-keyword">null</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、SpringMVC的执行流程"><a href="#4、SpringMVC的执行流程" class="headerlink" title="4、SpringMVC的执行流程"></a>4、SpringMVC的执行流程</h3><ol><li><p>用户向服务器发送请求，请求被SpringMVC 前端控制器 DispatcherServlet捕获。</p></li><li><p>DispatcherServlet对请求URL进行解析，得到请求资源标识符（URI），判断请求URI对应的映射：</p></li></ol><p>a) 不存在</p><p>i. 再判断是否配置了mvc:default-servlet-handler</p><p>ii. 如果没配置，则控制台报映射查找不到，客户端展示404错误</p><p><img src="img/img006.png" alt="image-20210709214911404"></p><p><img src="img/img007.png" alt="image-20210709214947432"></p><p>iii. 如果有配置，则访问目标资源（一般为静态资源，如：JS,CSS,HTML），找不到客户端也会展示404错误</p><p><img src="img/img008.png" alt="image-20210709215255693"></p><p><img src="img/img009.png" alt="image-20210709215336097"></p><p>b) 存在则执行下面的流程</p><ol start="3"><li><p>根据该URI，调用HandlerMapping获得该Handler配置的所有相关的对象（包括Handler对象以及Handler对象对应的拦截器），最后以HandlerExecutionChain执行链对象的形式返回。</p></li><li><p>DispatcherServlet 根据获得的Handler，选择一个合适的HandlerAdapter。</p></li><li><p>如果成功获得HandlerAdapter，此时将开始执行拦截器的preHandler(…)方法【正向】</p></li><li><p>提取Request中的模型数据，填充Handler入参，开始执行Handler（Controller)方法，处理请求。在填充Handler的入参过程中，根据你的配置，Spring将帮你做一些额外的工作：</p></li></ol><p>a) HttpMessageConveter： 将请求消息（如Json、xml等数据）转换成一个对象，将对象转换为指定的响应信息</p><p>b) 数据转换：对请求消息进行数据转换。如String转换成Integer、Double等</p><p>c) 数据格式化：对请求消息进行数据格式化。 如将字符串转换成格式化数字或格式化日期等</p><p>d) 数据验证： 验证数据的有效性（长度、格式等），验证结果存储到BindingResult或Error中</p><ol start="7"><li><p>Handler执行完成后，向DispatcherServlet 返回一个ModelAndView对象。</p></li><li><p>此时将开始执行拦截器的postHandle(…)方法【逆向】。</p></li><li><p>根据返回的ModelAndView（此时会判断是否存在异常：如果存在异常，则执行HandlerExceptionResolver进行异常处理）选择一个适合的ViewResolver进行视图解析，根据Model和View，来渲染视图。</p></li><li><p>渲染视图完毕执行拦截器的afterCompletion(…)方法【逆向】。</p></li><li><p>将渲染结果返回给客户端。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>spring</tag>
      
      <tag>springMVC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何解决idea中乱码问题</title>
    <link href="/2021/11/05/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3idea%E4%B8%AD%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <url>/2021/11/05/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3idea%E4%B8%AD%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="一、获取请求参数的乱码问题"><a href="#一、获取请求参数的乱码问题" class="headerlink" title="一、获取请求参数的乱码问题"></a>一、获取请求参数的乱码问题</h2><p>可以使用SpringMVC提供的编码过滤器CharacterEncodingFilter，但是必须在web.xml中进行注册。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--配置springMVC的编码过滤器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>encoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>forceResponseEncoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p>==注：SpringMVC中处理编码的过滤器一定要配置到其他过滤器之前，否则无效==</p><h2 id="二、若配置了以上信息还是出现乱码，可能是idea配置问题"><a href="#二、若配置了以上信息还是出现乱码，可能是idea配置问题" class="headerlink" title="二、若配置了以上信息还是出现乱码，可能是idea配置问题"></a>二、若配置了以上信息还是出现乱码，可能是idea配置问题</h2><p>在idea界面，选择左上角的File -&gt; settings -&gt; Editor -&gt; File Encodings :</p><p>将以下三处都设为 “UTF-8”：</p><ol><li>Global Encoding</li><li>Project Encoding</li><li>Properties Files -&gt; Default encoding for properties files</li></ol><h2 id="三、IntelliJ-IDEA控制台输出中文乱码问题"><a href="#三、IntelliJ-IDEA控制台输出中文乱码问题" class="headerlink" title="三、IntelliJ IDEA控制台输出中文乱码问题"></a>三、IntelliJ IDEA控制台输出中文乱码问题</h2><ol><li>Edit Configurations</li><li>选择部署项目的Tomcat，Server -&gt; VM options 中输入-Dfile.encoding=UTF-8</li></ol>]]></content>
    
    
    <categories>
      
      <category>Other</category>
      
    </categories>
    
    
    <tags>
      
      <tag>idea</tag>
      
      <tag>乱码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小程序入门</title>
    <link href="/2021/11/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E9%97%A8/"/>
    <url>/2021/11/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="第一章-小程序入门"><a href="#第一章-小程序入门" class="headerlink" title="第一章 小程序入门"></a>第一章 小程序入门</h1><h2 id="一、-环境介绍"><a href="#一、-环境介绍" class="headerlink" title="一、 环境介绍"></a>一、 环境介绍</h2><ul><li><a href="https://mp.weixin.qq.com/">开发平台</a>  </li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/">微信开放文档</a></li></ul><p>下载稳定版本开发工具</p><h2 id="二、开发设置"><a href="#二、开发设置" class="headerlink" title="二、开发设置"></a>二、开发设置</h2><ul><li><p>项目名称：XXX</p></li><li><p>AppID：在后台获取id或者使用测试id</p></li><li><p>选择是否使用云服务</p></li><li><p>语言：JavaScript</p></li><li><p>详情 &gt; 测试版本库：选择占比最高的</p></li><li><p>详情 &gt; 不校验合法域名：勾选</p></li></ul><h2 id="三、目录结构"><a href="#三、目录结构" class="headerlink" title="三、目录结构"></a>三、目录结构</h2><p>sitemap.json ：哪些文件可以被微信搜索到</p><p>project.config.json ：项目配置文件</p><p>app.json ：小程序配置</p><p>app.wxss ：小程序的css</p><p>utils ：小程序的工具函数文件夹</p><p>pages ：小程序页面文件夹</p><blockquote><p>index 首页</p><blockquote><p>index.js:首页的页面逻辑</p><p>index.json:首页的配置</p><p>index.wxml:首页的模板（html）</p><p>index.wxss:首页的样式（css）</p></blockquote><p>logs 记录</p></blockquote><h1 id="第二章-wxml语法"><a href="#第二章-wxml语法" class="headerlink" title="第二章 wxml语法"></a>第二章 wxml语法</h1><h2 id="一、数据绑定"><a href="#一、数据绑定" class="headerlink" title="一、数据绑定"></a>一、数据绑定</h2><ul><li><p>data中数据初始化</p></li><li><p>修改数据：this.setData</p><p>​    修改数据的行为始终是同步的</p></li></ul><h2 id="二、获取用户基本信息"><a href="#二、获取用户基本信息" class="headerlink" title="二、获取用户基本信息"></a>二、获取用户基本信息</h2><ul><li>用户未授权（首次登陆）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">button open-type=<span class="hljs-string">&#x27;getUserInfo&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>用户已经授权（再次登陆）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">wx.getUserInfo<br></code></pre></td></tr></table></figure><h2 id="三、事件绑定"><a href="#三、事件绑定" class="headerlink" title="三、事件绑定"></a>三、事件绑定</h2><ul><li><p>bind绑定：事件绑定不会阻止冒泡事件向上冒泡</p></li><li><p>catch绑定：事件绑定可以阻止冒泡事件向上冒泡</p></li></ul><h2 id="四、列表渲染"><a href="#四、列表渲染" class="headerlink" title="四、列表渲染"></a>四、列表渲染</h2><h2 id="五、条件渲染"><a href="#五、条件渲染" class="headerlink" title="五、条件渲染"></a>五、条件渲染</h2><h2 id="六、模板使用"><a href="#六、模板使用" class="headerlink" title="六、模板使用"></a>六、模板使用</h2><h2 id="七、生命周期"><a href="#七、生命周期" class="headerlink" title="七、生命周期"></a>七、生命周期</h2><h1 id="第三章-实战"><a href="#第三章-实战" class="headerlink" title="第三章 实战"></a>第三章 实战</h1><h2 id="一、添加轮播图"><a href="#一、添加轮播图" class="headerlink" title="一、添加轮播图"></a>一、添加轮播图</h2><h3 id="wxml代码"><a href="#wxml代码" class="headerlink" title="wxml代码"></a>wxml代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;view&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">swiper</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;h-slider&quot;</span> <span class="hljs-attr">indicator-dots</span> <span class="hljs-attr">indicator-color</span>=<span class="hljs-string">&quot;#fff&quot;</span> <span class="hljs-attr">indicator-active-color</span>=<span class="hljs-string">&quot;#000&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">swiper-item</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/imgs/swipe/home1.jpg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">swiper-item</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">swiper-item</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/imgs/swipe/home2.webp&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">swiper-item</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">swiper-item</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/imgs/swipe/home3.webp&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">swiper-item</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">swiper</span>&gt;</span></span><br>  &lt;/view&gt;<br></code></pre></td></tr></table></figure><h3 id="wxss代码"><a href="#wxss代码" class="headerlink" title="wxss代码"></a>wxss代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">swiper.h-slider&#123;<br>  <span class="hljs-attr">width</span>: <span class="hljs-number">100</span>%;<br>  height: 300rpx;<br>&#125;<br>swioper.h-slider swiper-item image&#123;<br>  <span class="hljs-attr">width</span>: <span class="hljs-number">100</span>%;<br>  height: 300rpx;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="二、添加icon"><a href="#二、添加icon" class="headerlink" title="二、添加icon"></a>二、添加icon</h2><h3 id="1-获取icon"><a href="#1-获取icon" class="headerlink" title="1.获取icon"></a>1.获取icon</h3><ol><li><a href="https://www.iconfont.cn/">icon网址</a></li><li>选择自己需要的icon加入购物车</li><li>在购物车内将icon添加到项目</li><li>获取项目的css代码</li></ol><h3 id="2-引入icon"><a href="#2-引入icon" class="headerlink" title="2.引入icon"></a>2.引入icon</h3><ol><li><p>新建文件:/static/iconfont/iconfont.wxss</p></li><li><p>将上一步获取的css代码复制到iconfint.wxss文件内</p></li><li><p>在app.wxss文件内添加代码引入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">@<span class="hljs-keyword">import</span> <span class="hljs-string">&quot;/static/iconfont/iconfont.wxss&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p>更新项目里面的icon之后，需要重新获取代码，把css代码更新到iconfint.wxss文件内</p></li></ol><h3 id="3-wxss代码"><a href="#3-wxss代码" class="headerlink" title="3.wxss代码"></a>3.wxss代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- 图标导航区域 --&gt;<br>  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navContainer&quot;</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navItem&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-tuijian&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>xxxx<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navItem&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-shipu&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>xxxx<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navItem&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-yunshipu&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>xxxx<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;navItem&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-shipuhantangliang&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>xxxx<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="4-wxss代码"><a href="#4-wxss代码" class="headerlink" title="4.wxss代码"></a>4.wxss代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* &lt;!-- 图标导航区域 --&gt; */</span><br>.navContainer&#123;<br>  <span class="hljs-attr">display</span>: flex;<br>&#125;<br>.navItem&#123;<br>  <span class="hljs-attr">display</span>: flex;<br>  flex-direction: column;<br>  align-items: center;<br>  width: <span class="hljs-number">25</span>%;<br>&#125;<br>.navItem .iconfont&#123;<br>  <span class="hljs-attr">width</span>: 100rpx;<br>  height: 100rpx;<br>  border-radius: <span class="hljs-number">50</span>%;<br>  text-align: center;<br>  line-height: 100rpx;<br>  background: #fd4953;<br>  font-size: 50rpx;<br>  color: white;<br>  margin: 20rpx <span class="hljs-number">0</span>;<br>&#125;<br>.navItem text&#123;<br>  font-size: 26rpx;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="三、添加左右滑块（scroll-view-适用于展示推荐内容等）"><a href="#三、添加左右滑块（scroll-view-适用于展示推荐内容等）" class="headerlink" title="三、添加左右滑块（scroll-view 适用于展示推荐内容等）"></a>三、添加左右滑块（scroll-view 适用于展示推荐内容等）</h2><h3 id="1-wxml代码"><a href="#1-wxml代码" class="headerlink" title="1.wxml代码"></a>1.wxml代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;view <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;recommendContainer&quot;</span>&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>猜你喜欢<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>为你精心推荐<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;more&quot;</span>&gt;</span>查看更多<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>    &lt;!-- 内容区域 --&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">scroll-view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;recommendScroll&quot;</span> <span class="hljs-attr">enable-flex</span> <span class="hljs-attr">scroll-x</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;scrollItem&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/imgs/swipe/home1.jpg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>推荐1<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;scrollItem&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/imgs/swipe/home1.jpg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>推荐2<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;scrollItem&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/imgs/swipe/home1.jpg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>推荐3<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;scrollItem&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/imgs/swipe/home1.jpg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>推荐4<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">scroll-view</span>&gt;</span></span><br>  &lt;/view&gt;<br></code></pre></td></tr></table></figure><h3 id="2-wxss代码"><a href="#2-wxss代码" class="headerlink" title="2.wxss代码"></a>2.wxss代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 推荐区域 */</span><br>.recommendContainer&#123;<br>  <span class="hljs-attr">padding</span>: 20rpx;<br>&#125;<br>.recommendContainer .header&#123;<br>  padding-bottom: 20rpx;<br>&#125;<br>.recommendContainer .header .title&#123;<br>  font-size: 32rpx;<br>  line-height: 80rpx;<br>  color: #<span class="hljs-number">666</span>;<br>&#125;<br>.recommendContainer .header .more&#123;<br>  <span class="hljs-attr">float</span>: right;<br>  border: 1rpx solid #<span class="hljs-number">333</span>;<br>  padding: 10rpx 20rpx;<br>  font-size: 24rpx;<br>  border-radius: 30rpx;<br>&#125;<br><span class="hljs-comment">/* 推荐内容区 */</span><br>.recommendScroll&#123;<br>  <span class="hljs-attr">display</span>: flex;<br>&#125;<br>.scrollItem&#123;<br>  <span class="hljs-attr">width</span>: 200rpx;<br>  margin-right: 20rpx;<br>&#125;<br>.scrollItem image&#123;<br>  <span class="hljs-attr">width</span>: 200rpx;<br>  height: 200rpx;<br>  border-radius: 10rpx;<br>&#125;<br>.scrollItem text&#123;<br>  font-size: 26rpx;<br>  <span class="hljs-comment">/* 单行文本溢出隐藏 省略号代替 */</span><br>  <span class="hljs-comment">/* display: block;</span><br><span class="hljs-comment">  white-space: nowrap;</span><br><span class="hljs-comment">  overflow: hidden;</span><br><span class="hljs-comment">  text-overflow: ellipsis; */</span><br><br>  <span class="hljs-comment">/* 多行文本溢出隐藏 省略号代替 */</span><br>  overflow: hidden;<br>  text-overflow: ellipsis;<br>  display: -webkit-box;<br>  -webkit-box-orient: vertical;<span class="hljs-comment">/*设置对齐模式*/</span><br>  -webkit-line-clamp: <span class="hljs-number">2</span>;<span class="hljs-comment">/*两行*/</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-注意"><a href="#3-注意" class="headerlink" title="3.注意"></a>3.注意</h3><p>设置scroll-view 的display: flex;属性时，需要为元素添加enable-flex属性，并添加 scroll-x或scroll-y属性用来确定滑动方向。</p><h2 id="四、前后端交互"><a href="#四、前后端交互" class="headerlink" title="四、前后端交互"></a>四、前后端交互</h2><h3 id="1-封装请求功能函数"><a href="#1-封装请求功能函数" class="headerlink" title="1.封装请求功能函数"></a>1.封装请求功能函数</h3><ol><li><p>在utils文件夹下新建文件：config.js ,用于存放服务器配置相关的js代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//配置服务器相关信息</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;<br>    <span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;https://www.deepcre.com&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>在utils文件夹下新建文件：request.js ,用于存放请求相关的js代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 发送ajax请求</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1、封装功能函数</span><br><span class="hljs-comment">  1.1 功能点明确</span><br><span class="hljs-comment">  1.2 函数内部应该保留固定代码（静态的）</span><br><span class="hljs-comment">  1.3 将动态的数据抽取成形参，由使用者根据自身情况动态传入实参</span><br><span class="hljs-comment">  1.4 一个良好的功能函数应该设置形参的默认值</span><br><span class="hljs-comment">2、封装功能组件</span><br><span class="hljs-comment">  2.1 功能点明确</span><br><span class="hljs-comment">  2.2 组件内部保留静态代码</span><br><span class="hljs-comment">  2.3 将动态的数据抽取成props参数，由使用者根据自身的情况以标签属性的形式动态传入props数据</span><br><span class="hljs-comment">  2.4 一个良好的组件应该设置组件的必要性及数据类型</span><br><span class="hljs-comment">  props:&#123;</span><br><span class="hljs-comment">    msg:&#123;</span><br><span class="hljs-comment">      required:true,</span><br><span class="hljs-comment">      default:默认值,</span><br><span class="hljs-comment">      type:String</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">  &#125;</span><br><span class="hljs-comment">**/</span><br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./config&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (url,data=&#123;&#125;,method=<span class="hljs-string">&#x27;GET&#x27;</span>) =&gt;&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">//1. new Promise 初始化promise实例的状态为pending</span><br><br>        wx.request(&#123;<br>            <span class="hljs-attr">url</span>: config.host + url,<br>            data,<br>            method,<br>            <span class="hljs-attr">success</span>:<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span>&#123;<br>              <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;请求成功:&#x27;</span>,res)<br>              resolve(res.data);<br>            &#125;,<br>            <span class="hljs-attr">fail</span>:<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span>&#123;<br>              <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;请求失败:&#x27;</span>,err);<br>              reject(err)<br>            &#125;<br>        &#125;)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>调用函数请求数据，js代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../utils/request.js&#x27;</span><br><br><span class="hljs-attr">onLoad</span>: <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">options</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> result = <span class="hljs-keyword">await</span> request(<span class="hljs-string">&#x27;/products-2/&#x27;</span>,&#123;<span class="hljs-attr">type</span>: <span class="hljs-number">2</span>&#125;)<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;结果数据：&#x27;</span>,result);<br>  &#125;<br></code></pre></td></tr></table></figure></li><li></li></ol><h3 id="2-注意点"><a href="#2-注意点" class="headerlink" title="2.注意点"></a>2.注意点</h3><ol><li>协议必须是https协议</li><li>一个接口最多配置20个域名</li><li>并发贤至上限是10个</li><li>开发过程中设置不校验合法域名：开发工具 –&gt;  右上角详情 –&gt; 本地设置 –&gt; 不校验</li></ol><h2 id="五、本地存储"><a href="#五、本地存储" class="headerlink" title="五、本地存储"></a>五、本地存储</h2><h3 id="1-语法"><a href="#1-语法" class="headerlink" title="1.语法"></a>1.语法</h3><p>wx.setStorage()  || wx.setStorageSync()</p><h3 id="2-注意点-1"><a href="#2-注意点-1" class="headerlink" title="2.注意点"></a>2.注意点</h3><pre><code>1. 建议存储的数据为json数据2. 单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB3. 属于永久存储，同H5的localStorage一样。除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。</code></pre><h2 id="六、须登录才能获取资源实现"><a href="#六、须登录才能获取资源实现" class="headerlink" title="六、须登录才能获取资源实现"></a>六、须登录才能获取资源实现</h2><p>通过cookie实现</p><h3 id="1-cookie信息获取"><a href="#1-cookie信息获取" class="headerlink" title="1. cookie信息获取"></a>1. cookie信息获取</h3><p>在登陆成功之后，需要将返回的cookie信息保存到本地</p><ul><li>在登陆请求时，添加参数：isLogin: true，表示这是一个登陆请求，和其他请求区分开，login.js文件内后端验证部分代码：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> result = <span class="hljs-keyword">await</span> request(<span class="hljs-string">&#x27;/login/cellphone&#x27;</span>, &#123;phone, password, <span class="hljs-attr">isLogin</span>: <span class="hljs-literal">true</span>&#125;)<br></code></pre></td></tr></table></figure><ul><li>登陆成功时，判断isLogin参数是否是true，是则将cookie信息保存到本地。request.js代码：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">success:<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span>&#123;<br>    <span class="hljs-comment">// console.log(&#x27;请求成功:&#x27;,res)</span><br>    <span class="hljs-comment">//-------------添加此部分代码------------------</span><br>    <span class="hljs-keyword">if</span>(data.isLogin)&#123;<span class="hljs-comment">//登陆请求</span><br>        <span class="hljs-comment">//将用户的cookie信息保存到本地</span><br>        wx.setStorage(&#123;<span class="hljs-comment">//异步</span><br>            <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;cookies&#x27;</span>,<br>            <span class="hljs-attr">data</span>: res.cookies<br>        &#125;)<br>    &#125;<br>    <span class="hljs-comment">//-------------------------------------------</span><br>    resolve(res.data);<br>&#125;,<br></code></pre></td></tr></table></figure><h3 id="2-添加含cookie的请求头"><a href="#2-添加含cookie的请求头" class="headerlink" title="2. 添加含cookie的请求头"></a>2. 添加含cookie的请求头</h3><p>修改请求的文件request.js ，每次请求的时候加上一个包含cookie信息的请求头</p><ul><li>在请求时，判断是否是登陆请求，如果是，则在请求时判断本地是否含有cookie信息。request.js代码：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">wx.request(&#123;<br><span class="hljs-comment">//-----添加如下代码-----------</span><br><span class="hljs-comment">//wx.getStorageSync(&#x27;cookies&#x27;)：同步获取cookie数据，同步方式是为了保证之后代码可准确执行</span><br><span class="hljs-comment">//find(item =&gt; item.indexOf(&#x27;MUSIC_U&#x27;) !== -1)：cookies内包含多组数据，找到需要的MUSIC_U的值，若有则返回，没有则返回-1。所以使用判断语句，判断是否等于-1，不是则返回值，是则给cookie赋值为空</span><br><br><span class="hljs-attr">header</span>: &#123;<br><span class="hljs-attr">cookie</span>: wx.getStorageSync(<span class="hljs-string">&#x27;cookies&#x27;</span>) ? wx.getStorageSync(<span class="hljs-string">&#x27;cookies&#x27;</span>).find(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.indexOf(<span class="hljs-string">&#x27;MUSIC_U&#x27;</span>) !== -<span class="hljs-number">1</span> ):<span class="hljs-string">&#x27;&#x27;</span><br>&#125;,<br><span class="hljs-comment">//-------------------------</span><br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="七、视频下拉列表实现"><a href="#七、视频下拉列表实现" class="headerlink" title="七、视频下拉列表实现"></a>七、视频下拉列表实现</h2><h3 id="1-wxml代码-1"><a href="#1-wxml代码-1" class="headerlink" title="1.wxml代码"></a>1.wxml代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;scroll-view scroll-y <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;menuScroll&quot;</span>&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;menuItem&quot;</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">&quot;&#123;&#123;videoList&#125;&#125;&quot;</span> <span class="hljs-attr">wx:key</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">video</span> </span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;&#123;item.data.urlInfo.url&#125;&#125;&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">bindplay</span>=<span class="hljs-string">&quot;handlePlay&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&#123;&#123;item.data.vid&#125;&#125;&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/scroll-view&gt;<br></code></pre></td></tr></table></figure><h3 id="2-多个视频同时播放问题解决"><a href="#2-多个视频同时播放问题解决" class="headerlink" title="2.多个视频同时播放问题解决"></a>2.多个视频同时播放问题解决</h3><p>在<video>标签内，绑定一个播放事件：bindplay=”handlePlay”，并传递id：id=”“。相应的js代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//点击播放、继续播放的回调</span><br><span class="hljs-function"><span class="hljs-title">handlePlay</span>(<span class="hljs-params">event</span>)</span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 问题：多个视频同时播放的问题</span><br><span class="hljs-comment">    * </span><br><span class="hljs-comment">    * 需求</span><br><span class="hljs-comment">    *  1.在点击播放的事件中需要找到上一个播放的视频</span><br><span class="hljs-comment">    *  2.在播放新的视频之前关闭上一个正在播放的视频</span><br><span class="hljs-comment">    * 关键</span><br><span class="hljs-comment">    *  1.如何找到上一个视频的实例对象</span><br><span class="hljs-comment">    *  2.如何确认点击播放的视频和正在播放的视频不是同一个视频</span><br><span class="hljs-comment">    * 单例模式</span><br><span class="hljs-comment">    *  1.需要创建多个对象的场景下，通过一个变量接收，始终保持只有一个对象</span><br><span class="hljs-comment">    *  2.节省内存空间</span><br><span class="hljs-comment">    */</span><br><br>    <span class="hljs-keyword">let</span> vid = event.currentTarget.id;<br>    <span class="hljs-comment">//关闭上一个播放的视频</span><br>    <span class="hljs-built_in">this</span>.vid !== vid &amp;&amp; <span class="hljs-built_in">this</span>.videoContext &amp;&amp; <span class="hljs-built_in">this</span>.videoContext.stop();<br>    <span class="hljs-built_in">this</span>.vid = vid;<br>    <span class="hljs-comment">//创建控制video标签的实例对象</span><br>    <span class="hljs-built_in">this</span>.videoContext = wx.createVideoContext(vid);<br>&#125;,<br></code></pre></td></tr></table></figure><h3 id="3-优化视频显示，用图片代替视频"><a href="#3-优化视频显示，用图片代替视频" class="headerlink" title="3.优化视频显示，用图片代替视频"></a>3.优化视频显示，用图片代替视频</h3><p>由于一次加载时，要加载全部视频，会遇到加载速度太慢，用户体验感较差的情况。故采取用封面图片代替视频的方式。</p><p>首选为页面添加数据：</p><p>videoId: ‘’, // 视频id标识，初始为空，代表一开始没有选中任何一个视频，界面中也全部都是以封面图片的形式呈现。</p><p>wxml代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;video <br>    src=<span class="hljs-string">&quot;&#123;&#123;item.data.urlInfo.url&#125;&#125;&quot;</span><br>    bindplay=<span class="hljs-string">&quot;handlePlay&quot;</span><br>    id=<span class="hljs-string">&quot;&#123;&#123;item.data.vid&#125;&#125;&quot;</span><br>    poster=<span class="hljs-string">&quot;&#123;&#123;item.data.coverUrl&#125;&#125;&quot;</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;common&quot;</span><br>    object-fit=<span class="hljs-string">&quot;cover&quot;</span><br>    <span class="hljs-attr">wx</span>:<span class="hljs-keyword">if</span>=<span class="hljs-string">&#x27;&#123;&#123;videoId === item.data.vid&#125;&#125;&#x27;</span><br>    bindtimeupdate=<span class="hljs-string">&quot;handleTimeUpdate&quot;</span><br>    bindended=<span class="hljs-string">&quot;handleEnded&quot;</span><br>&gt;&lt;/video&gt;<br>&lt;!-- 性能优化：使用image图片代替video标签 --&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">image</span> </span></span><br><span class="hljs-tag"><span class="xml">    <span class="hljs-attr">wx:else</span> </span></span><br><span class="hljs-tag"><span class="xml">    <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;handlePlay&quot;</span> </span></span><br><span class="hljs-tag"><span class="xml">    <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&#123;&#123;item.data.vid&#125;&#125;&quot;</span> </span></span><br><span class="hljs-tag"><span class="xml">    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;common&quot;</span> </span></span><br><span class="hljs-tag"><span class="xml">    <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;&#123;item.data.coverUrl&#125;&#125;&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>wxjs代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//点击播放、继续播放的回调</span><br>    <span class="hljs-function"><span class="hljs-title">handlePlay</span>(<span class="hljs-params">event</span>)</span>&#123;<br>      <span class="hljs-comment">/**</span><br><span class="hljs-comment">       * 问题：多个视频同时播放的问题</span><br><span class="hljs-comment">       * </span><br><span class="hljs-comment">       * 需求</span><br><span class="hljs-comment">       *  1.在点击播放的事件中需要找到上一个播放的视频</span><br><span class="hljs-comment">       *  2.在播放新的视频之前关闭上一个正在播放的视频</span><br><span class="hljs-comment">       * 关键</span><br><span class="hljs-comment">       *  1.如何找到上一个视频的实例对象</span><br><span class="hljs-comment">       *  2.如何确认点击播放的视频和正在播放的视频不是同一个视频</span><br><span class="hljs-comment">       * 单例模式</span><br><span class="hljs-comment">       *  1.需要创建多个对象的场景下，通过一个变量接收，始终保持只有一个对象</span><br><span class="hljs-comment">       *  2.节省内存空间</span><br><span class="hljs-comment">       */</span><br><br>       <span class="hljs-keyword">let</span> vid = event.currentTarget.id;<br>       <span class="hljs-comment">//关闭上一个播放的视频</span><br>      <span class="hljs-comment">//  this.vid !== vid &amp;&amp; this.videoContext &amp;&amp; this.videoContext.stop();</span><br>      <span class="hljs-comment">//  this.vid = vid;</span><br><br>       <span class="hljs-comment">//更新data中videoId的状态数据</span><br>       <span class="hljs-built_in">this</span>.setData(&#123;<br>         <span class="hljs-attr">videoId</span>: vid<br>       &#125;)<br>       <span class="hljs-comment">//创建控制video标签的实例对象</span><br>       <span class="hljs-built_in">this</span>.videoContext = wx.createVideoContext(vid);<br>       <span class="hljs-built_in">this</span>.videoContext.play();<br>    &#125;,<br></code></pre></td></tr></table></figure><p>对比发现，优化之后不再存在视频加载过慢的问题，于是下面两行代码无需添加：</p><p>//  this.vid !== vid &amp;&amp; this.videoContext &amp;&amp; this.videoContext.stop();<br>//  this.vid = vid;</p><h3 id="4-视频内容大小和video不一致问题解决"><a href="#4-视频内容大小和video不一致问题解决" class="headerlink" title="4.视频内容大小和video不一致问题解决"></a>4.视频内容大小和video不一致问题解决</h3><p>设置video标签的object-fit属性，有三个合法值：contain：包含 , fill：填充 , cover：覆盖.这里设置成fill或者cover都可以。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">object-fit=<span class="hljs-string">&quot;cover&quot;</span> <br></code></pre></td></tr></table></figure><h3 id="5-下拉视频，保持头部和导航栏位置固定不变"><a href="#5-下拉视频，保持头部和导航栏位置固定不变" class="headerlink" title="5.下拉视频，保持头部和导航栏位置固定不变"></a>5.下拉视频，保持头部和导航栏位置固定不变</h3><p>设置scrollview的高度，用calc函数计算高度。下方152rpx包含：header高度，导航栏高度，scrollview的margin-top的高度。对于底部的tabBar的高度，小程序会自动扣除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javas">.menuScroll &#123;<br>    margin-top: 10rpx;<br>    /* calc: 可以动态计算css的宽高， 运算符左右两侧必须加空格，否则计算会失效 */<br>    /* 视口单位： vh vw  1vh = 1%的视口高度  1vw = 1%的视口宽度*/<br>    height: calc(100vh - 152rpx);<br>    /*height: calc(100vh - 100rpx); 用来测试页面上拉触底*/<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-从上次播放到的位置继续播放"><a href="#6-从上次播放到的位置继续播放" class="headerlink" title="6.从上次播放到的位置继续播放"></a>6.从上次播放到的位置继续播放</h3><p>首先要为video标签绑定时间变化函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">bindtimeupdate=<span class="hljs-string">&quot;handleTimeUpdate&quot;</span><br></code></pre></td></tr></table></figure><p>在wxjs中实现该函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//添加如下数据用来记录时间(放在data中)</span><br><span class="hljs-attr">videoUpdateTime</span>: [], <span class="hljs-comment">// 记录video播放的时长</span><br><br><span class="hljs-comment">//监听视频播放进度的回调</span><br><span class="hljs-function"><span class="hljs-title">handleTimeUpdate</span>(<span class="hljs-params">event</span>)</span>&#123;<br>    <span class="hljs-keyword">let</span> videoTimeObj = &#123;<span class="hljs-attr">vid</span>: event.currentTarget.id, <span class="hljs-attr">currentTime</span>: event.detail.currentTime&#125;;<br>    <span class="hljs-keyword">let</span> &#123;videoUpdateTime&#125; = <span class="hljs-built_in">this</span>.data;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    * 思路： 判断记录播放时长的videoUpdateTime数组中是否有当前视频的播放记录</span><br><span class="hljs-comment">    *   1. 如果有，在原有的播放记录中修改播放时间为当前的播放时间</span><br><span class="hljs-comment">    *   2. 如果没有，需要在数组中添加当前视频的播放对象</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * */</span><br>    <span class="hljs-keyword">let</span> videoItem = videoUpdateTime.find(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.vid === videoTimeObj.vid);<br>    <span class="hljs-keyword">if</span>(videoItem)&#123; <span class="hljs-comment">// 之前有</span><br>        videoItem.currentTime = event.detail.currentTime;<br>    &#125;<span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// 之前没有</span><br>    videoUpdateTime.push(videoTimeObj);<br>    &#125;<br>    <span class="hljs-comment">// 更新videoUpdateTime的状态</span><br>    <span class="hljs-built_in">this</span>.setData(&#123;<br>    videoUpdateTime<br>    &#125;)<br>&#125;,<br></code></pre></td></tr></table></figure><p>在handlePlay(event)函数里面添加如下判断代码，在播放之前，先判断是否有播放记录，有的话要跳到之前播放的位置继续播放。代码添加位置在play（）之前，在实例对象this.videoContext创建之后。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 判断当前的视频之前是否播放过，是否有播放记录, 如果有，跳转至指定的播放位置</span><br><span class="hljs-keyword">let</span> &#123;videoUpdateTime&#125; = <span class="hljs-built_in">this</span>.data;<br><span class="hljs-keyword">let</span> videoItem = videoUpdateTime.find(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.vid === vid);<br><span class="hljs-keyword">if</span>(videoItem)&#123;<br>    <span class="hljs-built_in">this</span>.videoContext.seek(videoItem.currentTime);<br>&#125;<br></code></pre></td></tr></table></figure><p>但是如果上次播放时，视频已经播放结束，则再次播放就无需继续，重头播放即可。</p><p>首先给video标签绑定结束的触发函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">bindended=<span class="hljs-string">&quot;handleEnded&quot;</span><br></code></pre></td></tr></table></figure><p>在wxjs中实现该函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//视频播放结束调用</span><br><span class="hljs-function"><span class="hljs-title">handleEnded</span>(<span class="hljs-params">event</span>)</span>&#123;<br>    <span class="hljs-comment">//移除记录播放时长数组中当前视频的对象</span><br>    <span class="hljs-keyword">let</span> &#123;videoUpdateTime&#125; = <span class="hljs-built_in">this</span>.data;<br>    videoUpdateTime.splice(videoUpdateTime.findIndex(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.vid === event.currentTarget.id), <span class="hljs-number">1</span>);<br>    <span class="hljs-built_in">this</span>.setData(&#123;<br>        videoUpdateTime<br>    &#125;)<br>&#125;,<br></code></pre></td></tr></table></figure><h2 id="八、单行文本溢出隐藏"><a href="#八、单行文本溢出隐藏" class="headerlink" title="八、单行文本溢出隐藏"></a>八、单行文本溢出隐藏</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 单行文本溢出隐藏 省略号代替 */</span><br><span class="hljs-attr">display</span>: block;<br>white-space: nowrap;<br>overflow: hidden;<br>text-overflow: ellipsis;<br></code></pre></td></tr></table></figure><h2 id="九、多行文本溢出隐藏"><a href="#九、多行文本溢出隐藏" class="headerlink" title="九、多行文本溢出隐藏"></a>九、多行文本溢出隐藏</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* 多行文本溢出隐藏 省略号代替 */</span><br><span class="hljs-attr">overflow</span>: hidden;<br>text-overflow: ellipsis;<br>display: -webkit-box;<br>-webkit-box-orient: vertical;<span class="hljs-comment">/*设置对齐模式*/</span><br>-webkit-line-clamp: <span class="hljs-number">2</span>;<span class="hljs-comment">/*两行*/</span><br></code></pre></td></tr></table></figure><h2 id="十、下拉列表刷新（scrollview）"><a href="#十、下拉列表刷新（scrollview）" class="headerlink" title="十、下拉列表刷新（scrollview）"></a>十、下拉列表刷新（scrollview）</h2><h3 id="1-给scollview组件绑定触发函数"><a href="#1-给scollview组件绑定触发函数" class="headerlink" title="1.给scollview组件绑定触发函数"></a>1.给scollview组件绑定触发函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">refresher-enabled  <span class="hljs-comment">//改属性表示开启自定义下拉刷新</span><br>bindrefresherrefresh=<span class="hljs-string">&quot;handleRefresher&quot;</span> <span class="hljs-comment">//绑定刷新的触发函数</span><br></code></pre></td></tr></table></figure><h3 id="2-js中实现handleRefresher函数"><a href="#2-js中实现handleRefresher函数" class="headerlink" title="2.js中实现handleRefresher函数"></a>2.js中实现handleRefresher函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 自定义下拉刷新的回调： scroll-view</span><br><span class="hljs-function"><span class="hljs-title">handleRefresher</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-comment">// 再次发请求，获取最新的视频列表数据</span><br>    <span class="hljs-built_in">this</span>.getVideoList(<span class="hljs-built_in">this</span>.data.navId);<br>&#125;,<br></code></pre></td></tr></table></figure><h3 id="3-解决下拉时三个小圆点一直显示问题"><a href="#3-解决下拉时三个小圆点一直显示问题" class="headerlink" title="3.解决下拉时三个小圆点一直显示问题"></a>3.解决下拉时三个小圆点一直显示问题</h3><p>首先添加变量记录刷新状态(js文件的data中)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">isTriggered: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 标识下拉刷新是否被触发</span><br></code></pre></td></tr></table></figure><p>在scrollview标签内添加属性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">refresher-triggered=<span class="hljs-string">&quot;&#123;&#123;isTriggered&#125;&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>getVideoList（）方法中，数据加载之后，添加隐藏状态的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">this</span>.setData(&#123;<br>    <span class="hljs-attr">isTriggered</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">// 关闭下拉刷新</span><br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="十一、上拉列表加载（scrollview）"><a href="#十一、上拉列表加载（scrollview）" class="headerlink" title="十一、上拉列表加载（scrollview）"></a>十一、上拉列表加载（scrollview）</h2><h3 id="1-给scollview组件绑定触发函数-1"><a href="#1-给scollview组件绑定触发函数-1" class="headerlink" title="1.给scollview组件绑定触发函数"></a>1.给scollview组件绑定触发函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">bindscrolltolower=<span class="hljs-string">&quot;handleToLower&quot;</span><br></code></pre></td></tr></table></figure><h3 id="2-js中实现handleToLower函数"><a href="#2-js中实现handleToLower函数" class="headerlink" title="2.js中实现handleToLower函数"></a>2.js中实现handleToLower函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;scroll-view 上拉触底&#x27;</span>);<br>      <span class="hljs-comment">// 数据分页： 1. 后端分页， 2. 前端分页</span><br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;发送请求 || 在前端截取最新的数据 追加到视频列表的后方&#x27;</span>);<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;网易云音乐暂时没有提供分页的api&#x27;</span>);<br>      <span class="hljs-comment">// 模拟数据</span><br>      <span class="hljs-keyword">let</span> newVideoList = [<br>        &#123;<br>          <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;displayed&quot;</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>          <span class="hljs-string">&quot;extAlg&quot;</span>: <span class="hljs-literal">null</span>,<br>          <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>            <span class="hljs-string">&quot;scm&quot;</span>: <span class="hljs-string">&quot;1.music-video-timeline.video_timeline.video.181017.-295043608&quot;</span>,<br>            <span class="hljs-string">&quot;threadId&quot;</span>: <span class="hljs-string">&quot;R_VI_62_E02A88CF2AE65C449CADD2371C315F18&quot;</span>,<br>            <span class="hljs-string">&quot;coverUrl&quot;</span>: <span class="hljs-string">&quot;https://p2.music.126.net/XIY-ggs6OMhSsrGcx4yUcw==/109951164996630305.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">1080</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">1920</span>,<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;李宇春华晨宇合作好炸《西门少年》，真是神仙合作啊！&quot;</span>,<br>            <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;李宇春华晨宇合作好炸《西门少年》，真是神仙合作啊！&quot;</span>,<br>            <span class="hljs-string">&quot;commentCount&quot;</span>: <span class="hljs-number">186</span>,<br>            <span class="hljs-string">&quot;shareCount&quot;</span>: <span class="hljs-number">516</span>,<br>            <span class="hljs-string">&quot;resolutions&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">240</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">29450044</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">480</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">49904667</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">720</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">72480174</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">1080</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">137540575</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;creator&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;defaultAvatar&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-number">440000</span>,<br>              <span class="hljs-string">&quot;authStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;followed&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/WbQbH2nMF8_30bj-wH92vg==/109951164781511113.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;accountStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;gender&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-number">445200</span>,<br>              <span class="hljs-string">&quot;birthday&quot;</span>: -<span class="hljs-number">2209017600000</span>,<br>              <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-number">3247598879</span>,<br>              <span class="hljs-string">&quot;userType&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;一起爱上好音乐&quot;</span>,<br>              <span class="hljs-string">&quot;signature&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;detailDescription&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId&quot;</span>: <span class="hljs-number">109951164781511120</span>,<br>              <span class="hljs-string">&quot;backgroundImgId&quot;</span>: <span class="hljs-number">109951162868128400</span>,<br>              <span class="hljs-string">&quot;backgroundUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/2zSNIqTcpHL2jIvU6hG0EA==/109951162868128395.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;authority&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;mutual&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;expertTags&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;experts&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;djStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;vipType&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;remarkName&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;avatarImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951164781511113&quot;</span>,<br>              <span class="hljs-string">&quot;backgroundImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951162868128395&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId_str&quot;</span>: <span class="hljs-string">&quot;109951164781511113&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;urlInfo&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;E02A88CF2AE65C449CADD2371C315F18&quot;</span>,<br>              <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://vodkgeyttp9.vod.126.net/vodkgeyttp8/UPF3ch3c_2981347105_uhd.mp4?ts=1602902982&amp;rid=3009063014E119FC636C42FBC02D0085&amp;rl=3&amp;rs=emnEcbTFOFCBkvOhDuUKTDioVBbYMoej&amp;sign=74f043e422f309fb1f240ed7c535a9f5&amp;ext=f0xw0mOJqGcf8yfMQn4khLo0vOAZ2Oret6FDS9VvANIOB778zOa0GNkWKbpJigsUUQr5jG+TbSVFBopWbJqfxOMWz6qSwzClvQwG9aI/msQPte7+2SQ2gGKFPduzNhXy/81Ne8nvhkod6vr0JXFqCRZ2dpI6sWzVchry/GdmoJaRw2s1XDLSAyQ1oqJLHpSvPOrqeMkLsgG48vej5u25h9Xk4Oz5m3oL3T7bKoVzbcDl3L+mCrSoqLHT+K/n0tyB&quot;</span>,<br>              <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">137540575</span>,<br>              <span class="hljs-string">&quot;validityTime&quot;</span>: <span class="hljs-number">1200</span>,<br>              <span class="hljs-string">&quot;needPay&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;payInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;r&quot;</span>: <span class="hljs-number">1080</span><br>            &#125;,<br>            <span class="hljs-string">&quot;videoGroup&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">8013</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;#人气飙升榜#&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">23118</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;华晨宇&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">59101</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;华语现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">59108</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;巡演现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">58100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;previewUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;previewDurationms&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;hasRelatedGameAd&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;markTypes&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;relateSong&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;西门少年 (Live)&quot;</span>,<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1442842608</span>,<br>                <span class="hljs-string">&quot;pst&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;t&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;ar&quot;</span>: [<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">861777</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;华晨宇&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;,<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">8327</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;李宇春&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;<br>                ],<br>                <span class="hljs-string">&quot;alia&quot;</span>: [<br>                  <span class="hljs-string">&quot;原唱：李宇春&quot;</span><br>                ],<br>                <span class="hljs-string">&quot;pop&quot;</span>: <span class="hljs-number">100</span>,<br>                <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rt&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">8</span>,<br>                <span class="hljs-string">&quot;v&quot;</span>: <span class="hljs-number">4</span>,<br>                <span class="hljs-string">&quot;crbt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cf&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;al&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">88421277</span>,<br>                  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;歌手·当打之年 第12期&quot;</span>,<br>                  <span class="hljs-string">&quot;picUrl&quot;</span>: <span class="hljs-string">&quot;http://p3.music.126.net/mOa6Y35QQa2-A5HArd58sQ==/109951164933975773.jpg&quot;</span>,<br>                  <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                  <span class="hljs-string">&quot;pic_str&quot;</span>: <span class="hljs-string">&quot;109951164933975773&quot;</span>,<br>                  <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-number">109951164933975780</span><br>                &#125;,<br>                <span class="hljs-string">&quot;dt&quot;</span>: <span class="hljs-number">293850</span>,<br>                <span class="hljs-string">&quot;h&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">320000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">11756205</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">26779</span><br>                &#125;,<br>                <span class="hljs-string">&quot;m&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">192000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">7053741</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">24264</span><br>                &#125;,<br>                <span class="hljs-string">&quot;l&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">4702509</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">22819</span><br>                &#125;,<br>                <span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cd&quot;</span>: <span class="hljs-string">&quot;01&quot;</span>,<br>                <span class="hljs-string">&quot;no&quot;</span>: <span class="hljs-number">7</span>,<br>                <span class="hljs-string">&quot;rtUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;ftype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtUrls&quot;</span>: [],<br>                <span class="hljs-string">&quot;djId&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;copyright&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;s_id&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rurl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;mst&quot;</span>: <span class="hljs-number">9</span>,<br>                <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">1416682</span>,<br>                <span class="hljs-string">&quot;mv&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;publishTime&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;privilege&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1442842608</span>,<br>                  <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">8</span>,<br>                  <span class="hljs-string">&quot;payed&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;pl&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;dl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;sp&quot;</span>: <span class="hljs-number">7</span>,<br>                  <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;subp&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;cs&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;maxbr&quot;</span>: <span class="hljs-number">999000</span>,<br>                  <span class="hljs-string">&quot;fl&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;toast&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-number">68</span>,<br>                  <span class="hljs-string">&quot;preSell&quot;</span>: <span class="hljs-literal">false</span><br>                &#125;<br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;relatedInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;videoUserLiveInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;vid&quot;</span>: <span class="hljs-string">&quot;E02A88CF2AE65C449CADD2371C315F18&quot;</span>,<br>            <span class="hljs-string">&quot;durationms&quot;</span>: <span class="hljs-number">302891</span>,<br>            <span class="hljs-string">&quot;playTime&quot;</span>: <span class="hljs-number">363031</span>,<br>            <span class="hljs-string">&quot;praisedCount&quot;</span>: <span class="hljs-number">5362</span>,<br>            <span class="hljs-string">&quot;praised&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;subscribed&quot;</span>: <span class="hljs-literal">false</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;displayed&quot;</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>          <span class="hljs-string">&quot;extAlg&quot;</span>: <span class="hljs-literal">null</span>,<br>          <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>            <span class="hljs-string">&quot;scm&quot;</span>: <span class="hljs-string">&quot;1.music-video-timeline.video_timeline.video.181017.-295043608&quot;</span>,<br>            <span class="hljs-string">&quot;threadId&quot;</span>: <span class="hljs-string">&quot;R_VI_62_510C8F5A9DA8DC23997E522B85F1FB3A&quot;</span>,<br>            <span class="hljs-string">&quot;coverUrl&quot;</span>: <span class="hljs-string">&quot;https://p2.music.126.net/W_p6aX7vCFR9Lk-wV0x1Eg==/109951164666337012.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">720</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">1280</span>,<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;断眉联手麻神在湖人中场表演《See you again》致敬科比&quot;</span>,<br>            <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;Wiz Khalifa和Charlie Puth在中场休息时为科比演唱的《See you again》\n\n“It&#x27;s been a long day without you my friend”\n\n#Charlie Puth#|#Wiz Khalifa#&quot;</span>,<br>            <span class="hljs-string">&quot;commentCount&quot;</span>: <span class="hljs-number">139</span>,<br>            <span class="hljs-string">&quot;shareCount&quot;</span>: <span class="hljs-number">317</span>,<br>            <span class="hljs-string">&quot;resolutions&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">240</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">17757824</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">480</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">28683079</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">720</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">36021554</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;creator&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;defaultAvatar&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-number">1000000</span>,<br>              <span class="hljs-string">&quot;authStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;followed&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/HjT8-LnESerQh-mC7bvXBw==/109951165359708723.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;accountStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;gender&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-number">1006600</span>,<br>              <span class="hljs-string">&quot;birthday&quot;</span>: <span class="hljs-number">818804058083</span>,<br>              <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-number">391194506</span>,<br>              <span class="hljs-string">&quot;userType&quot;</span>: <span class="hljs-number">200</span>,<br>              <span class="hljs-string">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;欧美音乐杂货铺&quot;</span>,<br>              <span class="hljs-string">&quot;signature&quot;</span>: <span class="hljs-string">&quot;“环球音乐专属音乐资讯号” “电影资讯号”“欧美音乐资讯号”\n\nColdplay One Direction Paul Walker 百家影视独家资讯站，欢迎光临~\nTaylor Swift\nChris Hemsworth\nChris Evans\nSebastian Stan\n张艺兴&quot;</span>,<br>              <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;detailDescription&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId&quot;</span>: <span class="hljs-number">109951165359708720</span>,<br>              <span class="hljs-string">&quot;backgroundImgId&quot;</span>: <span class="hljs-number">109951165311536080</span>,<br>              <span class="hljs-string">&quot;backgroundUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/TsZo0EMK_FECf9sHJkx8RQ==/109951165311536074.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;authority&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;mutual&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;expertTags&quot;</span>: [<br>                <span class="hljs-string">&quot;欧美&quot;</span><br>              ],<br>              <span class="hljs-string">&quot;experts&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;1&quot;</span>: <span class="hljs-string">&quot;音乐视频达人&quot;</span>,<br>                <span class="hljs-string">&quot;2&quot;</span>: <span class="hljs-string">&quot;音乐图文达人&quot;</span><br>              &#125;,<br>              <span class="hljs-string">&quot;djStatus&quot;</span>: <span class="hljs-number">10</span>,<br>              <span class="hljs-string">&quot;vipType&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;remarkName&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;avatarImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951165359708723&quot;</span>,<br>              <span class="hljs-string">&quot;backgroundImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951165311536074&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId_str&quot;</span>: <span class="hljs-string">&quot;109951165359708723&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;urlInfo&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;510C8F5A9DA8DC23997E522B85F1FB3A&quot;</span>,<br>              <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://vodkgeyttp9.vod.126.net/vodkgeyttp8/7NiPfon1_2893278030_shd.mp4?ts=1602902982&amp;rid=3009063014E119FC636C42FBC02D0085&amp;rl=3&amp;rs=rnqPXTyYCIrmKFYdotyVQgiBLQxNFMkq&amp;sign=cbb3dc0c123693e656ec5c8aa6aa4fe8&amp;ext=f0xw0mOJqGcf8yfMQn4khLo0vOAZ2Oret6FDS9VvANIOB778zOa0GNkWKbpJigsUUQr5jG+TbSVFBopWbJqfxOMWz6qSwzClvQwG9aI/msQPte7+2SQ2gGKFPduzNhXy/81Ne8nvhkod6vr0JXFqCRZ2dpI6sWzVchry/GdmoJaRw2s1XDLSAyQ1oqJLHpSvPOrqeMkLsgG48vej5u25h9Xk4Oz5m3oL3T7bKoVzbcDl3L+mCrSoqLHT+K/n0tyB&quot;</span>,<br>              <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">36021554</span>,<br>              <span class="hljs-string">&quot;validityTime&quot;</span>: <span class="hljs-number">1200</span>,<br>              <span class="hljs-string">&quot;needPay&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;payInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;r&quot;</span>: <span class="hljs-number">720</span><br>            &#125;,<br>            <span class="hljs-string">&quot;videoGroup&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">8003</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;#点赞榜#&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">16194</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Charlie Puth&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">58100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;previewUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;previewDurationms&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;hasRelatedGameAd&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;markTypes&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;relateSong&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;See You Again&quot;</span>,<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">401722227</span>,<br>                <span class="hljs-string">&quot;pst&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;t&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;ar&quot;</span>: [<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">90331</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Charlie Puth&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;,<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">46006</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Wiz Khalifa&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;<br>                ],<br>                <span class="hljs-string">&quot;alia&quot;</span>: [<br>                  <span class="hljs-string">&quot;电影《速度与激情7》片尾曲&quot;</span><br>                ],<br>                <span class="hljs-string">&quot;pop&quot;</span>: <span class="hljs-number">100</span>,<br>                <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-string">&quot;v&quot;</span>: <span class="hljs-number">16</span>,<br>                <span class="hljs-string">&quot;crbt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cf&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;al&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">3270972</span>,<br>                  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Nine Track Mind&quot;</span>,<br>                  <span class="hljs-string">&quot;picUrl&quot;</span>: <span class="hljs-string">&quot;http://p3.music.126.net/OVHar05vedbWFEWHuArbGA==/3295236348738229.jpg&quot;</span>,<br>                  <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                  <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-number">3295236348738229</span><br>                &#125;,<br>                <span class="hljs-string">&quot;dt&quot;</span>: <span class="hljs-number">229564</span>,<br>                <span class="hljs-string">&quot;h&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">320000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">9184696</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">11799</span><br>                &#125;,<br>                <span class="hljs-string">&quot;m&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">192000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">5510834</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">9300</span><br>                &#125;,<br>                <span class="hljs-string">&quot;l&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">3673904</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">7799</span><br>                &#125;,<br>                <span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cd&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-string">&quot;no&quot;</span>: <span class="hljs-number">13</span>,<br>                <span class="hljs-string">&quot;rtUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;ftype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtUrls&quot;</span>: [],<br>                <span class="hljs-string">&quot;djId&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;copyright&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-string">&quot;s_id&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rurl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;mst&quot;</span>: <span class="hljs-number">9</span>,<br>                <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">7002</span>,<br>                <span class="hljs-string">&quot;mv&quot;</span>: <span class="hljs-number">393006</span>,<br>                <span class="hljs-string">&quot;publishTime&quot;</span>: <span class="hljs-number">1454254457074</span>,<br>                <span class="hljs-string">&quot;privilege&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">401722227</span>,<br>                  <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;payed&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;pl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;dl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;sp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;subp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;cs&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;maxbr&quot;</span>: <span class="hljs-number">320000</span>,<br>                  <span class="hljs-string">&quot;fl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;toast&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-number">1284</span>,<br>                  <span class="hljs-string">&quot;preSell&quot;</span>: <span class="hljs-literal">false</span><br>                &#125;<br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;See You Again&quot;</span>,<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">30953009</span>,<br>                <span class="hljs-string">&quot;pst&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;t&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;ar&quot;</span>: [<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">46006</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Wiz Khalifa&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;,<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">90331</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Charlie Puth&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;<br>                ],<br>                <span class="hljs-string">&quot;alia&quot;</span>: [<br>                  <span class="hljs-string">&quot;电影《速度与激情7》致敬保罗沃克插曲&quot;</span><br>                ],<br>                <span class="hljs-string">&quot;pop&quot;</span>: <span class="hljs-number">100</span>,<br>                <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-string">&quot;v&quot;</span>: <span class="hljs-number">289</span>,<br>                <span class="hljs-string">&quot;crbt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cf&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;al&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">3104138</span>,<br>                  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Furious 7 (Original Motion Picture Soundtrack)&quot;</span>,<br>                  <span class="hljs-string">&quot;picUrl&quot;</span>: <span class="hljs-string">&quot;http://p3.music.126.net/JIc9X91OSH-7fUZqVfQXAQ==/7731765766799133.jpg&quot;</span>,<br>                  <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                  <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-number">7731765766799133</span><br>                &#125;,<br>                <span class="hljs-string">&quot;dt&quot;</span>: <span class="hljs-number">230520</span>,<br>                <span class="hljs-string">&quot;h&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">320000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">9223358</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">17300</span><br>                &#125;,<br>                <span class="hljs-string">&quot;m&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">192000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">5534032</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">14800</span><br>                &#125;,<br>                <span class="hljs-string">&quot;l&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">3689369</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">13400</span><br>                &#125;,<br>                <span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cd&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-string">&quot;no&quot;</span>: <span class="hljs-number">7</span>,<br>                <span class="hljs-string">&quot;rtUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;ftype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtUrls&quot;</span>: [],<br>                <span class="hljs-string">&quot;djId&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;copyright&quot;</span>: <span class="hljs-number">2</span>,<br>                <span class="hljs-string">&quot;s_id&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rurl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;mst&quot;</span>: <span class="hljs-number">9</span>,<br>                <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">7002</span>,<br>                <span class="hljs-string">&quot;mv&quot;</span>: <span class="hljs-number">393006</span>,<br>                <span class="hljs-string">&quot;publishTime&quot;</span>: <span class="hljs-number">1426521600007</span>,<br>                <span class="hljs-string">&quot;tns&quot;</span>: [<br>                  <span class="hljs-string">&quot;有缘再见&quot;</span><br>                ],<br>                <span class="hljs-string">&quot;privilege&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">30953009</span>,<br>                  <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;payed&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;pl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;dl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;sp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;subp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;cs&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;maxbr&quot;</span>: <span class="hljs-number">999000</span>,<br>                  <span class="hljs-string">&quot;fl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;toast&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-number">1284</span>,<br>                  <span class="hljs-string">&quot;preSell&quot;</span>: <span class="hljs-literal">false</span><br>                &#125;<br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;relatedInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;videoUserLiveInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;vid&quot;</span>: <span class="hljs-string">&quot;510C8F5A9DA8DC23997E522B85F1FB3A&quot;</span>,<br>            <span class="hljs-string">&quot;durationms&quot;</span>: <span class="hljs-number">228739</span>,<br>            <span class="hljs-string">&quot;playTime&quot;</span>: <span class="hljs-number">418612</span>,<br>            <span class="hljs-string">&quot;praisedCount&quot;</span>: <span class="hljs-number">3532</span>,<br>            <span class="hljs-string">&quot;praised&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;subscribed&quot;</span>: <span class="hljs-literal">false</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;displayed&quot;</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>          <span class="hljs-string">&quot;extAlg&quot;</span>: <span class="hljs-literal">null</span>,<br>          <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>            <span class="hljs-string">&quot;scm&quot;</span>: <span class="hljs-string">&quot;1.music-video-timeline.video_timeline.video.181017.-295043608&quot;</span>,<br>            <span class="hljs-string">&quot;threadId&quot;</span>: <span class="hljs-string">&quot;R_VI_62_A54AEB1C28CCD7990E7E6EAB56ECA485&quot;</span>,<br>            <span class="hljs-string">&quot;coverUrl&quot;</span>: <span class="hljs-string">&quot;https://p2.music.126.net/nj51zvc7TQHbg_dCZKDerg==/109951165037815775.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">486</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">864</span>,<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;动漫《你的名字》插曲《スパークル》，现场版太好听！&quot;</span>,<br>            <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;commentCount&quot;</span>: <span class="hljs-number">21</span>,<br>            <span class="hljs-string">&quot;shareCount&quot;</span>: <span class="hljs-number">18</span>,<br>            <span class="hljs-string">&quot;resolutions&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">240</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">13805898</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">480</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">13565707</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;creator&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;defaultAvatar&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-number">440000</span>,<br>              <span class="hljs-string">&quot;authStatus&quot;</span>: <span class="hljs-number">1</span>,<br>              <span class="hljs-string">&quot;followed&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/N0NpmREOm_yb0w_X5zLO5w==/7795537441726101.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;accountStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;gender&quot;</span>: <span class="hljs-number">1</span>,<br>              <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-number">440100</span>,<br>              <span class="hljs-string">&quot;birthday&quot;</span>: <span class="hljs-number">953136000000</span>,<br>              <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-number">247337423</span>,<br>              <span class="hljs-string">&quot;userType&quot;</span>: <span class="hljs-number">4</span>,<br>              <span class="hljs-string">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;椰汁超甜&quot;</span>,<br>              <span class="hljs-string">&quot;signature&quot;</span>: <span class="hljs-string">&quot;来不及.&quot;</span>,<br>              <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;detailDescription&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId&quot;</span>: <span class="hljs-number">7795537441726101</span>,<br>              <span class="hljs-string">&quot;backgroundImgId&quot;</span>: <span class="hljs-number">18641120139551856</span>,<br>              <span class="hljs-string">&quot;backgroundUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/4ZlZ1W4gaf6UwR1wFVA0XQ==/18641120139551855.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;authority&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;mutual&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;expertTags&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;experts&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;1&quot;</span>: <span class="hljs-string">&quot;二次元视频达人&quot;</span><br>              &#125;,<br>              <span class="hljs-string">&quot;djStatus&quot;</span>: <span class="hljs-number">10</span>,<br>              <span class="hljs-string">&quot;vipType&quot;</span>: <span class="hljs-number">11</span>,<br>              <span class="hljs-string">&quot;remarkName&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;avatarImgIdStr&quot;</span>: <span class="hljs-string">&quot;7795537441726101&quot;</span>,<br>              <span class="hljs-string">&quot;backgroundImgIdStr&quot;</span>: <span class="hljs-string">&quot;18641120139551855&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;urlInfo&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;A54AEB1C28CCD7990E7E6EAB56ECA485&quot;</span>,<br>              <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://vodkgeyttp9.vod.126.net/cloudmusic/e6eed2962315dc66cdcef781e1e83211.mp4?ts=1602902982&amp;rid=3009063014E119FC636C42FBC02D0085&amp;rl=3&amp;rs=LZiZsPiFzqLGysfTDEPypqyNqKRbyyDi&amp;sign=fe210fb85ba1f8b88ff7ddceb30f8016&amp;ext=f0xw0mOJqGcf8yfMQn4khLo0vOAZ2Oret6FDS9VvANIOB778zOa0GNkWKbpJigsUUQr5jG+TbSVFBopWbJqfxOMWz6qSwzClvQwG9aI/msQPte7+2SQ2gGKFPduzNhXy/81Ne8nvhkod6vr0JXFqCRZ2dpI6sWzVchry/GdmoJaRw2s1XDLSAyQ1oqJLHpSvPOrqeMkLsgG48vej5u25h9Xk4Oz5m3oL3T7bKoVzbcDl3L+mCrSoqLHT+K/n0tyB&quot;</span>,<br>              <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">13565707</span>,<br>              <span class="hljs-string">&quot;validityTime&quot;</span>: <span class="hljs-number">1200</span>,<br>              <span class="hljs-string">&quot;needPay&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;payInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;r&quot;</span>: <span class="hljs-number">480</span><br>            &#125;,<br>            <span class="hljs-string">&quot;videoGroup&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">60101</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;日语现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">59108</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;巡演现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">57108</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;流行现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">3102</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;二次元&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">58100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;previewUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;previewDurationms&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;hasRelatedGameAd&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;markTypes&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;relateSong&quot;</span>: [],<br>            <span class="hljs-string">&quot;relatedInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;videoUserLiveInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;vid&quot;</span>: <span class="hljs-string">&quot;A54AEB1C28CCD7990E7E6EAB56ECA485&quot;</span>,<br>            <span class="hljs-string">&quot;durationms&quot;</span>: <span class="hljs-number">360000</span>,<br>            <span class="hljs-string">&quot;playTime&quot;</span>: <span class="hljs-number">29579</span>,<br>            <span class="hljs-string">&quot;praisedCount&quot;</span>: <span class="hljs-number">392</span>,<br>            <span class="hljs-string">&quot;praised&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;subscribed&quot;</span>: <span class="hljs-literal">false</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;displayed&quot;</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>          <span class="hljs-string">&quot;extAlg&quot;</span>: <span class="hljs-literal">null</span>,<br>          <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>            <span class="hljs-string">&quot;scm&quot;</span>: <span class="hljs-string">&quot;1.music-video-timeline.video_timeline.video.181017.-295043608&quot;</span>,<br>            <span class="hljs-string">&quot;threadId&quot;</span>: <span class="hljs-string">&quot;R_VI_62_C4299C0654762635964C1EDE4CED60BB&quot;</span>,<br>            <span class="hljs-string">&quot;coverUrl&quot;</span>: <span class="hljs-string">&quot;https://p2.music.126.net/E_1PyKAfru_fMuujOcs2XQ==/109951163787833870.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">720</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">1280</span>,<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;Bigbang能把颁奖礼办成演唱会，这互动好有趣！&quot;</span>,<br>            <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;Bigbang能把颁奖礼办成演唱会，这互动好有趣！&quot;</span>,<br>            <span class="hljs-string">&quot;commentCount&quot;</span>: <span class="hljs-number">896</span>,<br>            <span class="hljs-string">&quot;shareCount&quot;</span>: <span class="hljs-number">642</span>,<br>            <span class="hljs-string">&quot;resolutions&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">240</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">14694445</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">480</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">24822776</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">720</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">38022088</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;creator&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;defaultAvatar&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-number">350000</span>,<br>              <span class="hljs-string">&quot;authStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;followed&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/p0xg8RpP9ohc3xjDCiePfA==/109951163781470122.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;accountStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;gender&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-number">350100</span>,<br>              <span class="hljs-string">&quot;birthday&quot;</span>: -<span class="hljs-number">2209017600000</span>,<br>              <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-number">1701877461</span>,<br>              <span class="hljs-string">&quot;userType&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;莫想聆听&quot;</span>,<br>              <span class="hljs-string">&quot;signature&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;detailDescription&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId&quot;</span>: <span class="hljs-number">109951163781470130</span>,<br>              <span class="hljs-string">&quot;backgroundImgId&quot;</span>: <span class="hljs-number">109951162868126480</span>,<br>              <span class="hljs-string">&quot;backgroundUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/_f8R60U9mZ42sSNvdPn2sQ==/109951162868126486.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;authority&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;mutual&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;expertTags&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;experts&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;djStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;vipType&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;remarkName&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;avatarImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951163781470122&quot;</span>,<br>              <span class="hljs-string">&quot;backgroundImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951162868126486&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId_str&quot;</span>: <span class="hljs-string">&quot;109951163781470122&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;urlInfo&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;C4299C0654762635964C1EDE4CED60BB&quot;</span>,<br>              <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://vodkgeyttp9.vod.126.net/vodkgeyttp8/pD0Vohdf_2246837624_shd.mp4?ts=1602902982&amp;rid=3009063014E119FC636C42FBC02D0085&amp;rl=3&amp;rs=zlbjKhVVyQUDwIDdtIovWhUisRaExFVz&amp;sign=8d58b0847a8e9e3cf6453c7635182925&amp;ext=f0xw0mOJqGcf8yfMQn4khLo0vOAZ2Oret6FDS9VvANIOB778zOa0GNkWKbpJigsUUQr5jG+TbSVFBopWbJqfxOMWz6qSwzClvQwG9aI/msQPte7+2SQ2gGKFPduzNhXy/81Ne8nvhkod6vr0JXFqCRZ2dpI6sWzVchry/GdmoJaRw2s1XDLSAyQ1oqJLHpSvPOrqeMkLsgG48vej5u25h9Xk4Oz5m3oL3T7bKoVzbcDl3L+mCrSoqLHT+K/n0tyB&quot;</span>,<br>              <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">38022088</span>,<br>              <span class="hljs-string">&quot;validityTime&quot;</span>: <span class="hljs-number">1200</span>,<br>              <span class="hljs-string">&quot;needPay&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;payInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;r&quot;</span>: <span class="hljs-number">720</span><br>            &#125;,<br>            <span class="hljs-string">&quot;videoGroup&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">33206</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;#BIGBANG（빅뱅）#&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">10114</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;BIGBANG&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">14255</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;颁奖晚会盛典&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">103111</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;韩语资讯&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">25137</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐资讯&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">12100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;流行&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">58100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;previewUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;previewDurationms&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;hasRelatedGameAd&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;markTypes&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;relateSong&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;FANTASTIC BABY&quot;</span>,<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">30854090</span>,<br>                <span class="hljs-string">&quot;pst&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;t&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;ar&quot;</span>: [<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">126339</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;BIGBANG&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;<br>                ],<br>                <span class="hljs-string">&quot;alia&quot;</span>: [<br>                  <span class="hljs-string">&quot;Japanese Ver.&quot;</span><br>                ],<br>                <span class="hljs-string">&quot;pop&quot;</span>: <span class="hljs-number">100</span>,<br>                <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-string">&quot;v&quot;</span>: <span class="hljs-number">236</span>,<br>                <span class="hljs-string">&quot;crbt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cf&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;al&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">3104651</span>,<br>                  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;THE BEST OF BIGBANG 2006-2014&quot;</span>,<br>                  <span class="hljs-string">&quot;picUrl&quot;</span>: <span class="hljs-string">&quot;http://p4.music.126.net/l6BwLqjtNjMr2surmIOufg==/109951163199340826.jpg&quot;</span>,<br>                  <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                  <span class="hljs-string">&quot;pic_str&quot;</span>: <span class="hljs-string">&quot;109951163199340826&quot;</span>,<br>                  <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-number">109951163199340830</span><br>                &#125;,<br>                <span class="hljs-string">&quot;dt&quot;</span>: <span class="hljs-number">231626</span>,<br>                <span class="hljs-string">&quot;h&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">320000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">9267244</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">34000</span><br>                &#125;,<br>                <span class="hljs-string">&quot;m&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">192000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">5560364</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">31500</span><br>                &#125;,<br>                <span class="hljs-string">&quot;l&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">3706924</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">30100</span><br>                &#125;,<br>                <span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cd&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-string">&quot;no&quot;</span>: <span class="hljs-number">12</span>,<br>                <span class="hljs-string">&quot;rtUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;ftype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtUrls&quot;</span>: [],<br>                <span class="hljs-string">&quot;djId&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;copyright&quot;</span>: <span class="hljs-number">2</span>,<br>                <span class="hljs-string">&quot;s_id&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rurl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;mst&quot;</span>: <span class="hljs-number">9</span>,<br>                <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">457010</span>,<br>                <span class="hljs-string">&quot;mv&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;publishTime&quot;</span>: <span class="hljs-number">1416931200007</span>,<br>                <span class="hljs-string">&quot;privilege&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">30854090</span>,<br>                  <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;payed&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;pl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;dl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;sp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;subp&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;cs&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;maxbr&quot;</span>: <span class="hljs-number">999000</span>,<br>                  <span class="hljs-string">&quot;fl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;toast&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-number">1093</span>,<br>                  <span class="hljs-string">&quot;preSell&quot;</span>: <span class="hljs-literal">false</span><br>                &#125;<br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;relatedInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;videoUserLiveInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;vid&quot;</span>: <span class="hljs-string">&quot;C4299C0654762635964C1EDE4CED60BB&quot;</span>,<br>            <span class="hljs-string">&quot;durationms&quot;</span>: <span class="hljs-number">99114</span>,<br>            <span class="hljs-string">&quot;playTime&quot;</span>: <span class="hljs-number">3411106</span>,<br>            <span class="hljs-string">&quot;praisedCount&quot;</span>: <span class="hljs-number">15985</span>,<br>            <span class="hljs-string">&quot;praised&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;subscribed&quot;</span>: <span class="hljs-literal">false</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;displayed&quot;</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>          <span class="hljs-string">&quot;extAlg&quot;</span>: <span class="hljs-literal">null</span>,<br>          <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>            <span class="hljs-string">&quot;scm&quot;</span>: <span class="hljs-string">&quot;1.music-video-timeline.video_timeline.video.181017.-295043608&quot;</span>,<br>            <span class="hljs-string">&quot;threadId&quot;</span>: <span class="hljs-string">&quot;R_VI_62_21ED2223ADDAA5FC9DD5FA596ADF9A11&quot;</span>,<br>            <span class="hljs-string">&quot;coverUrl&quot;</span>: <span class="hljs-string">&quot;https://p2.music.126.net/0AMmrU7zVrUHKFMrnG3DlQ==/109951163811950820.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">1080</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">1920</span>,<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;李宗盛 《为你我受冷风吹》现场版&quot;</span>,<br>            <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;李宗盛 《为你我受冷风吹》现场版 II 若是爱已不可为，你明白说吧无所谓。\n\n但愿我会就此放下往事，忘了过去有多美\n不盼缘尽仍留慈悲，虽然我曾经这样以为，我真的这样以为&quot;</span>,<br>            <span class="hljs-string">&quot;commentCount&quot;</span>: <span class="hljs-number">973</span>,<br>            <span class="hljs-string">&quot;shareCount&quot;</span>: <span class="hljs-number">5423</span>,<br>            <span class="hljs-string">&quot;resolutions&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">240</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">18230031</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">480</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">34373102</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">720</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">51666648</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">1080</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">92646784</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;creator&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;defaultAvatar&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-number">350000</span>,<br>              <span class="hljs-string">&quot;authStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;followed&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/GtIXN9Bpk7eGcGtXwMZfRA==/6634453162191982.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;accountStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;gender&quot;</span>: <span class="hljs-number">1</span>,<br>              <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-number">350500</span>,<br>              <span class="hljs-string">&quot;birthday&quot;</span>: <span class="hljs-number">680198400000</span>,<br>              <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-number">34652764</span>,<br>              <span class="hljs-string">&quot;userType&quot;</span>: <span class="hljs-number">201</span>,<br>              <span class="hljs-string">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;乌托邦电台&quot;</span>,<br>              <span class="hljs-string">&quot;signature&quot;</span>: <span class="hljs-string">&quot;知名音乐自媒体，新浪微博@乌托邦电台 （宣传、品牌合作请私信）&quot;</span>,<br>              <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;detailDescription&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId&quot;</span>: <span class="hljs-number">6634453162191982</span>,<br>              <span class="hljs-string">&quot;backgroundImgId&quot;</span>: <span class="hljs-number">109951163156242990</span>,<br>              <span class="hljs-string">&quot;backgroundUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/x2MDv3VHl-59oDc1MTYmPQ==/109951163156242986.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;authority&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;mutual&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;expertTags&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;experts&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;1&quot;</span>: <span class="hljs-string">&quot;音乐视频达人&quot;</span>,<br>                <span class="hljs-string">&quot;2&quot;</span>: <span class="hljs-string">&quot;华语音乐资讯达人&quot;</span><br>              &#125;,<br>              <span class="hljs-string">&quot;djStatus&quot;</span>: <span class="hljs-number">10</span>,<br>              <span class="hljs-string">&quot;vipType&quot;</span>: <span class="hljs-number">11</span>,<br>              <span class="hljs-string">&quot;remarkName&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;avatarImgIdStr&quot;</span>: <span class="hljs-string">&quot;6634453162191982&quot;</span>,<br>              <span class="hljs-string">&quot;backgroundImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951163156242986&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;urlInfo&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;21ED2223ADDAA5FC9DD5FA596ADF9A11&quot;</span>,<br>              <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://vodkgeyttp9.vod.126.net/vodkgeyttp8/GqyxO6ox_2271663003_uhd.mp4?ts=1602902982&amp;rid=3009063014E119FC636C42FBC02D0085&amp;rl=3&amp;rs=FWdhShbgJMLHExhqpgvURhgdlLEDOodn&amp;sign=edf69fa09a057febadb312d5f95f5d54&amp;ext=f0xw0mOJqGcf8yfMQn4khLo0vOAZ2Oret6FDS9VvANIOB778zOa0GNkWKbpJigsUUQr5jG+TbSVFBopWbJqfxOMWz6qSwzClvQwG9aI/msQPte7+2SQ2gGKFPduzNhXy/81Ne8nvhkod6vr0JXFqCRZ2dpI6sWzVchry/GdmoJaRw2s1XDLSAyQ1oqJLHpSvPOrqeMkLsgG48vej5u25h9Xk4Oz5m3oL3T7bKoVzbcDl3L+mCrSoqLHT+K/n0tyB&quot;</span>,<br>              <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">92646784</span>,<br>              <span class="hljs-string">&quot;validityTime&quot;</span>: <span class="hljs-number">1200</span>,<br>              <span class="hljs-string">&quot;needPay&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;payInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;r&quot;</span>: <span class="hljs-number">1080</span><br>            &#125;,<br>            <span class="hljs-string">&quot;videoGroup&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">8001</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;#热搜榜#&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">14133</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;李宗盛&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">254120</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;滚石唱片行&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">57110</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;饭拍现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">59101</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;华语现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">57108</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;流行现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">58100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;previewUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;previewDurationms&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;hasRelatedGameAd&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;markTypes&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;relateSong&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;为你我受冷风吹&quot;</span>,<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">257098</span>,<br>                <span class="hljs-string">&quot;pst&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;t&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;ar&quot;</span>: [<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">8336</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;林忆莲&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;<br>                ],<br>                <span class="hljs-string">&quot;alia&quot;</span>: [],<br>                <span class="hljs-string">&quot;pop&quot;</span>: <span class="hljs-number">100</span>,<br>                <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rt&quot;</span>: <span class="hljs-string">&quot;600902000007915837&quot;</span>,<br>                <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">8</span>,<br>                <span class="hljs-string">&quot;v&quot;</span>: <span class="hljs-number">37</span>,<br>                <span class="hljs-string">&quot;crbt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cf&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;al&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">25645</span>,<br>                  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Love, Sandy&quot;</span>,<br>                  <span class="hljs-string">&quot;picUrl&quot;</span>: <span class="hljs-string">&quot;http://p3.music.126.net/5qWWTetRGYBc-ktiJLZsCw==/109951163076136658.jpg&quot;</span>,<br>                  <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                  <span class="hljs-string">&quot;pic_str&quot;</span>: <span class="hljs-string">&quot;109951163076136658&quot;</span>,<br>                  <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-number">109951163076136660</span><br>                &#125;,<br>                <span class="hljs-string">&quot;dt&quot;</span>: <span class="hljs-number">259666</span>,<br>                <span class="hljs-string">&quot;h&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">320000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">10389464</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">27828</span><br>                &#125;,<br>                <span class="hljs-string">&quot;m&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">192000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">6233696</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">25262</span><br>                &#125;,<br>                <span class="hljs-string">&quot;l&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">4155812</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">23640</span><br>                &#125;,<br>                <span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cd&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-string">&quot;no&quot;</span>: <span class="hljs-number">6</span>,<br>                <span class="hljs-string">&quot;rtUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;ftype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtUrls&quot;</span>: [],<br>                <span class="hljs-string">&quot;djId&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;copyright&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;s_id&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rurl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;mst&quot;</span>: <span class="hljs-number">9</span>,<br>                <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">684010</span>,<br>                <span class="hljs-string">&quot;mv&quot;</span>: <span class="hljs-number">10929162</span>,<br>                <span class="hljs-string">&quot;publishTime&quot;</span>: <span class="hljs-number">788889600000</span>,<br>                <span class="hljs-string">&quot;privilege&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">257098</span>,<br>                  <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">8</span>,<br>                  <span class="hljs-string">&quot;payed&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;pl&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;dl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;sp&quot;</span>: <span class="hljs-number">7</span>,<br>                  <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;subp&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;cs&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;maxbr&quot;</span>: <span class="hljs-number">999000</span>,<br>                  <span class="hljs-string">&quot;fl&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;toast&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-number">68</span>,<br>                  <span class="hljs-string">&quot;preSell&quot;</span>: <span class="hljs-literal">false</span><br>                &#125;<br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;relatedInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;videoUserLiveInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;vid&quot;</span>: <span class="hljs-string">&quot;21ED2223ADDAA5FC9DD5FA596ADF9A11&quot;</span>,<br>            <span class="hljs-string">&quot;durationms&quot;</span>: <span class="hljs-number">226788</span>,<br>            <span class="hljs-string">&quot;playTime&quot;</span>: <span class="hljs-number">3291453</span>,<br>            <span class="hljs-string">&quot;praisedCount&quot;</span>: <span class="hljs-number">16422</span>,<br>            <span class="hljs-string">&quot;praised&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;subscribed&quot;</span>: <span class="hljs-literal">false</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;displayed&quot;</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>          <span class="hljs-string">&quot;extAlg&quot;</span>: <span class="hljs-literal">null</span>,<br>          <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>            <span class="hljs-string">&quot;scm&quot;</span>: <span class="hljs-string">&quot;1.music-video-timeline.video_timeline.video.181017.-295043608&quot;</span>,<br>            <span class="hljs-string">&quot;threadId&quot;</span>: <span class="hljs-string">&quot;R_VI_62_FBDD3F96E31C31E34553A5D06EC72DD7&quot;</span>,<br>            <span class="hljs-string">&quot;coverUrl&quot;</span>: <span class="hljs-string">&quot;https://p2.music.126.net/06lpFHx43xpOtn6OWhvOVw==/109951163956043222.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">720</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">1280</span>,<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;姚贝娜 - 惊鸿舞 &amp; 菩萨蛮&quot;</span>,<br>            <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;姚贝娜 - 惊鸿舞 &amp; 菩萨蛮\n这是什么人啊 现场唱成这样 而且每个现场都能唱成这样\n声音实在太美了 无暇的美&quot;</span>,<br>            <span class="hljs-string">&quot;commentCount&quot;</span>: <span class="hljs-number">147</span>,<br>            <span class="hljs-string">&quot;shareCount&quot;</span>: <span class="hljs-number">296</span>,<br>            <span class="hljs-string">&quot;resolutions&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">240</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">22971644</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">480</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">38609043</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">720</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">55890087</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;creator&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;defaultAvatar&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-number">1000000</span>,<br>              <span class="hljs-string">&quot;authStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;followed&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/veHKeJvsBRJcbWqSLDTadg==/109951164592779530.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;accountStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;gender&quot;</span>: <span class="hljs-number">1</span>,<br>              <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-number">1001600</span>,<br>              <span class="hljs-string">&quot;birthday&quot;</span>: <span class="hljs-number">2190902400000</span>,<br>              <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-number">43772457</span>,<br>              <span class="hljs-string">&quot;userType&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;野三坡坡坡&quot;</span>,<br>              <span class="hljs-string">&quot;signature&quot;</span>: <span class="hljs-string">&quot;wassup babe?&quot;</span>,<br>              <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;detailDescription&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId&quot;</span>: <span class="hljs-number">109951164592779540</span>,<br>              <span class="hljs-string">&quot;backgroundImgId&quot;</span>: <span class="hljs-number">109951165046711330</span>,<br>              <span class="hljs-string">&quot;backgroundUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/Jv20bPhLhiayfk1JNnlczw==/109951165046711333.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;authority&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;mutual&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;expertTags&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;experts&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;djStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;vipType&quot;</span>: <span class="hljs-number">11</span>,<br>              <span class="hljs-string">&quot;remarkName&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;avatarImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951164592779530&quot;</span>,<br>              <span class="hljs-string">&quot;backgroundImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951165046711333&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId_str&quot;</span>: <span class="hljs-string">&quot;109951164592779530&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;urlInfo&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;FBDD3F96E31C31E34553A5D06EC72DD7&quot;</span>,<br>              <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://vodkgeyttp9.vod.126.net/vodkgeyttp8/X0ooTNGS_2392962177_shd.mp4?ts=1602902982&amp;rid=3009063014E119FC636C42FBC02D0085&amp;rl=3&amp;rs=mhDBserywvdUZZAhEJKQGaKrPVuLvEQG&amp;sign=0adb09a3773e79555aa2891ef70fd8f5&amp;ext=f0xw0mOJqGcf8yfMQn4khLo0vOAZ2Oret6FDS9VvANIOB778zOa0GNkWKbpJigsUUQr5jG+TbSVFBopWbJqfxOMWz6qSwzClvQwG9aI/msQPte7+2SQ2gGKFPduzNhXy/81Ne8nvhkod6vr0JXFqCRZ2dpI6sWzVchry/GdmoJaRw2s1XDLSAyQ1oqJLHpSvPOrqeMkLsgG48vej5u25h9Xk4Oz5m3oL3T7bKoVzbcDl3L+mCrSoqLHT+K/n0tyB&quot;</span>,<br>              <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">55890087</span>,<br>              <span class="hljs-string">&quot;validityTime&quot;</span>: <span class="hljs-number">1200</span>,<br>              <span class="hljs-string">&quot;needPay&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;payInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;r&quot;</span>: <span class="hljs-number">720</span><br>            &#125;,<br>            <span class="hljs-string">&quot;videoGroup&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">31741</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;#『中华诗文』诗词浅唱，请君为我倾耳听…#&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">9102</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;演唱会&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">59101</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;华语现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">57108</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;流行现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">58100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;previewUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;previewDurationms&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;hasRelatedGameAd&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;markTypes&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;relateSong&quot;</span>: [],<br>            <span class="hljs-string">&quot;relatedInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;videoUserLiveInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;vid&quot;</span>: <span class="hljs-string">&quot;FBDD3F96E31C31E34553A5D06EC72DD7&quot;</span>,<br>            <span class="hljs-string">&quot;durationms&quot;</span>: <span class="hljs-number">238762</span>,<br>            <span class="hljs-string">&quot;playTime&quot;</span>: <span class="hljs-number">295066</span>,<br>            <span class="hljs-string">&quot;praisedCount&quot;</span>: <span class="hljs-number">1984</span>,<br>            <span class="hljs-string">&quot;praised&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;subscribed&quot;</span>: <span class="hljs-literal">false</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;displayed&quot;</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>          <span class="hljs-string">&quot;extAlg&quot;</span>: <span class="hljs-literal">null</span>,<br>          <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>            <span class="hljs-string">&quot;scm&quot;</span>: <span class="hljs-string">&quot;1.music-video-timeline.video_timeline.video.181017.-295043608&quot;</span>,<br>            <span class="hljs-string">&quot;threadId&quot;</span>: <span class="hljs-string">&quot;R_VI_62_DCFAFE6105D21B4A6D4530DBF923B939&quot;</span>,<br>            <span class="hljs-string">&quot;coverUrl&quot;</span>: <span class="hljs-string">&quot;https://p2.music.126.net/u9DiG5l16itCXQ-FSGh5WA==/109951164735069085.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">720</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">1280</span>,<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;胡彦斌 于文文吵架式演唱《爱之初体验》 嗓音满是洒脱与不羁！&quot;</span>,<br>            <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;胡彦斌  于文文吵架式演唱《爱之初体验》 嗓音满是洒脱与不羁！&quot;</span>,<br>            <span class="hljs-string">&quot;commentCount&quot;</span>: <span class="hljs-number">355</span>,<br>            <span class="hljs-string">&quot;shareCount&quot;</span>: <span class="hljs-number">2581</span>,<br>            <span class="hljs-string">&quot;resolutions&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">240</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">43626769</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">480</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">71560563</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">720</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">101293564</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;creator&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;defaultAvatar&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-number">650000</span>,<br>              <span class="hljs-string">&quot;authStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;followed&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/jGaSqoYu_r1ICvky2dimGw==/109951165391125525.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;accountStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;gender&quot;</span>: <span class="hljs-number">1</span>,<br>              <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-number">650100</span>,<br>              <span class="hljs-string">&quot;birthday&quot;</span>: <span class="hljs-number">923760000000</span>,<br>              <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-number">113164676</span>,<br>              <span class="hljs-string">&quot;userType&quot;</span>: <span class="hljs-number">200</span>,<br>              <span class="hljs-string">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;苏奕杰&quot;</span>,<br>              <span class="hljs-string">&quot;signature&quot;</span>: <span class="hljs-string">&quot;及时行乐. Vx:ways2050&quot;</span>,<br>              <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;detailDescription&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId&quot;</span>: <span class="hljs-number">109951165391125520</span>,<br>              <span class="hljs-string">&quot;backgroundImgId&quot;</span>: <span class="hljs-number">109951165381738600</span>,<br>              <span class="hljs-string">&quot;backgroundUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/gAD73rVHk2bdps4LkLHblw==/109951165381738588.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;authority&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;mutual&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;expertTags&quot;</span>: [<br>                <span class="hljs-string">&quot;华语&quot;</span>,<br>                <span class="hljs-string">&quot;流行&quot;</span>,<br>                <span class="hljs-string">&quot;欧美&quot;</span><br>              ],<br>              <span class="hljs-string">&quot;experts&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;2&quot;</span>: <span class="hljs-string">&quot;生活图文达人&quot;</span><br>              &#125;,<br>              <span class="hljs-string">&quot;djStatus&quot;</span>: <span class="hljs-number">10</span>,<br>              <span class="hljs-string">&quot;vipType&quot;</span>: <span class="hljs-number">11</span>,<br>              <span class="hljs-string">&quot;remarkName&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;avatarImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951165391125525&quot;</span>,<br>              <span class="hljs-string">&quot;backgroundImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951165381738588&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId_str&quot;</span>: <span class="hljs-string">&quot;109951165391125525&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;urlInfo&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;DCFAFE6105D21B4A6D4530DBF923B939&quot;</span>,<br>              <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://vodkgeyttp9.vod.126.net/vodkgeyttp8/HaQO68Lf_2914703451_shd.mp4?ts=1602902982&amp;rid=3009063014E119FC636C42FBC02D0085&amp;rl=3&amp;rs=wNMYRAHxSkfLdXyPxEzIXcgwpVWGpmkd&amp;sign=c8fe34edebf3f08120bc0e7411626dbd&amp;ext=f0xw0mOJqGcf8yfMQn4khLo0vOAZ2Oret6FDS9VvANIOB778zOa0GNkWKbpJigsUUQr5jG+TbSVFBopWbJqfxOMWz6qSwzClvQwG9aI/msQPte7+2SQ2gGKFPduzNhXy/81Ne8nvhkod6vr0JXFqCRZ2dpI6sWzVchry/GdmoJaRw2s1XDLSAyQ1oqJLHpSvPOrqeMkLsgG48vej5u25h9Xk4Oz5m3oL3T7bKoVzbcDl3L+mCrSoqLHT+K/n0tyB&quot;</span>,<br>              <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">101293564</span>,<br>              <span class="hljs-string">&quot;validityTime&quot;</span>: <span class="hljs-number">1200</span>,<br>              <span class="hljs-string">&quot;needPay&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;payInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;r&quot;</span>: <span class="hljs-number">720</span><br>            &#125;,<br>            <span class="hljs-string">&quot;videoGroup&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">8005</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;#收藏榜#&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">3101</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;综艺&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">4101</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;娱乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">72116</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;短片&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">23116</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐推荐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">58100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;previewUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;previewDurationms&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;hasRelatedGameAd&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;markTypes&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;relateSong&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;爱之初体验&quot;</span>,<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">185792</span>,<br>                <span class="hljs-string">&quot;pst&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;t&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;ar&quot;</span>: [<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">6453</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;张震岳&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;<br>                ],<br>                <span class="hljs-string">&quot;alia&quot;</span>: [],<br>                <span class="hljs-string">&quot;pop&quot;</span>: <span class="hljs-number">100</span>,<br>                <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rt&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">8</span>,<br>                <span class="hljs-string">&quot;v&quot;</span>: <span class="hljs-number">35</span>,<br>                <span class="hljs-string">&quot;crbt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cf&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;al&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">18885</span>,<br>                  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;滚石香港黄金十年 张震岳精选&quot;</span>,<br>                  <span class="hljs-string">&quot;picUrl&quot;</span>: <span class="hljs-string">&quot;http://p4.music.126.net/vxuO3LiU9M6U-6kmvV33XA==/109951163240612176.jpg&quot;</span>,<br>                  <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                  <span class="hljs-string">&quot;pic_str&quot;</span>: <span class="hljs-string">&quot;109951163240612176&quot;</span>,<br>                  <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-number">109951163240612180</span><br>                &#125;,<br>                <span class="hljs-string">&quot;dt&quot;</span>: <span class="hljs-number">243441</span>,<br>                <span class="hljs-string">&quot;h&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">320000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">9740582</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">22218</span><br>                &#125;,<br>                <span class="hljs-string">&quot;m&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">192000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">5844367</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">19650</span><br>                &#125;,<br>                <span class="hljs-string">&quot;l&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">3896259</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">18031</span><br>                &#125;,<br>                <span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cd&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-string">&quot;no&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-string">&quot;rtUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;ftype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtUrls&quot;</span>: [],<br>                <span class="hljs-string">&quot;djId&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;copyright&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;s_id&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rurl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;mst&quot;</span>: <span class="hljs-number">9</span>,<br>                <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">684010</span>,<br>                <span class="hljs-string">&quot;mv&quot;</span>: <span class="hljs-number">10929999</span>,<br>                <span class="hljs-string">&quot;publishTime&quot;</span>: <span class="hljs-number">1036080000000</span>,<br>                <span class="hljs-string">&quot;privilege&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">185792</span>,<br>                  <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">8</span>,<br>                  <span class="hljs-string">&quot;payed&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;pl&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;dl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;sp&quot;</span>: <span class="hljs-number">7</span>,<br>                  <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;subp&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;cs&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;maxbr&quot;</span>: <span class="hljs-number">999000</span>,<br>                  <span class="hljs-string">&quot;fl&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;toast&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-number">68</span>,<br>                  <span class="hljs-string">&quot;preSell&quot;</span>: <span class="hljs-literal">false</span><br>                &#125;<br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;relatedInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;videoUserLiveInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;vid&quot;</span>: <span class="hljs-string">&quot;DCFAFE6105D21B4A6D4530DBF923B939&quot;</span>,<br>            <span class="hljs-string">&quot;durationms&quot;</span>: <span class="hljs-number">311728</span>,<br>            <span class="hljs-string">&quot;playTime&quot;</span>: <span class="hljs-number">1205309</span>,<br>            <span class="hljs-string">&quot;praisedCount&quot;</span>: <span class="hljs-number">7077</span>,<br>            <span class="hljs-string">&quot;praised&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;subscribed&quot;</span>: <span class="hljs-literal">false</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;displayed&quot;</span>: <span class="hljs-literal">false</span>,<br>          <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>          <span class="hljs-string">&quot;extAlg&quot;</span>: <span class="hljs-literal">null</span>,<br>          <span class="hljs-string">&quot;data&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;onlineHotGroup&quot;</span>,<br>            <span class="hljs-string">&quot;scm&quot;</span>: <span class="hljs-string">&quot;1.music-video-timeline.video_timeline.video.181017.-295043608&quot;</span>,<br>            <span class="hljs-string">&quot;threadId&quot;</span>: <span class="hljs-string">&quot;R_VI_62_A8DC4F82473F218B6F4A7560110BDF72&quot;</span>,<br>            <span class="hljs-string">&quot;coverUrl&quot;</span>: <span class="hljs-string">&quot;https://p2.music.126.net/54CsmlqzBwnGW3xUGI4ahw==/109951163804307053.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-number">1080</span>,<br>            <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-number">1920</span>,<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;本可成为张学友，却一心想当周星驰&quot;</span>,<br>            <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;本可成为张学友，却一心想当周星驰，他的这首歌，唱哭无数人&quot;</span>,<br>            <span class="hljs-string">&quot;commentCount&quot;</span>: <span class="hljs-number">1072</span>,<br>            <span class="hljs-string">&quot;shareCount&quot;</span>: <span class="hljs-number">988</span>,<br>            <span class="hljs-string">&quot;resolutions&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">240</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">39751840</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">480</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">69914355</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">720</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">110467469</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;resolution&quot;</span>: <span class="hljs-number">1080</span>,<br>                <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">129835812</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;creator&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;defaultAvatar&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-number">110000</span>,<br>              <span class="hljs-string">&quot;authStatus&quot;</span>: <span class="hljs-number">1</span>,<br>              <span class="hljs-string">&quot;followed&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;avatarUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/ANPz4SzgZsnR69qHSMtz_w==/109951164270832395.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;accountStatus&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;gender&quot;</span>: <span class="hljs-number">1</span>,<br>              <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-number">110101</span>,<br>              <span class="hljs-string">&quot;birthday&quot;</span>: <span class="hljs-number">720353563017</span>,<br>              <span class="hljs-string">&quot;userId&quot;</span>: <span class="hljs-number">106810354</span>,<br>              <span class="hljs-string">&quot;userType&quot;</span>: <span class="hljs-number">4</span>,<br>              <span class="hljs-string">&quot;nickname&quot;</span>: <span class="hljs-string">&quot;中国音乐人&quot;</span>,<br>              <span class="hljs-string">&quot;signature&quot;</span>: <span class="hljs-string">&quot;我是偷影子的人，\n随风化成一朵云。&quot;</span>,<br>              <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;detailDescription&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId&quot;</span>: <span class="hljs-number">109951164270832400</span>,<br>              <span class="hljs-string">&quot;backgroundImgId&quot;</span>: <span class="hljs-number">109951164271452850</span>,<br>              <span class="hljs-string">&quot;backgroundUrl&quot;</span>: <span class="hljs-string">&quot;http://p1.music.126.net/erbAKtwUefQuR1CJdEverQ==/109951164271452845.jpg&quot;</span>,<br>              <span class="hljs-string">&quot;authority&quot;</span>: <span class="hljs-number">0</span>,<br>              <span class="hljs-string">&quot;mutual&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;expertTags&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;experts&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;djStatus&quot;</span>: <span class="hljs-number">10</span>,<br>              <span class="hljs-string">&quot;vipType&quot;</span>: <span class="hljs-number">11</span>,<br>              <span class="hljs-string">&quot;remarkName&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;avatarImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951164270832395&quot;</span>,<br>              <span class="hljs-string">&quot;backgroundImgIdStr&quot;</span>: <span class="hljs-string">&quot;109951164271452845&quot;</span>,<br>              <span class="hljs-string">&quot;avatarImgId_str&quot;</span>: <span class="hljs-string">&quot;109951164270832395&quot;</span><br>            &#125;,<br>            <span class="hljs-string">&quot;urlInfo&quot;</span>: &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;A8DC4F82473F218B6F4A7560110BDF72&quot;</span>,<br>              <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://vodkgeyttp9.vod.126.net/vodkgeyttp8/MIsdYPUt_2258957983_uhd.mp4?ts=1602902982&amp;rid=3009063014E119FC636C42FBC02D0085&amp;rl=3&amp;rs=SwzlGFIuaohHgbEQMUILxWTJpVDNoSRW&amp;sign=dc2ef4fa5c5481ce1b984569b5e713aa&amp;ext=f0xw0mOJqGcf8yfMQn4khLo0vOAZ2Oret6FDS9VvANIOB778zOa0GNkWKbpJigsUUQr5jG+TbSVFBopWbJqfxOMWz6qSwzClvQwG9aI/msQPte7+2SQ2gGKFPduzNhXy/81Ne8nvhkod6vr0JXFqCRZ2dpI6sWzVchry/GdmoJaRw2s1XDLSAyQ1oqJLHpSvPOrqeMkLsgG48vej5u25h9Xk4Oz5m3oL3T7bKoVzbcDl3L+mCrSoqLHT+K/n0tyB&quot;</span>,<br>              <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">129835812</span>,<br>              <span class="hljs-string">&quot;validityTime&quot;</span>: <span class="hljs-number">1200</span>,<br>              <span class="hljs-string">&quot;needPay&quot;</span>: <span class="hljs-literal">false</span>,<br>              <span class="hljs-string">&quot;payInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>              <span class="hljs-string">&quot;r&quot;</span>: <span class="hljs-number">1080</span><br>            &#125;,<br>            <span class="hljs-string">&quot;videoGroup&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: -<span class="hljs-number">22293</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;#「粤语」简单情歌，深情粤语#&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">57105</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;粤语现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">57110</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;饭拍现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">57108</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;流行现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">58100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;现场&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;,<br>              &#123;<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5100</span>,<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;音乐&quot;</span>,<br>                <span class="hljs-string">&quot;alg&quot;</span>: <span class="hljs-string">&quot;groupTagRank&quot;</span><br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;previewUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;previewDurationms&quot;</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-string">&quot;hasRelatedGameAd&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;markTypes&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;relateSong&quot;</span>: [<br>              &#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;无赖&quot;</span>,<br>                <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">191171</span>,<br>                <span class="hljs-string">&quot;pst&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;t&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;ar&quot;</span>: [<br>                  &#123;<br>                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">6473</span>,<br>                    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;郑中基&quot;</span>,<br>                    <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                    <span class="hljs-string">&quot;alias&quot;</span>: []<br>                  &#125;<br>                ],<br>                <span class="hljs-string">&quot;alia&quot;</span>: [],<br>                <span class="hljs-string">&quot;pop&quot;</span>: <span class="hljs-number">100</span>,<br>                <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rt&quot;</span>: <span class="hljs-string">&quot;600902000005652669&quot;</span>,<br>                <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">8</span>,<br>                <span class="hljs-string">&quot;v&quot;</span>: <span class="hljs-number">108</span>,<br>                <span class="hljs-string">&quot;crbt&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cf&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>                <span class="hljs-string">&quot;al&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">19313</span>,<br>                  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;正宗K&quot;</span>,<br>                  <span class="hljs-string">&quot;picUrl&quot;</span>: <span class="hljs-string">&quot;http://p4.music.126.net/2vFBKWUmF_jiWGaBgO6RaA==/17648261137761966.jpg&quot;</span>,<br>                  <span class="hljs-string">&quot;tns&quot;</span>: [],<br>                  <span class="hljs-string">&quot;pic_str&quot;</span>: <span class="hljs-string">&quot;17648261137761966&quot;</span>,<br>                  <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-number">17648261137761966</span><br>                &#125;,<br>                <span class="hljs-string">&quot;dt&quot;</span>: <span class="hljs-number">243827</span>,<br>                <span class="hljs-string">&quot;h&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">320000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">9756256</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">18600</span><br>                &#125;,<br>                <span class="hljs-string">&quot;m&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">192000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">5853771</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">16000</span><br>                &#125;,<br>                <span class="hljs-string">&quot;l&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;br&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;fid&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">3902528</span>,<br>                  <span class="hljs-string">&quot;vd&quot;</span>: -<span class="hljs-number">14500</span><br>                &#125;,<br>                <span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;cd&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>                <span class="hljs-string">&quot;no&quot;</span>: <span class="hljs-number">3</span>,<br>                <span class="hljs-string">&quot;rtUrl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;ftype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtUrls&quot;</span>: [],<br>                <span class="hljs-string">&quot;djId&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;copyright&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-string">&quot;s_id&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rtype&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;rurl&quot;</span>: <span class="hljs-literal">null</span>,<br>                <span class="hljs-string">&quot;mst&quot;</span>: <span class="hljs-number">9</span>,<br>                <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">7002</span>,<br>                <span class="hljs-string">&quot;mv&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;publishTime&quot;</span>: <span class="hljs-number">1143849600000</span>,<br>                <span class="hljs-string">&quot;privilege&quot;</span>: &#123;<br>                  <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">191171</span>,<br>                  <span class="hljs-string">&quot;fee&quot;</span>: <span class="hljs-number">8</span>,<br>                  <span class="hljs-string">&quot;payed&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;st&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;pl&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;dl&quot;</span>: <span class="hljs-number">0</span>,<br>                  <span class="hljs-string">&quot;sp&quot;</span>: <span class="hljs-number">7</span>,<br>                  <span class="hljs-string">&quot;cp&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;subp&quot;</span>: <span class="hljs-number">1</span>,<br>                  <span class="hljs-string">&quot;cs&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;maxbr&quot;</span>: <span class="hljs-number">999000</span>,<br>                  <span class="hljs-string">&quot;fl&quot;</span>: <span class="hljs-number">128000</span>,<br>                  <span class="hljs-string">&quot;toast&quot;</span>: <span class="hljs-literal">false</span>,<br>                  <span class="hljs-string">&quot;flag&quot;</span>: <span class="hljs-number">256</span>,<br>                  <span class="hljs-string">&quot;preSell&quot;</span>: <span class="hljs-literal">false</span><br>                &#125;<br>              &#125;<br>            ],<br>            <span class="hljs-string">&quot;relatedInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;videoUserLiveInfo&quot;</span>: <span class="hljs-literal">null</span>,<br>            <span class="hljs-string">&quot;vid&quot;</span>: <span class="hljs-string">&quot;A8DC4F82473F218B6F4A7560110BDF72&quot;</span>,<br>            <span class="hljs-string">&quot;durationms&quot;</span>: <span class="hljs-number">291834</span>,<br>            <span class="hljs-string">&quot;playTime&quot;</span>: <span class="hljs-number">3701754</span>,<br>            <span class="hljs-string">&quot;praisedCount&quot;</span>: <span class="hljs-number">10838</span>,<br>            <span class="hljs-string">&quot;praised&quot;</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&quot;subscribed&quot;</span>: <span class="hljs-literal">false</span><br>          &#125;<br>        &#125;<br>      ];<br>      <span class="hljs-keyword">let</span> videoList = <span class="hljs-built_in">this</span>.data.videoList;<br>      <span class="hljs-comment">// 将视频最新的数据更新原有视频列表数据中</span><br>      videoList.push(...newVideoList);<span class="hljs-comment">//...表示将数组拆包成对象</span><br>      <span class="hljs-built_in">this</span>.setData(&#123;<br>        videoList<br>      &#125;)<br></code></pre></td></tr></table></figure><h2 id="十二、分享功能实现"><a href="#十二、分享功能实现" class="headerlink" title="十二、分享功能实现"></a>十二、分享功能实现</h2><p>在页面的js文件中已经定义了分享功能函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 用户点击右上角分享</span><br><span class="hljs-comment">*/</span><br><span class="hljs-attr">onShareAppMessage</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>详情参考开发文档 –&gt; 框架 –&gt; 框架接口 –&gt; 页面 –&gt; Page中的onShareAppMessage()函数</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html">开发文档链接</a></p><h3 id="1-页面分享"><a href="#1-页面分享" class="headerlink" title="1.页面分享"></a>1.页面分享</h3><p>from的值是menu</p><h3 id="2-按钮分享"><a href="#2-按钮分享" class="headerlink" title="2.按钮分享"></a>2.按钮分享</h3><p>from的值是button</p><p>button组件添加属性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">open-type=<span class="hljs-string">&quot;share&quot;</span><br></code></pre></td></tr></table></figure><h3 id="3-示例代码"><a href="#3-示例代码" class="headerlink" title="3.示例代码"></a>3.示例代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 用户点击右上角分享</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-attr">onShareAppMessage</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">&#123;<span class="hljs-keyword">from</span>,target&#125;</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;from：&#x27;</span> + <span class="hljs-keyword">from</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">from</span> === <span class="hljs-string">&#x27;button&#x27;</span>)&#123;<br>        <span class="hljs-keyword">return</span>&#123;<br>            <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;来自按钮的转发&#x27;</span>,<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/pages/menu/menu&#x27;</span>,<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span>&#123;<br>            <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;来自按钮的转发&#x27;</span>,<br>            <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/pages/menu/menu&#x27;</span>,<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="十三、日期"><a href="#十三、日期" class="headerlink" title="十三、日期"></a>十三、日期</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">data:&#123;<br>    <span class="hljs-attr">day</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">//天</span><br>    <span class="hljs-attr">month</span>: <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment">//月</span><br>&#125;<br><br><span class="hljs-built_in">this</span>.setData(&#123;<br>    <span class="hljs-attr">day</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getDate(),<br>    <span class="hljs-attr">month</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getMonth() + <span class="hljs-number">1</span><br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="十四、路由跳转"><a href="#十四、路由跳转" class="headerlink" title="十四、路由跳转"></a>十四、路由跳转</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">onLoad:<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">options</span>)</span>&#123;<br>    <span class="hljs-comment">//options：用于接收路由跳转的query参数</span><br>    <span class="hljs-comment">//原生小程序中路由传参，对参数的长度有限制，如果参数长度过长会自动截取舍弃掉</span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="第四章-拓展内容"><a href="#第四章-拓展内容" class="headerlink" title="第四章 拓展内容"></a>第四章 拓展内容</h1><h2 id="一、事件流的三个阶段"><a href="#一、事件流的三个阶段" class="headerlink" title="一、事件流的三个阶段"></a>一、事件流的三个阶段</h2><ol><li>捕获：从外向内</li><li>执行目标阶段</li><li>冒泡：从内向外</li></ol><h2 id="二、事件委托"><a href="#二、事件委托" class="headerlink" title="二、事件委托"></a>二、事件委托</h2><ol><li>什么是事件委托<ol><li>将子元素的事件委托（绑定）给父元素</li></ol></li><li>事件委托的好处<ol><li>减少绑定的次数</li><li>后期新添加的元素也可以享用之前委托的事件</li></ol></li><li>事件委托的原理<ol><li>冒泡</li></ol></li><li>触发事件的是谁<ol><li>子元素</li></ol></li><li>如何找到触发事件的对象<ol><li>event.target</li></ol></li><li>currentTarget  VS target<ol><li>currentTarget 要求绑定事件的元素一定是触发事件的元素</li><li>target绑定事件的元素不一定是触发事件的元素</li></ol></li></ol><h2 id="三、定义事件相关"><a href="#三、定义事件相关" class="headerlink" title="三、定义事件相关"></a>三、定义事件相关</h2><h3 id="1-分类"><a href="#1-分类" class="headerlink" title="1.分类"></a>1.分类</h3><ol><li>标准DOM事件</li><li>自定义事件</li></ol><h3 id="2-标准DOM事件"><a href="#2-标准DOM事件" class="headerlink" title="2.标准DOM事件"></a>2.标准DOM事件</h3><ol><li>举例：click，input，。。。</li><li>事件名固定，事件由浏览器触发</li></ol><h3 id="3-自定义事件"><a href="#3-自定义事件" class="headerlink" title="3.自定义事件"></a>3.自定义事件</h3><ol><li><p>绑定事件</p><p>1.1 事件名</p><p>1.2 事件的回调</p><p>1.3 订阅方：PubSub.subscribe(事件名，事件的回调)</p><p>1.4 订阅方是接受数据的一方</p></li><li><p>触发事件</p><p>2.1 事件名</p><p>2.2 提供事件参数对象，等同于原生事件的event对象</p><p>2.3 发布方：PubSub.publish(事件名，提供的数据)</p><p>2.4 发布方是提供数据的一方</p></li></ol><h1 id="第五章-注意事项"><a href="#第五章-注意事项" class="headerlink" title="第五章 注意事项"></a>第五章 注意事项</h1><h2 id="一、页面单独设置标题"><a href="#一、页面单独设置标题" class="headerlink" title="一、页面单独设置标题"></a>一、页面单独设置标题</h2><p>在需要更改的页面的.json文件中添加如下代码（以登陆页面为例）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>  <span class="hljs-string">&quot;navigationBarTitleText&quot;</span>: <span class="hljs-string">&quot;登录中心&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在app.json文件中添加页面的路径，如果不添加路径，标题不显示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&quot;pages&quot;</span>: [<br>        <span class="hljs-string">&quot;pages/login/login&quot;</span>        <span class="hljs-comment">//要添加页面的路径</span><br>    ],<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>资源链接整理</title>
    <link href="/2021/10/11/%E8%B5%84%E6%BA%90%E9%93%BE%E6%8E%A5%E6%95%B4%E7%90%86/"/>
    <url>/2021/10/11/%E8%B5%84%E6%BA%90%E9%93%BE%E6%8E%A5%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="资源链接整理"><a href="#资源链接整理" class="headerlink" title="资源链接整理"></a>资源链接整理</h1><h2 id="软件模块"><a href="#软件模块" class="headerlink" title="软件模块"></a>软件模块</h2><h2 id="Java学习模块"><a href="#Java学习模块" class="headerlink" title="Java学习模块"></a>Java学习模块</h2><h4 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h4><p>[jar包获取](<a href="https://github.com/mybatis/mybatis-3/releases">Releases · mybatis/mybatis-3 (github.com)</a>)</p><h2 id="电影模块"><a href="#电影模块" class="headerlink" title="电影模块"></a>电影模块</h2>]]></content>
    
    
    <categories>
      
      <category>Other</category>
      
    </categories>
    
    
    <tags>
      
      <tag>资源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网站添加时间轴</title>
    <link href="/2021/09/30/%E7%BD%91%E7%AB%99%E6%B7%BB%E5%8A%A0%E6%97%B6%E9%97%B4%E8%BD%B4/"/>
    <url>/2021/09/30/%E7%BD%91%E7%AB%99%E6%B7%BB%E5%8A%A0%E6%97%B6%E9%97%B4%E8%BD%B4/</url>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="时间轴代码"><a href="#时间轴代码" class="headerlink" title="时间轴代码"></a>时间轴代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ht">&lt;div id=&quot;timeline&quot;&gt;<br>&lt;ol&gt;<br>&lt;li&gt;&lt;b&gt;2021年8月&lt;/b&gt;杭州市级企业研发中心&lt;/li&gt;<br>&lt;li&gt;&lt;b&gt;2019年11月&lt;/b&gt;国家高新技术企业通过复审&lt;/li&gt;<br>&lt;li&gt;&lt;b&gt;2018年5月&lt;/b&gt;公司厂房扩建及搬迁&lt;/li&gt;<br>&lt;li&gt;&lt;b&gt;2016年11月&lt;/b&gt;国家高新技术企业&lt;/li&gt;<br>&lt;li&gt;&lt;b&gt;2015年8月&lt;/b&gt;POCT设备研发平台搭建&lt;/li&gt;<br>&lt;li&gt;&lt;b&gt;2013年10月&lt;/b&gt;浙江省科技型中小企业&lt;/li&gt;<br>&lt;li&gt;&lt;b&gt;2012年6月&lt;/b&gt;第一份发明专利授权&lt;/li&gt;<br>&lt;li&gt;&lt;b&gt;2010年11月&lt;/b&gt;通过ISO9001:2008体系&lt;/li&gt;<br>&lt;li&gt;&lt;b&gt;2009年5月&lt;/b&gt;公司成立&lt;/li&gt;<br>&lt;/ol&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><h1 id="样式代码"><a href="#样式代码" class="headerlink" title="样式代码"></a>样式代码</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*网站时间轴*/</span><br><span class="hljs-selector-id">#timeline</span> <span class="hljs-selector-tag">ol</span>&#123;<br><span class="hljs-attribute">list-style</span>:none;<br><span class="hljs-attribute">margin-left</span>:<span class="hljs-number">36px</span>;<br><span class="hljs-attribute">padding-left</span>:<span class="hljs-number">14px</span>;<br><span class="hljs-attribute">border-left</span>:<span class="hljs-number">2px</span> solid <span class="hljs-number">#eee</span>;<br><span class="hljs-attribute">font-size</span>:<span class="hljs-number">1.8rem</span>;<br><span class="hljs-attribute">color</span>:<span class="hljs-number">#666</span>;<br>&#125;<br><br><span class="hljs-selector-id">#timeline</span> <span class="hljs-selector-tag">b</span>&#123;<br><span class="hljs-attribute">font-size</span>:<span class="hljs-number">1.2rem</span>;<br><span class="hljs-attribute">font-weight</span>:normal;<br><span class="hljs-attribute">color</span>:<span class="hljs-number">#999</span>;<br><span class="hljs-attribute">display</span>:block;<br><span class="hljs-attribute">position</span>:relative;<br><span class="hljs-attribute">margin-bottom</span>:<span class="hljs-number">5px</span>;<br>&#125;<br><br><span class="hljs-selector-id">#timeline</span> <span class="hljs-selector-tag">b</span><span class="hljs-selector-pseudo">::after</span>&#123;<br><span class="hljs-attribute">position</span>:absolute;<br><span class="hljs-attribute">top</span>:<span class="hljs-number">6px</span>;<br><span class="hljs-attribute">left</span>:-<span class="hljs-number">22px</span>;<br><span class="hljs-attribute">content</span>:<span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-attribute">width</span>:<span class="hljs-number">14px</span>;<br><span class="hljs-attribute">height</span>:<span class="hljs-number">14px</span>;<br><span class="hljs-attribute">border-radius</span>:<span class="hljs-number">50%</span>;<br><span class="hljs-attribute">background-color</span>:<span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">border</span>:<span class="hljs-number">2px</span> solid <span class="hljs-number">#ccc</span>;<br><span class="hljs-attribute">box-shadow</span>:<br><span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">1</span>),<br>-<span class="hljs-number">2px</span> -<span class="hljs-number">2px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-selector-id">#timeline</span> <span class="hljs-selector-tag">li</span>&#123;<br><span class="hljs-attribute">list-style</span>:none;<br><span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;<br><span class="hljs-attribute">line-height</span>:<span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-id">#timeline</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br><span class="hljs-attribute">color</span>:<span class="hljs-number">#000</span>;<br>&#125;<br><br><span class="hljs-selector-id">#timeline</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">b</span><span class="hljs-selector-pseudo">::after</span>&#123;<br><span class="hljs-attribute">border-color</span>:<span class="hljs-number">#00f</span>;<br>&#125;<br><br><span class="hljs-selector-id">#timeline</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-tag">b</span>&#123;<br><span class="hljs-attribute">color</span>:<span class="hljs-number">#00f</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Wordpress</category>
      
    </categories>
    
    
    <tags>
      
      <tag>wordpress</tag>
      
      <tag>发展史</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/29/hello-world/"/>
    <url>/2021/07/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pycharm内如何打包py项目为.exe可执行文件</title>
    <link href="/2021/07/29/pycharm%E5%86%85%E5%A6%82%E4%BD%95%E6%89%93%E5%8C%85py%E9%A1%B9%E7%9B%AE%E4%B8%BA.exe%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/"/>
    <url>/2021/07/29/pycharm%E5%86%85%E5%A6%82%E4%BD%95%E6%89%93%E5%8C%85py%E9%A1%B9%E7%9B%AE%E4%B8%BA.exe%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="一、打包背景及项目结构"><a href="#一、打包背景及项目结构" class="headerlink" title="一、打包背景及项目结构"></a>一、打包背景及项目结构</h2><p>借助pycharm工具，使用tkinter模块制作了一个窗体程序（python3.7），想要打包成为一个可以直接运行使用的应用。让使用者即使在没有安装python环境的情况下也能使用该程序，现将打包步骤整理如下，便于日后查阅。</p><p>参考链接：<a href="https://blog.csdn.net/weixin_41870706/article/details/101780731?utm_source=app&amp;app_version=4.15.1">https://blog.csdn.net/weixin_41870706/article/details/101780731?utm_source=app&amp;app_version=4.15.1</a></p><p>我的项目的结构如下：</p><p><img src="image-20210914164228995.png" alt="image-20210914164228995"></p><h2 id="二、具体步骤"><a href="#二、具体步骤" class="headerlink" title="二、具体步骤"></a>二、具体步骤</h2><h3 id="1、所需打包命令"><a href="#1、所需打包命令" class="headerlink" title="1、所需打包命令"></a>1、所需打包命令</h3><h4 id="（1）pyinstaller"><a href="#（1）pyinstaller" class="headerlink" title="（1）pyinstaller"></a>（1）pyinstaller</h4><h4 id="（2）pyi-makespec-w-xxx-py"><a href="#（2）pyi-makespec-w-xxx-py" class="headerlink" title="（2）pyi-makespec -w xxx.py"></a>（2）pyi-makespec -w xxx.py</h4><h4 id="（3）pyinstaller-D-w-xxx-spec"><a href="#（3）pyinstaller-D-w-xxx-spec" class="headerlink" title="（3）pyinstaller -D -w xxx.spec"></a>（3）pyinstaller -D -w xxx.spec</h4><h3 id="2、具体操作"><a href="#2、具体操作" class="headerlink" title="2、具体操作"></a>2、具体操作</h3><h4 id="（1）安装pyinstaller"><a href="#（1）安装pyinstaller" class="headerlink" title="（1）安装pyinstaller"></a>（1）安装pyinstaller</h4><ul><li><p>点击pycharm下方的Terminal</p></li><li><p>输入命令pip install pyinstaller</p><p>国内源地址：</p><ul><li>pip install -i <a href="https://pypi.douban.com/simple/">https://pypi.douban.com/simple/</a> pyinstaller #豆瓣源</li><li>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> pyinstaller #清华源</li></ul></li></ul><h4 id="（2）生成spec文件，并添加内容"><a href="#（2）生成spec文件，并添加内容" class="headerlink" title="（2）生成spec文件，并添加内容"></a>（2）生成spec文件，并添加内容</h4><ul><li>继续输入目录 pyi-makespec -w E:\pythonProjects\wz_cal\foo\main.py  （ps：入口程序的绝对路径）</li><li><img src="image-20210914165956196.png" alt="image-20210914165956196">成功之后会显示以上内容</li><li>在入口程序的同级目录下会出现，main.spec文件，双击打开进行编辑，主要编辑以下三个地方</li><li><img src="image-20210914171629045.png" alt="image-20210914171629045"></li></ul><h4 id="（3）打包-exe文件"><a href="#（3）打包-exe文件" class="headerlink" title="（3）打包.exe文件"></a>（3）打包.exe文件</h4><ul><li>输入命令 pyinstaller -D -w E:\pythonProjects\wz_cal\foo\main.spec（ps：main.spec的绝对路径）</li><li>成功标志：Building EXE from EXE-00.toc completed successfully.</li></ul><h4 id="（4）运行使用"><a href="#（4）运行使用" class="headerlink" title="（4）运行使用"></a>（4）运行使用</h4><ul><li>在项目根目录下有一个dist文件夹，里面是main.exe文件，双击即可运行。</li><li>该exe文件可以独立运行</li></ul>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>py打包</tag>
      
      <tag>.exe</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python之重启程序</title>
    <link href="/2021/07/29/python%E4%B9%8B%E9%87%8D%E5%90%AF%E7%A8%8B%E5%BA%8F/"/>
    <url>/2021/07/29/python%E4%B9%8B%E9%87%8D%E5%90%AF%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> configparser<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-comment"># 重启程序</span><br>python = sys.executable<br>os.execl(python, python, *sys.argv)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>重启程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown快速入门</title>
    <link href="/2021/07/29/Markdown%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <url>/2021/07/29/Markdown%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1.代码块"></a>1.代码块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 语言">//语法：```java<br></code></pre></td></tr></table></figure><h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><p>一共六级，用#+空格表示，数量即标题的级别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题    <br></code></pre></td></tr></table></figure><h2 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//斜体</span><br>*斜体的内容*<br><span class="hljs-comment">//加粗</span><br>**加粗的内容**<br><span class="hljs-comment">//斜体加粗</span><br>***斜体加粗的内容***<br><span class="hljs-comment">//高亮</span><br>==高亮的内容==<br><span class="hljs-comment">//上标</span><br>我是^上标内容^<br><span class="hljs-comment">//下标</span><br>我是~下标内容~<br><span class="hljs-comment">//删除线</span><br>~~删除的内容~~<br><br></code></pre></td></tr></table></figure><p><em>斜体的内容</em></p><p><strong>加粗的内容</strong></p><p><em><strong>斜体加粗的内容</strong></em></p><p>==高亮的内容==</p><p>我是^上标内容^</p><p>我是<del>下标内容</del></p><p><del>删除的内容</del></p><h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//语法</span><br>&gt;引用<span class="hljs-number">1</span><br>&gt;&gt;引用<span class="hljs-number">2</span><br>&gt;&gt;&gt;引用<span class="hljs-number">3</span>    <br></code></pre></td></tr></table></figure><blockquote><p>引用1</p><blockquote><p>引用2</p><blockquote><p>引用3  </p></blockquote></blockquote></blockquote><h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">---<br>***    <br></code></pre></td></tr></table></figure><hr><hr><h2 id="6-图片"><a href="#6-图片" class="headerlink" title="6.图片"></a>6.图片</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//语法</span><br>![名称](地址)<br></code></pre></td></tr></table></figure><p><img src="https://www.deepcre.cn/wp-content/uploads/2021/08/colloidal-gold-trips-quantitative-reader-1.png" alt="我的图片"></p><h2 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7.超链接"></a>7.超链接</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//语法</span><br>[名称](地址)<br></code></pre></td></tr></table></figure><p><a href="%5B%E3%80%90%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E3%80%9115%E5%88%86%E9%92%9F%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BMarkdown%E6%95%99%E7%A8%8B%EF%BC%8C%E7%BB%9D%E5%AF%B9%E7%B2%BE%E5%93%81%EF%BC%8C%E4%BC%A0%E8%AF%B4%E4%B8%AD%E7%9A%84%E8%AE%B0%E7%AC%94%E8%AE%B0%EF%BC%8C%E5%86%99%E5%8D%9A%E5%AE%A2%EF%BC%8C%E7%A8%8B%E5%BA%8F%E5%91%98%E8%A6%81%E5%BF%85%E5%A4%87%EF%BC%8C%E7%AE%80%E5%8D%95%EF%BC%8C%E6%98%93%E4%B8%8A%E6%89%8B%EF%BC%8C%E7%BE%8E%E8%A7%82_%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9_bilibili%5D(https://www.bilibili.com/video/BV1hJ411X75X?from=search&seid=2747698852921965530)">快速入门Markdown</a></p><h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//语法（目录前面有一个空格）</span><br><span class="hljs-comment">//无序列表</span><br>- 目录<span class="hljs-number">1</span><br>- 目录<span class="hljs-number">2</span>    <br><span class="hljs-comment">//有序列表</span><br><span class="hljs-number">1.</span> 目录<span class="hljs-number">1</span><br><span class="hljs-number">2.</span> 目录<span class="hljs-number">2</span>    <br></code></pre></td></tr></table></figure><p>//无序列表</p><ul><li>目录1</li><li>目录2</li></ul><p>//有序列表</p><ol><li>目录1</li><li>目录2</li></ol><h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9.表格"></a>9.表格</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//右键选择插入表格</span><br></code></pre></td></tr></table></figure><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>上手md格式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python学习之Tkinter</title>
    <link href="/2021/07/29/python%E5%AD%A6%E4%B9%A0%E4%B9%8BTkinter/"/>
    <url>/2021/07/29/python%E5%AD%A6%E4%B9%A0%E4%B9%8BTkinter/</url>
    
    <content type="html"><![CDATA[<h2 id="三种布局方式"><a href="#三种布局方式" class="headerlink" title="三种布局方式"></a>三种布局方式</h2><p>在tkinter中有三种布局方法，pack、grid、place</p><h3 id="1-pack"><a href="#1-pack" class="headerlink" title="1. pack"></a>1. pack</h3><p>pack方法为自适应布局方法，即根据控件大小和顺序来自动实现布局，默认让一个控件独立占一行并居中显示，也可以加入参数调整位置。</p><p>基本语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pytho">ui.pack() #ui为控件名<br></code></pre></td></tr></table></figure><p>或者：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs py">ui1.pack(side=<span class="hljs-string">&#x27;LEFT&#x27;</span>) <span class="hljs-comment">#设定ui显示在窗体左侧，这时右侧也需要有一个控件</span><br>ui2.pack(side=<span class="hljs-string">&#x27;RIGHT&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="2-grid"><a href="#2-grid" class="headerlink" title="2. grid"></a>2. grid</h3><p>grid方法为网格布局，即基于设定将窗体分割为相等大小的单元格，用行和列位置来布局控件.</p><p>基本语法为：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs py">ui.grid(row=m,column=n)   <span class="hljs-comment">#m,n为设定控件所在的行数和列数位置</span><br></code></pre></td></tr></table></figure><h3 id="3-place"><a href="#3-place" class="headerlink" title="3. place"></a>3. place</h3><p>place方法为空间布局，可以自由设定控件元素的起始x和y坐标.</p><p>基本语法为：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs py">ui.place(x=<span class="hljs-number">100</span>,y=<span class="hljs-number">100</span>)   <span class="hljs-comment">#设定该控件左上角坐标为x：100，y：100</span><br></code></pre></td></tr></table></figure><h2 id="常用控件"><a href="#常用控件" class="headerlink" title="常用控件"></a>常用控件</h2><table><thead><tr><th>控件</th><th>描述</th></tr></thead><tbody><tr><td>Button</td><td>按钮控件，与Label相似，除此之外提供鼠标悬浮，按下，释放以及键盘活动/事件</td></tr><tr><td>Canvas</td><td>画布控件；显示图形元素如线条或文本</td></tr><tr><td>CheckButton</td><td>多选框控件；用于在程序中提供多项选择框（与Html的checkbox类似）</td></tr><tr><td>Entry</td><td>输入控件；用于收集键盘输入</td></tr><tr><td>Frame</td><td>框架控件；在屏幕上显示一个矩形区域，多用来作为容器</td></tr><tr><td>Label</td><td>标签控件；可以显示文本和位图</td></tr><tr><td>Listbox</td><td>列表框控件；在Listbox窗口小部件是用来显示一个字符串列表给用户</td></tr><tr><td>Menubutton</td><td>菜单按钮控件，用于显示菜单项。</td></tr><tr><td>Menu</td><td>菜单控件；按下MenuButton后弹出的选项列表，显示菜单栏,下拉菜单和弹出菜单</td></tr><tr><td>Message</td><td>消息控件；与Label类似，用来显示多行文本，与label比较类似</td></tr><tr><td>Radiobutton</td><td>单选按钮控件；显示一个单选的按钮状态（与Html的radio类似）</td></tr><tr><td>Scale</td><td>范围控件；显示一个数值刻度，为输出限定范围的数字区间</td></tr><tr><td>Scrollbar</td><td>滚动条控件，当内容超过可视化区域时使用，为Text、Canvas、Listbox、及Enter等支持的控件提供滚动功能</td></tr><tr><td>Text</td><td>文本控件；用于显示多行文本</td></tr><tr><td>Toplevel</td><td>容器控件；用来提供一个单独的对话框，和Frame比较类似</td></tr><tr><td>Spinbox</td><td>输入控件；与Entry类似，但是可以指定输入范围值</td></tr><tr><td>PanedWindow</td><td>PanedWindow是一个窗口布局管理的插件，可以包含一个或者多个子控件。</td></tr><tr><td>LabelFrame</td><td>labelframe 是一个简单的容器控件。常用与复杂的窗口布局。</td></tr><tr><td>tkMessageBox</td><td>用于显示你应用程序的消息框。showinfo(title=’’,message=’’)</td></tr></tbody></table><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs py"><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-keyword">import</span> form<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">linear_regression</span>(<span class="hljs-params">x_train,y_train</span>):</span><br>    <span class="hljs-comment">#把数据放入模型进行训练</span><br>    form.lineModel.fit(x_train,y_train)<br><br>    <span class="hljs-comment">#用训练后的模型，进行预测</span><br>    y_predict = form.lineModel.predict(x_train)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;拟合值：&quot;</span>)<br>    <span class="hljs-built_in">print</span>(y_predict)<br>    <span class="hljs-comment">#coef_是系数，intercept_是截距</span><br>    a1 = form.lineModel.coef_[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br>    b = form.lineModel.intercept_[<span class="hljs-number">0</span>]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y=%.4fx+%.4f&quot;</span>%(a1,b))<br><br><br>    <span class="hljs-comment">#求误差</span><br>    ssr = <span class="hljs-built_in">sum</span>((y_train - np.average(y_train))**<span class="hljs-number">2</span>)<br>    sse = <span class="hljs-built_in">sum</span>((y_train - y_predict)**<span class="hljs-number">2</span>)<br>    sst = ssr + sse<br>    r2 = ssr / sst<br>    <span class="hljs-built_in">print</span>(ssr)<br>    <span class="hljs-built_in">print</span>(r2)<br><br>    <span class="hljs-comment">#画图显示</span><br>    plt.plot(x_train,y_predict,c=<span class="hljs-string">&quot;red&quot;</span>,label=<span class="hljs-string">&quot;公式：y=%.4fx+%.4f&quot;</span>%(a1,b)+<span class="hljs-string">&quot;\n参数：a=%.4f&quot;</span>%a1+<span class="hljs-string">&quot; b=%.4f&quot;</span>%b+<span class="hljs-string">&quot;\n误差：r^2=%.4f&quot;</span>%r2)<span class="hljs-comment">#拟合曲线</span><br>    plt.plot(x_train,y_train,<span class="hljs-string">&#x27;s&#x27;</span>)<br>    plt.xlabel(form.x_name.get()) <span class="hljs-comment">#x轴名称</span><br>    plt.ylabel(form.y_name.get()) <span class="hljs-comment">#y轴名称</span><br>    plt.legend() <span class="hljs-comment">#绘制图例</span><br>    plt.show()<br><br>    <span class="hljs-keyword">return</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tkinter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python操作ini配置文件</title>
    <link href="/2021/07/29/python%E6%93%8D%E4%BD%9Cini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <url>/2021/07/29/python%E6%93%8D%E4%BD%9Cini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="一、-ini文件说明"><a href="#一、-ini文件说明" class="headerlink" title="一、.ini文件说明"></a>一、.ini文件说明</h2><p>格式如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs py">;comments<br>[section1]<br>Param1 = value1<br>Param2= value2<br>[section2]<br>Param3= value3<br>Param4= value4<br></code></pre></td></tr></table></figure><ul><li>==;== 注释</li><li>==[section]==代表一个模块，一个文件内可以设置多个模块，自定义模块名称</li><li>==Param1 = value1==参数名称以及参数值，键值对的形式</li></ul><p>我的配置文件的内容为：</p><p>conf.ini</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs py">;设置语言<br>[lan]<br>language = Chinese<br></code></pre></td></tr></table></figure><h2 id="二、所需要的模块"><a href="#二、所需要的模块" class="headerlink" title="二、所需要的模块"></a>二、所需要的模块</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> configparser<br></code></pre></td></tr></table></figure><h2 id="三、读取操作"><a href="#三、读取操作" class="headerlink" title="三、读取操作"></a>三、读取操作</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs py">proDir = os.path.dirname(os.path.realpath(sys.argv[<span class="hljs-number">0</span>]))<br>    configPath = os.path.join(proDir,<span class="hljs-string">&quot;conf.ini&quot;</span>)<span class="hljs-comment">#获取配置文件的路径</span><br><br>    conf=configparser.ConfigParser()<span class="hljs-comment">#创建对象用于对配置文件进行操作</span><br>    conf.read(configPath,encoding=<span class="hljs-string">&quot;utf-8-sig&quot;</span>)<span class="hljs-comment">#以utf8编码形式读取</span><br>    <span class="hljs-keyword">try</span>:<br>        lan = conf.get(<span class="hljs-string">&quot;lan&quot;</span>,<span class="hljs-string">&quot;language&quot;</span>) <span class="hljs-comment">#读取配置文件设置的语言的值</span><br>    <span class="hljs-keyword">except</span>:<br>        lan = <span class="hljs-string">&quot;English&quot;</span><br></code></pre></td></tr></table></figure><p>读取的相关方法：</p><ul><li><p>==read(filename)==：读取文件内容</p></li><li><p>==sections()==：得到所有的section，并以列表的形式返回。</p></li><li><p>==options(section)==：得到该section的所有option。</p></li><li><p>==items(section)==：得到该section的所有键值对。</p></li><li><p>==get(section,option)==：得到section中option的值，返回string类型。</p></li><li><p>==getint(section,option)==：得到section中option的值，返回int类型。</p></li></ul><h2 id="四、写入操作"><a href="#四、写入操作" class="headerlink" title="四、写入操作"></a>四、写入操作</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment"># 修改配置文件中的语言</span><br>conf.<span class="hljs-built_in">set</span>(<span class="hljs-string">&quot;lan&quot;</span>,<span class="hljs-string">&quot;language&quot;</span>,<span class="hljs-string">&quot;Chinese&quot;</span>) <span class="hljs-comment">#设置&quot;lan&quot;模块下的&quot;language&quot;的值为&quot;Chinese&quot;</span><br>conf.write(<span class="hljs-built_in">open</span>(configPath,<span class="hljs-string">&#x27;w+&#x27;</span>,encoding=<span class="hljs-string">&quot;utf-8-sig&quot;</span>)) <span class="hljs-comment">#将修改写入到配置文件</span><br></code></pre></td></tr></table></figure><p>写入的相关方法：</p><ul><li><p>==write(fp)==：将config对象写入至某个ini格式的文件中。</p></li><li><p>==add_section(section)==：添加一个新的section。</p></li><li><p>==set(section,option,value)==：对section中的option进行设置，需要调用write将内容写入配置文件。</p></li><li><p>==remove_section(section)==：删除某个section。</p></li><li><p>==remove_option(section,option)==：删除某个section下的option</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ini配置文件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>世界六大经典配色</title>
    <link href="/2021/07/29/%E4%B8%96%E7%95%8C%E5%85%AD%E5%A4%A7%E7%BB%8F%E5%85%B8%E9%85%8D%E8%89%B2/"/>
    <url>/2021/07/29/%E4%B8%96%E7%95%8C%E5%85%AD%E5%A4%A7%E7%BB%8F%E5%85%B8%E9%85%8D%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="1、敦煌——最神秘的配色"><a href="#1、敦煌——最神秘的配色" class="headerlink" title="1、敦煌——最神秘的配色"></a>1、敦煌——最神秘的配色</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#ECD98B</span><br><span class="hljs-comment">#AAAAC2</span><br><span class="hljs-comment">#03875C</span><br><span class="hljs-comment">#9A4C43</span><br><span class="hljs-number">4E3227</span><br></code></pre></td></tr></table></figure><h2 id="2、洛可可——最优雅的配色"><a href="#2、洛可可——最优雅的配色" class="headerlink" title="2、洛可可——最优雅的配色"></a>2、洛可可——最优雅的配色</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#D38490</span><br><span class="hljs-comment">#A9ABAE</span><br><span class="hljs-comment">#C4493A</span><br><span class="hljs-comment">#90B07A</span><br><span class="hljs-comment">#768BA0</span><br></code></pre></td></tr></table></figure><h2 id="3、孟菲斯——最靓丽的配色"><a href="#3、孟菲斯——最靓丽的配色" class="headerlink" title="3、孟菲斯——最靓丽的配色"></a>3、孟菲斯——最靓丽的配色</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs PY"><span class="hljs-comment">#EFD55E</span><br><span class="hljs-comment">#89D0C2</span><br><span class="hljs-comment">#F77A82</span><br><span class="hljs-comment">#B7AACB</span><br><span class="hljs-comment">#077ABD</span><br></code></pre></td></tr></table></figure><h2 id="4、马卡龙——最甜美的配色"><a href="#4、马卡龙——最甜美的配色" class="headerlink" title="4、马卡龙——最甜美的配色"></a>4、马卡龙——最甜美的配色</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs PY"><span class="hljs-comment">#B7E0FF</span><br><span class="hljs-comment">#CFEADC</span><br><span class="hljs-comment">#FBEDCA</span><br><span class="hljs-comment">#768BA0</span><br><span class="hljs-comment">#FEDEE1</span><br></code></pre></td></tr></table></figure><h2 id="5、蒙德里安——最惊艳的配色"><a href="#5、蒙德里安——最惊艳的配色" class="headerlink" title="5、蒙德里安——最惊艳的配色"></a>5、蒙德里安——最惊艳的配色</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#FFFF00</span><br><span class="hljs-comment">#25D4D0</span><br><span class="hljs-comment">#F20D0D</span><br><span class="hljs-comment">#0000FF</span><br><span class="hljs-comment">#000000</span><br></code></pre></td></tr></table></figure><h2 id="6、莫兰迪——最舒服的配色"><a href="#6、莫兰迪——最舒服的配色" class="headerlink" title="6、莫兰迪——最舒服的配色"></a>6、莫兰迪——最舒服的配色</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs PY"><span class="hljs-comment">#E8EADC</span><br><span class="hljs-comment">#D6C7B2</span><br><span class="hljs-comment">#D39394</span><br><span class="hljs-comment">#71838F</span><br><span class="hljs-comment">#E5CC96</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端设计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>配色</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
